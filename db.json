{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/jquery.js","path":"js/jquery.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/sakura.js","path":"js/sakura.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/algolia.svg","path":"img/algolia.svg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/icp.png","path":"img/icp.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/third-party/ClickShowText.js","path":"js/third-party/ClickShowText.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/third-party/activate-power-mode.js","path":"js/third-party/activate-power-mode.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/third-party/canvas-nest.js","path":"js/third-party/canvas-nest.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/third-party/canvas-ribbon.js","path":"js/third-party/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/third-party/click_heart.js","path":"js/third-party/click_heart.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/third-party/fireworks.js","path":"js/third-party/fireworks.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/third-party/piao.js","path":"js/third-party/piao.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"24f0dbcec3eb907f32829377c83fd9cd1546ed42","modified":1599981064578},{"_id":"source/_data/link.yml","hash":"75bb6712d75bdabb0c4fc3414317df5fe840e9b3","modified":1599988452225},{"_id":"source/background-photo/index.md","hash":"ef8ecb364b26502df523769e70653cf005793f5b","modified":1599981064579},{"_id":"source/_posts/CentOS搭建GitLab服务器.md","hash":"4fea105b384264ae1c6da42c8bd30caa7505090d","modified":1599986205137},{"_id":"source/_posts/Mybatis学习总结.md","hash":"53402aec0f8365f1e0d031a8ca0c9d65c9c44cff","modified":1599986357308},{"_id":"source/categories/index.md","hash":"d2dd63c9c27626f75a6c081388b415798900fbc4","modified":1599981064579},{"_id":"source/_posts/模板模式.md","hash":"9ab674cadc7094edbb703b4167dedf3bc10137d7","modified":1599994889701},{"_id":"source/link/index.md","hash":"ff3484540ccc38e1785aeb2f06f9423c35b2c178","modified":1599981064579},{"_id":"source/photos/index.md","hash":"b0dc19091dda6033bb353f3c58b015e9456daeb8","modified":1599981064580},{"_id":"source/tags/index.md","hash":"44439860578d906f01170b9d80c78b56c14fbc0c","modified":1599981064580},{"_id":"source/tools/index.md","hash":"b2188f83ca01f272066c180b72d1ee0bf8e2f6d4","modified":1599981064580},{"_id":"themes/butterfly/package.json","hash":"fd31e812cbe1ced7a396a94a201dd99c6c4fcd76","modified":1599981064606},{"_id":"themes/butterfly/languages/default.yml","hash":"fd548d85a8df34286f72274a415dcc30c18ce44f","modified":1599981064581},{"_id":"themes/butterfly/_config.yml","hash":"ca629b602cd901e4ad04fb0c51179495492b30f7","modified":1599981064581},{"_id":"themes/butterfly/languages/en.yml","hash":"fd548d85a8df34286f72274a415dcc30c18ce44f","modified":1599981064581},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"adc016d0e7dcc5cbaf9e22c68c0e051227e77295","modified":1599981064582},{"_id":"themes/butterfly/layout/category.pug","hash":"d014234c26d2c07caaea6703f7b48cb69c51907d","modified":1599981064583},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"bbb6cf3cb266994966e43e4f85c7cd406a098057","modified":1599981064582},{"_id":"themes/butterfly/layout/flink.pug","hash":"308b706f2326e792d75337a3bbdba16d336efa62","modified":1599981064583},{"_id":"themes/butterfly/layout/404.pug","hash":"70ca086e151a769a8825c22d024acef0664c2c28","modified":1599981064582},{"_id":"themes/butterfly/layout/archive.pug","hash":"bd62286afb64a51c97e800c5945620d51605d5fa","modified":1599981064582},{"_id":"themes/butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1599981064604},{"_id":"themes/butterfly/layout/page.pug","hash":"cd21633a48082707e59871b01135efc0a6e8b006","modified":1599981064605},{"_id":"themes/butterfly/layout/post.pug","hash":"1eb758bfd3f4f20259444afbc6191edc269884b7","modified":1599981064605},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"0101630649f7b578a2c9ef7beaa1c9b8fb307c7a","modified":1599981064583},{"_id":"themes/butterfly/layout/tag.pug","hash":"3bb2a700c6d709d2757d55d357eed1fca5644e24","modified":1599981064605},{"_id":"themes/butterfly/layout/tools.pug","hash":"a2eb11980d5afc9f4dba800985fe110611193df5","modified":1599981064605},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"126a6d5bbdf098f69762e4288845ea66ed5ebc98","modified":1599981064584},{"_id":"themes/butterfly/scripts/events/404.js","hash":"3c30dbd8b910ce7d8d7d8353cf2266cbc5d8775d","modified":1599981064606},{"_id":"themes/butterfly/scripts/events/check_hexo.js","hash":"15c58a4cb86f64581f71c37d9f2e1395e22a52bf","modified":1599981064606},{"_id":"themes/butterfly/scripts/events/replace_config.js","hash":"cdb4f462bceb155f59b98cd705efadbdc1fb5309","modified":1599981064606},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"d575137c8779e50422c2416f4d0832fdea346ee6","modified":1599981064606},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"79ef449c5e04d0ecb4b9980d419ecbaf3d54d35a","modified":1599981064592},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"2dea24bf9ed60156770545eb1c6ccf07dfd4220b","modified":1599981064588},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"e9cf275c362d8634f093e63068da7ed1e53c7600","modified":1599981064607},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"283e1169c4f3adbf8affb3ed906e3d484c196a7a","modified":1599981064607},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"7e40f62867353c33c8efb32dd391da173925c705","modified":1599981064607},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"ef0acdde0825973690ccd65bb28e484224f9cb8b","modified":1599981064607},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"d47bc847d30005b6a4a69d32832e551c1a348fc4","modified":1599981064607},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"1ce02bf292c9dba6625dfbcc78a5c77e1d76b4bd","modified":1599981064584},{"_id":"themes/butterfly/scripts/tags/button.js","hash":"e75283267f3a4773e6d803593d557e218396f260","modified":1599981064608},{"_id":"themes/butterfly/scripts/tags/gallery.js","hash":"77e657eb74a7718b7e11e04284827e4a85805b86","modified":1599981064608},{"_id":"themes/butterfly/scripts/tags/ghcard.js","hash":"afd4825eb86274518f551acf1292afd80761d962","modified":1599981064608},{"_id":"themes/butterfly/scripts/tags/hide.js","hash":"ea5939e3d5b3d3106527093a4fe0adaaf1fef2f8","modified":1599981064609},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"4ee6ffe000a52e6a3ac393ee47c4fca38b8cccf7","modified":1599981064608},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"296248c1e26b3378f8cc8f11b005ce8b2e280c52","modified":1599981064593},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"c10836fd167c0401bf16ae2a1604c85462241ba2","modified":1599981064593},{"_id":"themes/butterfly/scripts/tags/mermaid.js","hash":"f358a6a5b7979290263e5b02766d0b9449e60841","modified":1599981064609},{"_id":"themes/butterfly/scripts/tags/note.js","hash":"7fa9d0500276a38be28bee9ebf1bb4443c77ba5b","modified":1599981064609},{"_id":"themes/butterfly/scripts/tags/site.js","hash":"51f4a8b26379ed54868a260cbf7129c9c3358fc3","modified":1599981064609},{"_id":"themes/butterfly/scripts/tags/tabs.js","hash":"1f3bff5bbab30bb103e256ea6fb5b71a1bfe6dc1","modified":1599981064609},{"_id":"themes/butterfly/source/css/index.styl","hash":"9cf8797083e6fa22d26a2cfe85b1ebb8a5a8c718","modified":1599981064619},{"_id":"themes/butterfly/source/css/var.styl","hash":"440f8974756955b11f302f0c8a93666d44c4bbc4","modified":1599981064619},{"_id":"themes/butterfly/source/js/main.js","hash":"de6c0810af70b6773fffef61e8abcc8f2db752ab","modified":1599981064624},{"_id":"themes/butterfly/source/js/sakura.js","hash":"c10e1b69c5f122fa748270bca5df5a3ffc8db0da","modified":1599981064625},{"_id":"themes/butterfly/source/js/utils.js","hash":"ad37327c20e4b2ef63b33ee815da96f7a4a00a2a","modified":1599981064627},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"6d5aaa12b9afca692165c88ef76ace308ac1c8c2","modified":1599981064627},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1599981064619},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1599981064620},{"_id":"themes/butterfly/source/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1599981064619},{"_id":"themes/butterfly/source/img/icp.png","hash":"cb1fd69b38ec23ce8366668ddffbbd0160de0104","modified":1599981064620},{"_id":"themes/butterfly/layout/includes/custom/coverTypeWriter.ejs","hash":"d55fc941b4cb712ac25db852625053b56ab92687","modified":1599981064583},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1599981064620},{"_id":"themes/butterfly/source/img/loading.gif","hash":"5f0287fb8fb98872fe1998c6f781111819e71806","modified":1599981064621},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"a3c819238dceab080d5db0336ef07009ca216310","modified":1599981064584},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"afb58249ddd121e5a8cf5d289fe215e15b90b82a","modified":1599981064585},{"_id":"themes/butterfly/layout/includes/custom/rightmenu.ejs","hash":"1e27f920b78bc993e8a68f7a4b156f97ac768411","modified":1599981064584},{"_id":"themes/butterfly/layout/includes/custom/customFooter.ejs","hash":"2cf4dd5354136c1d8a14b227aa1f73551f4d4c6f","modified":1599981064584},{"_id":"themes/butterfly/layout/includes/head/aplayer.pug","hash":"b24959f00ac75f12f66b445158aad143ee860795","modified":1599981064585},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"4936263d44f3df51ffe2d729cd32b36f56c5fdc4","modified":1599981064585},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"8df13e06cdfff76003e0c5e77ff309091027a766","modified":1599981064585},{"_id":"themes/butterfly/layout/includes/head/darkmode.pug","hash":"a8db525c3e160e99644d88368e30cc726a0d30fe","modified":1599981064585},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1599981064586},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"1912f7e0bf7ddbfc386485ee4856fb1cd0b08a74","modified":1599981064586},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"1a6715d6b570ac2bbaa7647524c6262135b43a73","modified":1599981064586},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1599981064586},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"62cf37e28795d8b68a0e850ec8c94987b9e08db5","modified":1599981064586},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"12dc74a7370b8d00f010e6914c09b1b12343fd92","modified":1599981064587},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"14cd0f9c0c578512896b487263cd48570d74771a","modified":1599981064587},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"7509981bcd5c5974f305a045c32ed3da754251e4","modified":1599981064587},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"0d953e51d04a9294a64153c89c20f491a9ec42d4","modified":1599981064588},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"26f1955e89894dfb54573e616880ab6fad878f2d","modified":1599981064587},{"_id":"themes/butterfly/layout/includes/loading/loading-js.pug","hash":"3cf431a4f04997b55873f7099c1402155b19cc95","modified":1599981064589},{"_id":"themes/butterfly/layout/includes/loading/loading.pug","hash":"5276937fbcceb9d62879dc47be880cd469a27349","modified":1599981064589},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"68dfd3c6a0f00b3ffc0333c81e165b4626f7425f","modified":1599981064590},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"5ef0487d7418d845b917c9596e31b14c4e533f73","modified":1599981064590},{"_id":"themes/butterfly/layout/includes/mobile-sidebar/index.pug","hash":"d12fab033fb32b55abbc9be9b04cc6ab6465b98e","modified":1599981064591},{"_id":"themes/butterfly/layout/includes/mobile-sidebar/mobile-menus.pug","hash":"b13d95c53c5031e6305ec1fe83d6758f52fa96ee","modified":1599981064591},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"88e3b611b03149665e4113cfa39595c1a3fca7e5","modified":1599981064592},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"bab59f87da66386e5abc84550614752c660a0705","modified":1599981064592},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"58d782e47c5f89143ec4d42e8970fd8eb8f1faec","modified":1599981064597},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"abce595b5b8887577af07a8e2644fd76d2443556","modified":1599981064600},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"a60f538fb9d819b4a13a938296606638c605e6b2","modified":1599981064600},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"1fbecfd299068f90d727f0c8c65e2a792fa6e3e2","modified":1599981064600},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"907636bda4cbf9ca6f4e943bb49f18c282f2786f","modified":1599981064602},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"2e940de1a6261fd378e16e4cd3362a9d69c12f50","modified":1599981064602},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"6d9c7cda3a5c19ac53cbe548b3df09050c621db3","modified":1599981064602},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"393a6f9a5dcabe8d96e9b6cb5620c12966dfd37f","modified":1599981064603},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"623d0079f1fe453f2b2f53fe954b175b33ed2b54","modified":1599981064603},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"83cb6ba0d8c913570147b3871c7fc0674dac8cdf","modified":1599981064603},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"b9b371a4aa3f2b088ceb9b20c9e39ee82e730a88","modified":1599981064603},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"196dc7ceaeb9a6da861f91af86438b86b25c8378","modified":1599981064603},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"2b78fb1ed7fa91dc0957d025d2e4561522db4d7a","modified":1599981064604},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"b1cdd519743dd5c50204f0446a09c1b670ba2a54","modified":1599981064604},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"ce316dc8aba2bf5556b9637124b64ef68ad4c6ad","modified":1599981064604},{"_id":"themes/butterfly/source/css/_custom/custom.styl","hash":"134356b7cc94c94992acec7164c14cb49fbbb409","modified":1599981064610},{"_id":"themes/butterfly/source/css/_custom/rightmenu.styl","hash":"e017f299d7cd179a08e343452a0f2840497e33cd","modified":1599981064610},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"7291446c24c6fac234188023056a1da9c514b943","modified":1599981064610},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"c2dabfc296843e68a6019ccac55fc5de667d741f","modified":1599981064610},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"cdd2634fefe991b00492435af7de629a1caca23f","modified":1599981064615},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"4a0c674840be2ec8096093d71df0a38b2a3e8314","modified":1599981064615},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"36695e216d6f55df636a850a67f93972fda5feb9","modified":1599981064611},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"0e840a7b25c0ffa579a31a352f03fd3892d013e9","modified":1599981064612},{"_id":"themes/butterfly/source/css/_layout/404.styl","hash":"cd930735151d6a1ac41fb44e2907106417c51caa","modified":1599981064612},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"628be35c91232104c773eec658d1fac0e7afaeb0","modified":1599981064612},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"29f48f9370f245e6e575b5836bccf47eb5688d8b","modified":1599981064612},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"8d5f3fee0a85b47e17f298e7342beb830a0f5297","modified":1599981064613},{"_id":"themes/butterfly/source/css/_layout/flink.styl","hash":"43f00986410f3dc0eed9e0bf9478801da32be24f","modified":1599981064613},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"fd825c9d71fcd06a7c882850d1db0e9637f84107","modified":1599981064613},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"58d75ca0c90397afd28a816bb8201b71e80f50c0","modified":1599981064613},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"1ecf95222e6d29ecb6f69033e4e24cc4583652df","modified":1599981064613},{"_id":"themes/butterfly/source/css/_layout/mobile-sidebar.styl","hash":"a554125aa5dd674182c35684179b2aac1cd83f2b","modified":1599981064614},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"4ae68b64ea0137427edf095190d0b7a6bf72b4a4","modified":1599981064614},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"8d9facb50c0ded8bfcffe3d924cb2e7e4eefa168","modified":1599981064614},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"49b7e06211053011ef5d3fe40acb6be485161041","modified":1599981064614},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"7bf7af4754baba07edfc614621bdb965442cdc2f","modified":1599981064614},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"6ea8b4142e7d84ed2c99c7ed36d4066c0b8db42e","modified":1599981064614},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"cf322be6e7e20bfe6993ac76143ffc6d4c52b6d4","modified":1599981064615},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"8070cbe32c13db96b03775bf1520503dd5191147","modified":1599981064615},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"6874adc2e276443f354bbe50d0072e9bec37243c","modified":1599981064615},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"8897faaebb4e470d3e08776f4ac8cb1eda27fc57","modified":1599981064616},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"21b82c9b98af50a062297a6bf3f4608589f15bba","modified":1599981064616},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"e85e4b6bff9ca4cb9f2376e39994ba8e89ec5ff5","modified":1599981064616},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9fc8323b27044ce7909b33e2b59500a68688e290","modified":1599981064616},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"f718eec64b4586db169f566f403c6e5ad5d2af02","modified":1599981064616},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"89e744abc5e41f4855e7b87b13b854f4ec4ffc0e","modified":1599981064616},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"5e9423070e22df2522dac0a8e8be6f40ecae507a","modified":1599981064617},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"39f54f4cb3dcc7522d2efd09d5d6ec6209b5fb29","modified":1599981064617},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"6e74130e3cc5598d15a2f37fc558cc0086c11c66","modified":1599981064617},{"_id":"themes/butterfly/source/css/_tags/ghcard.styl","hash":"1f2585e9ed92674d51bde2355bc44f2f0b0094ac","modified":1599981064617},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d0386ba6d8d63afc72b9673e8f3e89df6446ffc2","modified":1599981064617},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"8a34b42392cfe84212ec3d8911dde28a3f52815c","modified":1599981064618},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"41a92e96c66dececcad050ada2201de196f5f697","modified":1599981064618},{"_id":"themes/butterfly/source/css/_tags/site-card.styl","hash":"4f477c199dc1844b6b5e9da572adb5a107538727","modified":1599981064618},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"1756791581c0ec51cb03353a09dac4778d944349","modified":1599981064618},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1599981064618},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"99bc7ef172e9af332d652e92c5ec8b9ec1481434","modified":1599981064625},{"_id":"themes/butterfly/source/js/third-party/activate-power-mode.js","hash":"2c4ab494225b7d04eed934efc43a43791e596f4a","modified":1599981064626},{"_id":"themes/butterfly/source/js/third-party/ClickShowText.js","hash":"32864aee35b5d739a36702b8d916b17bac52b17e","modified":1599981064626},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"591c1a91601287ab6d21e90bebf697792c785c10","modified":1599981064625},{"_id":"themes/butterfly/source/js/third-party/canvas-nest.js","hash":"38cb4f2b025f6354124dadb69fe0e0ce57d35094","modified":1599981064626},{"_id":"themes/butterfly/source/js/third-party/canvas-ribbon.js","hash":"1ddf4f6896175e77518f0fbd45776132b2954fb6","modified":1599981064626},{"_id":"themes/butterfly/source/js/third-party/click_heart.js","hash":"004ea645ed8c5e354711b5fc0dbfe015e181916b","modified":1599981064626},{"_id":"themes/butterfly/source/js/third-party/fireworks.js","hash":"411ced4031a856a5b87f7c62d3800027d12bacec","modified":1599981064627},{"_id":"themes/butterfly/source/js/third-party/piao.js","hash":"8846788202ee4ad18a814fa492ac39bb7f09548a","modified":1599981064627},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"481cd5053bafb1a19f623554a27d3aa077ea59c3","modified":1599981064593},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"76634112c64023177260d1317ae39cef2a68e35f","modified":1599981064593},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"cfe63e7d26a6665df6aa32ca90868ad48e05ec04","modified":1599981064593},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"d1d2474420bf4edc2e43ccdff6f92b8b082143df","modified":1599981064594},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"3f05f8311ae559d768ee3d0925e84ed767c314d3","modified":1599981064594},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"24a926756c2300b9c561aaab6bd3a71fdd16e16d","modified":1599981064594},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"8d1297b79ee4a92842d76a0d720a2fe782d144b2","modified":1599981064594},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"9d933e6f8659199f1e20ce76aca0001b338b5d05","modified":1599981064594},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"71cf3d056b1a11e8a5e2980979af1c6b0248d762","modified":1599981064595},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"489256e1ef1252b8c30a4bab57e54d881263dc63","modified":1599981064595},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"95c73e810fccf94b70cf0b8727fff2072df7a323","modified":1599981064595},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"a42ee0f5a7f606d752f7b9dd92b6234d991f518d","modified":1599981064595},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"bd60d138704c86a4a8af9573ff3313135c97ef1a","modified":1599981064596},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"e2ba99a98d8e1b54252eed079d71b814266b2b07","modified":1599981064596},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"2c87fb060e4a366276d16bf49ce211a1f205f92c","modified":1599981064596},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"53af4ffa8119c7bbba3f066de74845be91400b5b","modified":1599981064597},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"73356f1068c7426597e268d6c4aefa2b0ac3a1d9","modified":1599981064597},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"b1ae0c11a1ec73273cb55d7e2f9506f038633937","modified":1599981064597},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"fdd0187307e8c708507c21aa71a2f7d9b040c431","modified":1599981064598},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"1310800bc30b4e1cad93982991041589ee70ffef","modified":1599981064597},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"e67a95ca1034023fd8151ca901eafced8ff50c87","modified":1599981064599},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"bd9ed1a0e67b70e0bc90f553c51bf880aea46aeb","modified":1599981064599},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"debc2e0a4747dc821df9ee99c341230cf20916c2","modified":1599981064600},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/leancloud.pug","hash":"b8e000c5e98ff160bcb1ca9ca76f413105e98f28","modified":1599981064599},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"da3b9437d061ee68dbc383057db5c73034c49605","modified":1599981064600},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1599981064601},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"a623a9b495ff13485d73acc51541085776dd04d2","modified":1599981064601},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"309f51bc5302e72fc469d54c577fbcfe57fb07a8","modified":1599981064601},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"c40f7d6973811e53fcfbe881174ab373b4ea03ad","modified":1599981064601},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"368f5f75c506db77e4e1a20c29e9a3e2b4c3d783","modified":1599981064602},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"13d92a9dbba94fd2cf2608dfffb6e029fa47d2a5","modified":1599981064611},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"356d3e110f93430e5515afcd88a3814ac9895623","modified":1599981064611},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1599981064611},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"7574576b27d55d2281e67072981a1c3d0ad6a15f","modified":1599981064611},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"d40f1baec16c4a62e4a3a9a0379d1ca3ac6746b2","modified":1599981064612},{"_id":"themes/butterfly/source/js/jquery.js","hash":"56863e3467e0b35627b8300f86091a00a5925f4b","modified":1599981064623},{"_id":"public/search.xml","hash":"81b99346fed7d71878313f15918c442dcf6f1e34","modified":1599994900476},{"_id":"public/404.html","hash":"6dc56abeaab7efc986b9b43f7cf30d92fa01e616","modified":1599994900476},{"_id":"public/background-photo/index.html","hash":"78910b6658efe660342f5bbef3f43751bef1b424","modified":1599994900476},{"_id":"public/categories/index.html","hash":"b2bdfcdd242f45979af394f4f46a51ac30b12efc","modified":1599994900476},{"_id":"public/link/index.html","hash":"c8427406bf9e103908c159a6e5429f6581d83033","modified":1599994900476},{"_id":"public/photos/index.html","hash":"26469a84af43a0142bd444485cf34bb97ba39c64","modified":1599994900476},{"_id":"public/tags/index.html","hash":"f33845de4b2f1addedc2a73325f38a8cd6d1b3c2","modified":1599994900476},{"_id":"public/tools/index.html","hash":"142abdcb02f1f3ae2693d1c86523ba32d14ceaf3","modified":1599994900476},{"_id":"public/posts/202009131022.html","hash":"0833c3372b4eb7502fd44ba23ac479b02d0230b9","modified":1599994900476},{"_id":"public/posts/202006030942.html","hash":"a3f3911001f6347304578ba6b52e011e2ac92c2b","modified":1599994900476},{"_id":"public/posts/202005250941.html","hash":"c55990f8e47f10cef90d6f4b89a204fcf3f69d1a","modified":1599994900476},{"_id":"public/archives/index.html","hash":"865ceff82aebbf812bd4f1368dca719a97baea4d","modified":1599994900476},{"_id":"public/archives/2020/index.html","hash":"4dcde0a120681bb82d3893d81c75689b3056f552","modified":1599994900476},{"_id":"public/archives/2020/05/index.html","hash":"4394df5c9baff70de6c527ff2ed0442b3c6fd020","modified":1599994900476},{"_id":"public/archives/2020/09/index.html","hash":"bc60c42a865537e705188798c1159edaea33344e","modified":1599994900476},{"_id":"public/categories/Gitlab/index.html","hash":"585bbf23cf137424e707245fb5e42e7965d9178f","modified":1599994900476},{"_id":"public/index.html","hash":"90c4dbd854d69fe7ceea10f7831cb48ff38f782c","modified":1599994900476},{"_id":"public/tags/Gitlab/index.html","hash":"fbba36d8ff4399c079f3667b3be758c91e196038","modified":1599994900476},{"_id":"public/tags/安装手册/index.html","hash":"838cdf693a68be9d1d41404bfa858081d4e711f3","modified":1599994900476},{"_id":"public/tags/Mybatis/index.html","hash":"6324c460d3686085d8a9376c63b331de1c3d4eb1","modified":1599994900476},{"_id":"public/tags/模板模式/index.html","hash":"293aabcb9d8976e2eb6886af7b14d998aedd0ffb","modified":1599994900476},{"_id":"public/CNAME","hash":"24f0dbcec3eb907f32829377c83fd9cd1546ed42","modified":1599994900476},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1599994900476},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1599994900476},{"_id":"public/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1599994900476},{"_id":"public/img/icp.png","hash":"cb1fd69b38ec23ce8366668ddffbbd0160de0104","modified":1599994900476},{"_id":"public/img/loading.gif","hash":"5f0287fb8fb98872fe1998c6f781111819e71806","modified":1599994900476},{"_id":"public/lib/blog-encrypt.js","hash":"91fda12d550323056762c5408623eb8a1d201ecc","modified":1599994900476},{"_id":"public/css/blog-encrypt.css","hash":"22e25b0d16ea053d25eb971e038c817a4c9cb584","modified":1599994900476},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1599994900476},{"_id":"public/js/utils.js","hash":"ad37327c20e4b2ef63b33ee815da96f7a4a00a2a","modified":1599994900476},{"_id":"public/js/search/algolia.js","hash":"99bc7ef172e9af332d652e92c5ec8b9ec1481434","modified":1599994900476},{"_id":"public/js/search/local-search.js","hash":"591c1a91601287ab6d21e90bebf697792c785c10","modified":1599994900476},{"_id":"public/js/third-party/ClickShowText.js","hash":"32864aee35b5d739a36702b8d916b17bac52b17e","modified":1599994900476},{"_id":"public/js/third-party/activate-power-mode.js","hash":"2c4ab494225b7d04eed934efc43a43791e596f4a","modified":1599994900476},{"_id":"public/js/third-party/canvas-nest.js","hash":"38cb4f2b025f6354124dadb69fe0e0ce57d35094","modified":1599994900476},{"_id":"public/js/third-party/canvas-ribbon.js","hash":"1ddf4f6896175e77518f0fbd45776132b2954fb6","modified":1599994900476},{"_id":"public/js/third-party/click_heart.js","hash":"004ea645ed8c5e354711b5fc0dbfe015e181916b","modified":1599994900476},{"_id":"public/js/third-party/fireworks.js","hash":"411ced4031a856a5b87f7c62d3800027d12bacec","modified":1599994900476},{"_id":"public/js/third-party/piao.js","hash":"8846788202ee4ad18a814fa492ac39bb7f09548a","modified":1599994900476},{"_id":"public/css/var.css","hash":"c75295c667c84d789f6523f678b92b00f92eccac","modified":1599994900476},{"_id":"public/css/index.css","hash":"9b96e0d5da655310f72f347f933ff2e1b300ad35","modified":1599994900476},{"_id":"public/js/main.js","hash":"de6c0810af70b6773fffef61e8abcc8f2db752ab","modified":1599994900476},{"_id":"public/js/tw_cn.js","hash":"6d5aaa12b9afca692165c88ef76ace308ac1c8c2","modified":1599994900476},{"_id":"public/js/sakura.js","hash":"c10e1b69c5f122fa748270bca5df5a3ffc8db0da","modified":1599994900476},{"_id":"public/js/jquery.js","hash":"56863e3467e0b35627b8300f86091a00a5925f4b","modified":1599994900476}],"Category":[{"name":"Gitlab","_id":"ckf0znjdn0003p27j7a7wcpqa"}],"Data":[{"_id":"link","data":[{"class_name":null,"class_desc":"朋友圈 ———— 花径不曾缘客扫，蓬门今始为君开","link_list":[{"name":"Xu’s Blog","link":"https://hasaik.com","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/xuxu_icon.jpg","descr":"简单不先于复杂，而是在复杂之后"},{"name":"Yuning’s Blog","link":"https://yuning.life","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/Yuning_avatar.jpg","descr":"懒人没有左右铭~"}]},{"class_name":null,"class_desc":"技术大拿 ———— 没有不劳而获的工作，更没有坐享其成的收获","link_list":[{"name":"小康博客","link":"https://www.antmoe.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/links/小康博客.jpg","descr":"一个收藏回忆与分享技术的地方"}]},{"class_name":null,"class_desc":"使用工具","link_list":[{"name":"TinyPNG","link":"https://tinypng.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/tools/tinypng.png","descr":"图片在线压缩"},{"name":"Itemo","link":"https://webgradients.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/itmeo_icon.jpg","descr":"多种多样的渐变色"},{"name":"Easyicon","link":"https://www.easyicon.net/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/easy_icon.png","descr":"图标下载库"},{"name":"WallpaperAccess","link":"https://wallpaperaccess.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/wallpaperaccess_icon.png","descr":"高清图片"},{"name":"彼岸图库","link":"http://pic.netbian.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/bian_icon.png","descr":"超清壁纸"},{"name":"搞定抠图","link":"https://www.gaoding.com/koutu","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/gaoding_icon.png","descr":"免费在线抠图"},{"name":"Iconfont","link":"https://www.iconfont.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/iconfont.png","descr":"阿里矢量图标库"},{"name":"Flaticon","link":"https://www.flaticon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/flaticon.png","descr":"超好看的图标库"},{"name":"Font Awesome","link":"https://fontawesome.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/fontawesome.png","descr":"图标字体库"},{"name":"Linux 命令搜索","link":"http://www.atoolbox.net/Tool.php?Id=826","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/linux_icon.png","descr":"Linux 命令行帮助查询"},{"name":"processon","link":"https://www.processon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/process_icon.png","descr":"流程图、时序图"},{"name":"Canva","link":"https://www.canva.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/canva_icon.png","descr":"精品原创模板"}]}]}],"Page":[{"title":"background-photo","date":"2020-09-09T09:26:06.000Z","type":"背景图","top_img":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/pkq_bg.png","_content":"{% gallery %}\n![pkq_bg](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/photo/background-photo/pkq_bg.png)\n{% endgallery %}\n","source":"background-photo/index.md","raw":"---\ntitle: background-photo\ndate: 2020-09-09 09:26:06\ntype: \"背景图\"\ntop_img: https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/pkq_bg.png\n---\n{% gallery %}\n![pkq_bg](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/photo/background-photo/pkq_bg.png)\n{% endgallery %}\n","updated":"2020-09-13T07:11:04.579Z","path":"background-photo/index.html","comments":1,"layout":"page","_id":"ckf0znjd50000p27jgszb3o7j","content":"<div class=\"justified-gallery\"><p><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/photo/background-photo/pkq_bg.png\" alt=\"pkq_bg\"></p>\n          </div>\n","site":{"data":{"link":[{"class_name":null,"class_desc":"朋友圈 ———— 花径不曾缘客扫，蓬门今始为君开","link_list":[{"name":"Xu’s Blog","link":"https://hasaik.com","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/xuxu_icon.jpg","descr":"简单不先于复杂，而是在复杂之后"},{"name":"Yuning’s Blog","link":"https://yuning.life","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/Yuning_avatar.jpg","descr":"懒人没有左右铭~"}]},{"class_name":null,"class_desc":"技术大拿 ———— 没有不劳而获的工作，更没有坐享其成的收获","link_list":[{"name":"小康博客","link":"https://www.antmoe.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/links/小康博客.jpg","descr":"一个收藏回忆与分享技术的地方"}]},{"class_name":null,"class_desc":"使用工具","link_list":[{"name":"TinyPNG","link":"https://tinypng.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/tools/tinypng.png","descr":"图片在线压缩"},{"name":"Itemo","link":"https://webgradients.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/itmeo_icon.jpg","descr":"多种多样的渐变色"},{"name":"Easyicon","link":"https://www.easyicon.net/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/easy_icon.png","descr":"图标下载库"},{"name":"WallpaperAccess","link":"https://wallpaperaccess.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/wallpaperaccess_icon.png","descr":"高清图片"},{"name":"彼岸图库","link":"http://pic.netbian.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/bian_icon.png","descr":"超清壁纸"},{"name":"搞定抠图","link":"https://www.gaoding.com/koutu","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/gaoding_icon.png","descr":"免费在线抠图"},{"name":"Iconfont","link":"https://www.iconfont.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/iconfont.png","descr":"阿里矢量图标库"},{"name":"Flaticon","link":"https://www.flaticon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/flaticon.png","descr":"超好看的图标库"},{"name":"Font Awesome","link":"https://fontawesome.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/fontawesome.png","descr":"图标字体库"},{"name":"Linux 命令搜索","link":"http://www.atoolbox.net/Tool.php?Id=826","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/linux_icon.png","descr":"Linux 命令行帮助查询"},{"name":"processon","link":"https://www.processon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/process_icon.png","descr":"流程图、时序图"},{"name":"Canva","link":"https://www.canva.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/canva_icon.png","descr":"精品原创模板"}]}]}},"cover":"https://i.loli.net/2020/05/01/IuWi8QbHvzjlOPw.jpg","excerpt":"","more":"<div class=\"justified-gallery\"><p><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/photo/background-photo/pkq_bg.png\" alt=\"pkq_bg\"></p>\n          </div>\n"},{"title":"分类","date":"2020-08-30T19:18:39.000Z","type":"categories","top_img":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/bg_one.png","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2020-08-30 19:18:39\ntype: \"categories\"\ntop_img: https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/bg_one.png\n---\n","updated":"2020-09-13T07:11:04.579Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckf0znjdm0002p27j0ped9573","content":"","site":{"data":{"link":[{"class_name":null,"class_desc":"朋友圈 ———— 花径不曾缘客扫，蓬门今始为君开","link_list":[{"name":"Xu’s Blog","link":"https://hasaik.com","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/xuxu_icon.jpg","descr":"简单不先于复杂，而是在复杂之后"},{"name":"Yuning’s Blog","link":"https://yuning.life","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/Yuning_avatar.jpg","descr":"懒人没有左右铭~"}]},{"class_name":null,"class_desc":"技术大拿 ———— 没有不劳而获的工作，更没有坐享其成的收获","link_list":[{"name":"小康博客","link":"https://www.antmoe.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/links/小康博客.jpg","descr":"一个收藏回忆与分享技术的地方"}]},{"class_name":null,"class_desc":"使用工具","link_list":[{"name":"TinyPNG","link":"https://tinypng.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/tools/tinypng.png","descr":"图片在线压缩"},{"name":"Itemo","link":"https://webgradients.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/itmeo_icon.jpg","descr":"多种多样的渐变色"},{"name":"Easyicon","link":"https://www.easyicon.net/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/easy_icon.png","descr":"图标下载库"},{"name":"WallpaperAccess","link":"https://wallpaperaccess.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/wallpaperaccess_icon.png","descr":"高清图片"},{"name":"彼岸图库","link":"http://pic.netbian.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/bian_icon.png","descr":"超清壁纸"},{"name":"搞定抠图","link":"https://www.gaoding.com/koutu","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/gaoding_icon.png","descr":"免费在线抠图"},{"name":"Iconfont","link":"https://www.iconfont.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/iconfont.png","descr":"阿里矢量图标库"},{"name":"Flaticon","link":"https://www.flaticon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/flaticon.png","descr":"超好看的图标库"},{"name":"Font Awesome","link":"https://fontawesome.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/fontawesome.png","descr":"图标字体库"},{"name":"Linux 命令搜索","link":"http://www.atoolbox.net/Tool.php?Id=826","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/linux_icon.png","descr":"Linux 命令行帮助查询"},{"name":"processon","link":"https://www.processon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/process_icon.png","descr":"流程图、时序图"},{"name":"Canva","link":"https://www.canva.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/canva_icon.png","descr":"精品原创模板"}]}]}},"cover":"https://i.loli.net/2020/05/01/IuWi8QbHvzjlOPw.jpg","excerpt":"","more":""},{"title":"友情链接","date":"2020-08-30T19:19:31.000Z","type":"link","top_img":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/bg_one.png","_content":"","source":"link/index.md","raw":"---\ntitle: 友情链接\ndate: 2020-08-30 19:19:31\ntype: \"link\"\ntop_img: https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/bg_one.png\n---\n","updated":"2020-09-13T07:11:04.579Z","path":"link/index.html","comments":1,"layout":"page","_id":"ckf0znjdp0005p27jb3941k2q","content":"","site":{"data":{"link":[{"class_name":null,"class_desc":"朋友圈 ———— 花径不曾缘客扫，蓬门今始为君开","link_list":[{"name":"Xu’s Blog","link":"https://hasaik.com","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/xuxu_icon.jpg","descr":"简单不先于复杂，而是在复杂之后"},{"name":"Yuning’s Blog","link":"https://yuning.life","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/Yuning_avatar.jpg","descr":"懒人没有左右铭~"}]},{"class_name":null,"class_desc":"技术大拿 ———— 没有不劳而获的工作，更没有坐享其成的收获","link_list":[{"name":"小康博客","link":"https://www.antmoe.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/links/小康博客.jpg","descr":"一个收藏回忆与分享技术的地方"}]},{"class_name":null,"class_desc":"使用工具","link_list":[{"name":"TinyPNG","link":"https://tinypng.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/tools/tinypng.png","descr":"图片在线压缩"},{"name":"Itemo","link":"https://webgradients.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/itmeo_icon.jpg","descr":"多种多样的渐变色"},{"name":"Easyicon","link":"https://www.easyicon.net/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/easy_icon.png","descr":"图标下载库"},{"name":"WallpaperAccess","link":"https://wallpaperaccess.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/wallpaperaccess_icon.png","descr":"高清图片"},{"name":"彼岸图库","link":"http://pic.netbian.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/bian_icon.png","descr":"超清壁纸"},{"name":"搞定抠图","link":"https://www.gaoding.com/koutu","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/gaoding_icon.png","descr":"免费在线抠图"},{"name":"Iconfont","link":"https://www.iconfont.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/iconfont.png","descr":"阿里矢量图标库"},{"name":"Flaticon","link":"https://www.flaticon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/flaticon.png","descr":"超好看的图标库"},{"name":"Font Awesome","link":"https://fontawesome.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/fontawesome.png","descr":"图标字体库"},{"name":"Linux 命令搜索","link":"http://www.atoolbox.net/Tool.php?Id=826","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/linux_icon.png","descr":"Linux 命令行帮助查询"},{"name":"processon","link":"https://www.processon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/process_icon.png","descr":"流程图、时序图"},{"name":"Canva","link":"https://www.canva.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/canva_icon.png","descr":"精品原创模板"}]}]}},"cover":"https://i.loli.net/2020/05/01/IuWi8QbHvzjlOPw.jpg","excerpt":"","more":""},{"title":"相册","date":"2020-08-30T19:19:31.000Z","type":"photos","top_img":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/pkq_bg.png","_content":"<div class=\"gallery-group-main\">\n  {% galleryGroup '壁纸' '收藏的一些壁纸' '/background-photo' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %} \n  {% galleryGroup '漫威' '关于漫威的图片' '/Gallery/marvel' https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg %} \n</div>\n","source":"photos/index.md","raw":"---\ntitle: 相册\ndate: 2020-08-30 19:19:31\ntype: \"photos\"\ntop_img: https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/pkq_bg.png\n---\n<div class=\"gallery-group-main\">\n  {% galleryGroup '壁纸' '收藏的一些壁纸' '/background-photo' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %} \n  {% galleryGroup '漫威' '关于漫威的图片' '/Gallery/marvel' https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg %} \n</div>\n","updated":"2020-09-13T07:11:04.580Z","path":"photos/index.html","comments":1,"layout":"page","_id":"ckf0znjds0006p27j97oec7bm","content":"<div class=\"gallery-group-main\">\n  \n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img\" src= \"/img/loading.gif\" data-lazy-src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png'>\n  <figcaption>\n  <div class=\"gallery-group-name\">壁纸</div>\n  <p>收藏的一些壁纸</p>\n  <a href='/background-photo'></a>\n  </figcaption>\n  </figure>\n   \n  \n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img\" src= \"/img/loading.gif\" data-lazy-src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg'>\n  <figcaption>\n  <div class=\"gallery-group-name\">漫威</div>\n  <p>关于漫威的图片</p>\n  <a href='/Gallery/marvel'></a>\n  </figcaption>\n  </figure>\n   \n</div>\n","site":{"data":{"link":[{"class_name":null,"class_desc":"朋友圈 ———— 花径不曾缘客扫，蓬门今始为君开","link_list":[{"name":"Xu’s Blog","link":"https://hasaik.com","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/xuxu_icon.jpg","descr":"简单不先于复杂，而是在复杂之后"},{"name":"Yuning’s Blog","link":"https://yuning.life","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/Yuning_avatar.jpg","descr":"懒人没有左右铭~"}]},{"class_name":null,"class_desc":"技术大拿 ———— 没有不劳而获的工作，更没有坐享其成的收获","link_list":[{"name":"小康博客","link":"https://www.antmoe.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/links/小康博客.jpg","descr":"一个收藏回忆与分享技术的地方"}]},{"class_name":null,"class_desc":"使用工具","link_list":[{"name":"TinyPNG","link":"https://tinypng.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/tools/tinypng.png","descr":"图片在线压缩"},{"name":"Itemo","link":"https://webgradients.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/itmeo_icon.jpg","descr":"多种多样的渐变色"},{"name":"Easyicon","link":"https://www.easyicon.net/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/easy_icon.png","descr":"图标下载库"},{"name":"WallpaperAccess","link":"https://wallpaperaccess.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/wallpaperaccess_icon.png","descr":"高清图片"},{"name":"彼岸图库","link":"http://pic.netbian.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/bian_icon.png","descr":"超清壁纸"},{"name":"搞定抠图","link":"https://www.gaoding.com/koutu","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/gaoding_icon.png","descr":"免费在线抠图"},{"name":"Iconfont","link":"https://www.iconfont.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/iconfont.png","descr":"阿里矢量图标库"},{"name":"Flaticon","link":"https://www.flaticon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/flaticon.png","descr":"超好看的图标库"},{"name":"Font Awesome","link":"https://fontawesome.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/fontawesome.png","descr":"图标字体库"},{"name":"Linux 命令搜索","link":"http://www.atoolbox.net/Tool.php?Id=826","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/linux_icon.png","descr":"Linux 命令行帮助查询"},{"name":"processon","link":"https://www.processon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/process_icon.png","descr":"流程图、时序图"},{"name":"Canva","link":"https://www.canva.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/canva_icon.png","descr":"精品原创模板"}]}]}},"cover":"https://i.loli.net/2020/05/01/IuWi8QbHvzjlOPw.jpg","excerpt":"","more":"<div class=\"gallery-group-main\">\n  \n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img\" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png'>\n  <figcaption>\n  <div class=\"gallery-group-name\">壁纸</div>\n  <p>收藏的一些壁纸</p>\n  <a href='/background-photo'></a>\n  </figcaption>\n  </figure>\n   \n  \n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img\" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg'>\n  <figcaption>\n  <div class=\"gallery-group-name\">漫威</div>\n  <p>关于漫威的图片</p>\n  <a href='/Gallery/marvel'></a>\n  </figcaption>\n  </figure>\n   \n</div>\n"},{"title":"标签","date":"2020-08-30T19:14:39.000Z","type":"tags","top_img":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/bg_one.png","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2020-08-30 19:14:39\ntype: \"tags\"\ntop_img: https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/bg_one.png\n---\n","updated":"2020-09-13T07:11:04.580Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckf0znjdu0007p27j74ascevh","content":"","site":{"data":{"link":[{"class_name":null,"class_desc":"朋友圈 ———— 花径不曾缘客扫，蓬门今始为君开","link_list":[{"name":"Xu’s Blog","link":"https://hasaik.com","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/xuxu_icon.jpg","descr":"简单不先于复杂，而是在复杂之后"},{"name":"Yuning’s Blog","link":"https://yuning.life","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/Yuning_avatar.jpg","descr":"懒人没有左右铭~"}]},{"class_name":null,"class_desc":"技术大拿 ———— 没有不劳而获的工作，更没有坐享其成的收获","link_list":[{"name":"小康博客","link":"https://www.antmoe.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/links/小康博客.jpg","descr":"一个收藏回忆与分享技术的地方"}]},{"class_name":null,"class_desc":"使用工具","link_list":[{"name":"TinyPNG","link":"https://tinypng.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/tools/tinypng.png","descr":"图片在线压缩"},{"name":"Itemo","link":"https://webgradients.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/itmeo_icon.jpg","descr":"多种多样的渐变色"},{"name":"Easyicon","link":"https://www.easyicon.net/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/easy_icon.png","descr":"图标下载库"},{"name":"WallpaperAccess","link":"https://wallpaperaccess.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/wallpaperaccess_icon.png","descr":"高清图片"},{"name":"彼岸图库","link":"http://pic.netbian.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/bian_icon.png","descr":"超清壁纸"},{"name":"搞定抠图","link":"https://www.gaoding.com/koutu","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/gaoding_icon.png","descr":"免费在线抠图"},{"name":"Iconfont","link":"https://www.iconfont.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/iconfont.png","descr":"阿里矢量图标库"},{"name":"Flaticon","link":"https://www.flaticon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/flaticon.png","descr":"超好看的图标库"},{"name":"Font Awesome","link":"https://fontawesome.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/fontawesome.png","descr":"图标字体库"},{"name":"Linux 命令搜索","link":"http://www.atoolbox.net/Tool.php?Id=826","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/linux_icon.png","descr":"Linux 命令行帮助查询"},{"name":"processon","link":"https://www.processon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/process_icon.png","descr":"流程图、时序图"},{"name":"Canva","link":"https://www.canva.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/canva_icon.png","descr":"精品原创模板"}]}]}},"cover":"https://i.loli.net/2020/05/01/IuWi8QbHvzjlOPw.jpg","excerpt":"","more":""},{"title":"推荐网站","date":"2020-09-02T16:51:44.000Z","type":"tools","top_img":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/bg_one.png","_content":"<div class=\"flink-desc\" style=\"margin-bottom: 20px;\">推荐网站</div>\n{% sitegroup %}\n{% site 力扣, url=https://leetcode-cn.com/, screenshot=https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/tools/likou.png, avatar=https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/tools/likou_icon.png, description=程序员的学习网站 %}\n{% site 学习JDK8, url=https://lingcoder.gitee.io/onjava8/#/sidebar, screenshot=https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/tools/onjava8.png, avatar=https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/tools/jdk_icon.png, description=《On Java8》中文版 %}\n{% endsitegroup %}\n","source":"tools/index.md","raw":"---\ntitle: 推荐网站\ndate: 2020-09-02 16:51:44\ntype: \"tools\"\ntop_img: https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/bg_one.png\n---\n<div class=\"flink-desc\" style=\"margin-bottom: 20px;\">推荐网站</div>\n{% sitegroup %}\n{% site 力扣, url=https://leetcode-cn.com/, screenshot=https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/tools/likou.png, avatar=https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/tools/likou_icon.png, description=程序员的学习网站 %}\n{% site 学习JDK8, url=https://lingcoder.gitee.io/onjava8/#/sidebar, screenshot=https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/tools/onjava8.png, avatar=https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/tools/jdk_icon.png, description=《On Java8》中文版 %}\n{% endsitegroup %}\n","updated":"2020-09-13T07:11:04.580Z","path":"tools/index.html","comments":1,"layout":"page","_id":"ckf0znjdv0009p27j22flbbhh","content":"<div class=\"flink-desc\" style=\"margin-bottom: 20px;\">推荐网站</div>\n<div class=\"site-card-group\"><a class=\"site-card\" href=\"https://leetcode-cn.com/\"><div class=\"img\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/tools/likou.png\"/></div><div class=\"info\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/tools/likou_icon.png\"/><span class=\"title\">力扣</span><span class=\"desc\">程序员的学习网站</span></div></a>\n<a class=\"site-card\" href=\"https://lingcoder.gitee.io/onjava8/#/sidebar\"><div class=\"img\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/tools/onjava8.png\"/></div><div class=\"info\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/tools/jdk_icon.png\"/><span class=\"title\">学习JDK8</span><span class=\"desc\">《On Java8》中文版</span></div></a></div>\n","site":{"data":{"link":[{"class_name":null,"class_desc":"朋友圈 ———— 花径不曾缘客扫，蓬门今始为君开","link_list":[{"name":"Xu’s Blog","link":"https://hasaik.com","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/xuxu_icon.jpg","descr":"简单不先于复杂，而是在复杂之后"},{"name":"Yuning’s Blog","link":"https://yuning.life","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/Yuning_avatar.jpg","descr":"懒人没有左右铭~"}]},{"class_name":null,"class_desc":"技术大拿 ———— 没有不劳而获的工作，更没有坐享其成的收获","link_list":[{"name":"小康博客","link":"https://www.antmoe.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/links/小康博客.jpg","descr":"一个收藏回忆与分享技术的地方"}]},{"class_name":null,"class_desc":"使用工具","link_list":[{"name":"TinyPNG","link":"https://tinypng.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/tools/tinypng.png","descr":"图片在线压缩"},{"name":"Itemo","link":"https://webgradients.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/itmeo_icon.jpg","descr":"多种多样的渐变色"},{"name":"Easyicon","link":"https://www.easyicon.net/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/easy_icon.png","descr":"图标下载库"},{"name":"WallpaperAccess","link":"https://wallpaperaccess.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/wallpaperaccess_icon.png","descr":"高清图片"},{"name":"彼岸图库","link":"http://pic.netbian.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/bian_icon.png","descr":"超清壁纸"},{"name":"搞定抠图","link":"https://www.gaoding.com/koutu","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/gaoding_icon.png","descr":"免费在线抠图"},{"name":"Iconfont","link":"https://www.iconfont.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/iconfont.png","descr":"阿里矢量图标库"},{"name":"Flaticon","link":"https://www.flaticon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/flaticon.png","descr":"超好看的图标库"},{"name":"Font Awesome","link":"https://fontawesome.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/fontawesome.png","descr":"图标字体库"},{"name":"Linux 命令搜索","link":"http://www.atoolbox.net/Tool.php?Id=826","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/linux_icon.png","descr":"Linux 命令行帮助查询"},{"name":"processon","link":"https://www.processon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/process_icon.png","descr":"流程图、时序图"},{"name":"Canva","link":"https://www.canva.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/canva_icon.png","descr":"精品原创模板"}]}]}},"cover":"https://i.loli.net/2020/05/01/IuWi8QbHvzjlOPw.jpg","excerpt":"","more":"<div class=\"flink-desc\" style=\"margin-bottom: 20px;\">推荐网站</div>\n<div class=\"site-card-group\"><a class=\"site-card\" href=\"https://leetcode-cn.com/\"><div class=\"img\"><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/tools/likou.png\"/></div><div class=\"info\"><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/tools/likou_icon.png\"/><span class=\"title\">力扣</span><span class=\"desc\">程序员的学习网站</span></div></a>\n<a class=\"site-card\" href=\"https://lingcoder.gitee.io/onjava8/#/sidebar\"><div class=\"img\"><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/tools/onjava8.png\"/></div><div class=\"info\"><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/tools/jdk_icon.png\"/><span class=\"title\">学习JDK8</span><span class=\"desc\">《On Java8》中文版</span></div></a></div>\n"}],"Post":[{"title":"CentOS7中搭建Gitlab","date":"2020-05-25T00:00:00.000Z","abbrlink":"202005250941","cover":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/cover.png","top_img":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/top_img.png","description":"每次搭建Gitlab都要百度寻找搭建步骤，修改端口容易忘记端口占用的问题导致修改失败，所以记录一次稍微详细的搭建步骤方便以后使用。","_content":"# CentOS搭建Gitlab的详细教程\n\n记录一次CentOS搭建gitlab服务器的经历。\n\n## 前期准备\n\n1. 服务器：CentOS7\n2. 安装文件：[gitlab-ce-12.6.3-ce.0.el7.x86_64.rpm](https://packages.gitlab.com/gitlab/gitlab-ce/packages/el/7/gitlab-ce-12.6.3-ce.0.el7.x86_64.rpm)\n\n## 安装gitlab\n\n介绍一下两种安装方式 yum安装、rmp安装。\n\n### yum安装\n\n这里直接参考[官网](https://about.gitlab.com/install/#centos-7)安装教程\n\n[![gitlab安装教程](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509411.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941-0/2020052509411.png)\n\n\n\n打开linux系统终端，首先安装gitlab必须的ssh，以及在系统防火墙中打开HTTP、HTTPS和SSH访问。\n\n```\nsudo yum install -y curl policycoreutils-python openssh-server\nsudo systemctl enable sshd\nsudo systemctl start sshd\nsudo firewall-cmd --permanent --add-service=http\nsudo firewall-cmd --permanent --add-service=https\nsudo systemctl reload firewalld\n```\n\n然后是安装发送邮件功能的postfix\n\n```\nsudo yum install postfix\nsudo systemctl enable postfix\nsudo systemctl start postfix\n```\n\n添加gitlab的包仓库（ee改成ce）\n\n```\ncurl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash\n```\n\n安装gitlab（EXTERNAL_URL指的是你的gitlab访问地址，这里改为http://+你的linux系统ip）\n\n```\nsudo EXTERNAL_URL=\"http://当前系统的ip或域名\" yum install -y gitlab-ce\n```\n\n### rpm安装\n\n使用官网的安装方式下载很慢，这里可以直接下载rmp安装包手动安装。\n\n首先去[官网安装包仓库](https://packages.gitlab.com/gitlab/gitlab-ce/)下载我们所需的安装包版本\n\n[![官网安装包仓库](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509412.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941-0/2020052509412.png)\n\n下载完成之后将文件拷贝至你的linux服务器，同样需要配置ssh、防火墙、postfix，\n\n```\n//安装gitlab必须的ssh，以及在系统防火墙中打开HTTP、HTTPS和SSH访问。\nsudo yum install -y curl policycoreutils-python openssh-server\nsudo systemctl enable sshd\nsudo systemctl start sshd\nsudo firewall-cmd --permanent --add-service=http\nsudo firewall-cmd --permanent --add-service=https\nsudo systemctl reload firewalld\n//安装发送邮件功能的postfix\nsudo yum install postfix\nsudo systemctl enable postfix\nsudo systemctl start postfix\n```\n\n然后cd进入你的安装包路径进行安装\n\n```\n//安装 example.rpm 包并在安装过程中显示正在安装的文件信息及安装进度\nrpm -ivh example.rpm\n```\n\n出现下图即为安装成功\n\n[![安装成功图](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509413.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509413.png)\n\n这种方式需要我们手动进入配置文件中修改访问地址\n\n```\nsudo vim /etc/gitlab/gitlab.rb\n\n//修改文件中external_url 'http://你linux的ip或域名'\n```\n\n并且我们还需要修改默认的gitlab clone地址，要不每次都得自己修改\n\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509414.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509414.png)\n\n修改文件配置\n\n```\nsudo vim /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml\n```\n\n将图片上标红处的Host替换成你的域名或ip\n\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509415.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509415.png)\n\n## 访问\n\n重置并启动GitLab，执行以下命令\n\n```\ngitlab-ctl reconfigure\n\ngitlab-ctl restart\n```\n\n提示 \"ok: run:\"表示启动成功\n\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509416.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509416.png)\n\n然后浏览器上输入你的访问地址（第一次访问会让你输入新密码，用户名默认为root）\n\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509417.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509417.png)\n\n## 修改访问端口\n\n由于unicorn默认使用的是 `8080` 端口，打开 `/etc/gitlab/gitlab.rb` ，打开 `# unicorn['port'] = 8080` 的注释，将 `8080` 修改为 `9999` ，保存后运行 `sudo gitlab-ctl reconfigure` 即可(该端口不可与上方修改的端口一致)。\n\n## 安装过程中遇到的问题\n\n1. 在浏览器中访问GitLab出现502错误：\n   原因：内存不足。\n   解决办法：检查系统的虚拟内存是否随机启动了，如果系统无虚拟内存，则增加虚拟内存，再重新启动系统。\n\n<script>\n$(function() {\n  $(\".post-copyright__notice .post-copyright-info\").html(\"本文内容源自朋友&nbsp;<a href=\\\"https://hasaik.com/posts/a460b91e.html\\\" target=\\\"_blank\\\">Xu's Blog</a>，转载请注明来自&nbsp;<a href=\\\"https://hasaik.com/\\\" target=\\\"_blank\\\">Xu's Blog</a>\")\n})\n</script>\n","source":"_posts/CentOS搭建GitLab服务器.md","raw":"---\ntitle: CentOS7中搭建Gitlab\ntags: [Gitlab, 安装手册]\ncategories: [Gitlab]\ndate: 2020-05-25\nabbrlink: '202005250941'\ncover: https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/cover.png\ntop_img: https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/top_img.png\ndescription: 每次搭建Gitlab都要百度寻找搭建步骤，修改端口容易忘记端口占用的问题导致修改失败，所以记录一次稍微详细的搭建步骤方便以后使用。\n---\n# CentOS搭建Gitlab的详细教程\n\n记录一次CentOS搭建gitlab服务器的经历。\n\n## 前期准备\n\n1. 服务器：CentOS7\n2. 安装文件：[gitlab-ce-12.6.3-ce.0.el7.x86_64.rpm](https://packages.gitlab.com/gitlab/gitlab-ce/packages/el/7/gitlab-ce-12.6.3-ce.0.el7.x86_64.rpm)\n\n## 安装gitlab\n\n介绍一下两种安装方式 yum安装、rmp安装。\n\n### yum安装\n\n这里直接参考[官网](https://about.gitlab.com/install/#centos-7)安装教程\n\n[![gitlab安装教程](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509411.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941-0/2020052509411.png)\n\n\n\n打开linux系统终端，首先安装gitlab必须的ssh，以及在系统防火墙中打开HTTP、HTTPS和SSH访问。\n\n```\nsudo yum install -y curl policycoreutils-python openssh-server\nsudo systemctl enable sshd\nsudo systemctl start sshd\nsudo firewall-cmd --permanent --add-service=http\nsudo firewall-cmd --permanent --add-service=https\nsudo systemctl reload firewalld\n```\n\n然后是安装发送邮件功能的postfix\n\n```\nsudo yum install postfix\nsudo systemctl enable postfix\nsudo systemctl start postfix\n```\n\n添加gitlab的包仓库（ee改成ce）\n\n```\ncurl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash\n```\n\n安装gitlab（EXTERNAL_URL指的是你的gitlab访问地址，这里改为http://+你的linux系统ip）\n\n```\nsudo EXTERNAL_URL=\"http://当前系统的ip或域名\" yum install -y gitlab-ce\n```\n\n### rpm安装\n\n使用官网的安装方式下载很慢，这里可以直接下载rmp安装包手动安装。\n\n首先去[官网安装包仓库](https://packages.gitlab.com/gitlab/gitlab-ce/)下载我们所需的安装包版本\n\n[![官网安装包仓库](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509412.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941-0/2020052509412.png)\n\n下载完成之后将文件拷贝至你的linux服务器，同样需要配置ssh、防火墙、postfix，\n\n```\n//安装gitlab必须的ssh，以及在系统防火墙中打开HTTP、HTTPS和SSH访问。\nsudo yum install -y curl policycoreutils-python openssh-server\nsudo systemctl enable sshd\nsudo systemctl start sshd\nsudo firewall-cmd --permanent --add-service=http\nsudo firewall-cmd --permanent --add-service=https\nsudo systemctl reload firewalld\n//安装发送邮件功能的postfix\nsudo yum install postfix\nsudo systemctl enable postfix\nsudo systemctl start postfix\n```\n\n然后cd进入你的安装包路径进行安装\n\n```\n//安装 example.rpm 包并在安装过程中显示正在安装的文件信息及安装进度\nrpm -ivh example.rpm\n```\n\n出现下图即为安装成功\n\n[![安装成功图](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509413.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509413.png)\n\n这种方式需要我们手动进入配置文件中修改访问地址\n\n```\nsudo vim /etc/gitlab/gitlab.rb\n\n//修改文件中external_url 'http://你linux的ip或域名'\n```\n\n并且我们还需要修改默认的gitlab clone地址，要不每次都得自己修改\n\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509414.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509414.png)\n\n修改文件配置\n\n```\nsudo vim /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml\n```\n\n将图片上标红处的Host替换成你的域名或ip\n\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509415.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509415.png)\n\n## 访问\n\n重置并启动GitLab，执行以下命令\n\n```\ngitlab-ctl reconfigure\n\ngitlab-ctl restart\n```\n\n提示 \"ok: run:\"表示启动成功\n\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509416.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509416.png)\n\n然后浏览器上输入你的访问地址（第一次访问会让你输入新密码，用户名默认为root）\n\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509417.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509417.png)\n\n## 修改访问端口\n\n由于unicorn默认使用的是 `8080` 端口，打开 `/etc/gitlab/gitlab.rb` ，打开 `# unicorn['port'] = 8080` 的注释，将 `8080` 修改为 `9999` ，保存后运行 `sudo gitlab-ctl reconfigure` 即可(该端口不可与上方修改的端口一致)。\n\n## 安装过程中遇到的问题\n\n1. 在浏览器中访问GitLab出现502错误：\n   原因：内存不足。\n   解决办法：检查系统的虚拟内存是否随机启动了，如果系统无虚拟内存，则增加虚拟内存，再重新启动系统。\n\n<script>\n$(function() {\n  $(\".post-copyright__notice .post-copyright-info\").html(\"本文内容源自朋友&nbsp;<a href=\\\"https://hasaik.com/posts/a460b91e.html\\\" target=\\\"_blank\\\">Xu's Blog</a>，转载请注明来自&nbsp;<a href=\\\"https://hasaik.com/\\\" target=\\\"_blank\\\">Xu's Blog</a>\")\n})\n</script>\n","slug":"CentOS搭建GitLab服务器","published":1,"updated":"2020-09-13T08:36:45.137Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckf0znjde0001p27j3tpdgmlg","content":"<h1 id=\"CentOS搭建Gitlab的详细教程\"><a href=\"#CentOS搭建Gitlab的详细教程\" class=\"headerlink\" title=\"CentOS搭建Gitlab的详细教程\"></a>CentOS搭建Gitlab的详细教程</h1><p>记录一次CentOS搭建gitlab服务器的经历。</p>\n<h2 id=\"前期准备\"><a href=\"#前期准备\" class=\"headerlink\" title=\"前期准备\"></a>前期准备</h2><ol>\n<li>服务器：CentOS7</li>\n<li>安装文件：<a href=\"https://packages.gitlab.com/gitlab/gitlab-ce/packages/el/7/gitlab-ce-12.6.3-ce.0.el7.x86_64.rpm\">gitlab-ce-12.6.3-ce.0.el7.x86_64.rpm</a></li>\n</ol>\n<h2 id=\"安装gitlab\"><a href=\"#安装gitlab\" class=\"headerlink\" title=\"安装gitlab\"></a>安装gitlab</h2><p>介绍一下两种安装方式 yum安装、rmp安装。</p>\n<h3 id=\"yum安装\"><a href=\"#yum安装\" class=\"headerlink\" title=\"yum安装\"></a>yum安装</h3><p>这里直接参考<a href=\"https://about.gitlab.com/install/#centos-7\">官网</a>安装教程</p>\n<p><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941-0/2020052509411.png\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509411.png\" alt=\"gitlab安装教程\"></a></p>\n<p>打开linux系统终端，首先安装gitlab必须的ssh，以及在系统防火墙中打开HTTP、HTTPS和SSH访问。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install -y curl policycoreutils-python openssh-server</span><br><span class=\"line\">sudo systemctl enable sshd</span><br><span class=\"line\">sudo systemctl start sshd</span><br><span class=\"line\">sudo firewall-cmd --permanent --add-service&#x3D;http</span><br><span class=\"line\">sudo firewall-cmd --permanent --add-service&#x3D;https</span><br><span class=\"line\">sudo systemctl reload firewalld</span><br></pre></td></tr></table></figure>\n\n<p>然后是安装发送邮件功能的postfix</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install postfix</span><br><span class=\"line\">sudo systemctl enable postfix</span><br><span class=\"line\">sudo systemctl start postfix</span><br></pre></td></tr></table></figure>\n\n<p>添加gitlab的包仓库（ee改成ce）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https:&#x2F;&#x2F;packages.gitlab.com&#x2F;install&#x2F;repositories&#x2F;gitlab&#x2F;gitlab-ce&#x2F;script.rpm.sh | sudo bash</span><br></pre></td></tr></table></figure>\n\n<p>安装gitlab（EXTERNAL_URL指的是你的gitlab访问地址，这里改为http://+你的linux系统ip）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo EXTERNAL_URL&#x3D;&quot;http:&#x2F;&#x2F;当前系统的ip或域名&quot; yum install -y gitlab-ce</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"rpm安装\"><a href=\"#rpm安装\" class=\"headerlink\" title=\"rpm安装\"></a>rpm安装</h3><p>使用官网的安装方式下载很慢，这里可以直接下载rmp安装包手动安装。</p>\n<p>首先去<a href=\"https://packages.gitlab.com/gitlab/gitlab-ce/\">官网安装包仓库</a>下载我们所需的安装包版本</p>\n<p><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941-0/2020052509412.png\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509412.png\" alt=\"官网安装包仓库\"></a></p>\n<p>下载完成之后将文件拷贝至你的linux服务器，同样需要配置ssh、防火墙、postfix，</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;安装gitlab必须的ssh，以及在系统防火墙中打开HTTP、HTTPS和SSH访问。</span><br><span class=\"line\">sudo yum install -y curl policycoreutils-python openssh-server</span><br><span class=\"line\">sudo systemctl enable sshd</span><br><span class=\"line\">sudo systemctl start sshd</span><br><span class=\"line\">sudo firewall-cmd --permanent --add-service&#x3D;http</span><br><span class=\"line\">sudo firewall-cmd --permanent --add-service&#x3D;https</span><br><span class=\"line\">sudo systemctl reload firewalld</span><br><span class=\"line\">&#x2F;&#x2F;安装发送邮件功能的postfix</span><br><span class=\"line\">sudo yum install postfix</span><br><span class=\"line\">sudo systemctl enable postfix</span><br><span class=\"line\">sudo systemctl start postfix</span><br></pre></td></tr></table></figure>\n\n<p>然后cd进入你的安装包路径进行安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;安装 example.rpm 包并在安装过程中显示正在安装的文件信息及安装进度</span><br><span class=\"line\">rpm -ivh example.rpm</span><br></pre></td></tr></table></figure>\n\n<p>出现下图即为安装成功</p>\n<p><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509413.png\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509413.png\" alt=\"安装成功图\"></a></p>\n<p>这种方式需要我们手动进入配置文件中修改访问地址</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim &#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;修改文件中external_url &#39;http:&#x2F;&#x2F;你linux的ip或域名&#39;</span><br></pre></td></tr></table></figure>\n\n<p>并且我们还需要修改默认的gitlab clone地址，要不每次都得自己修改</p>\n<p><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509414.png\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509414.png\" alt=\"img\"></a></p>\n<p>修改文件配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim &#x2F;opt&#x2F;gitlab&#x2F;embedded&#x2F;service&#x2F;gitlab-rails&#x2F;config&#x2F;gitlab.yml</span><br></pre></td></tr></table></figure>\n\n<p>将图片上标红处的Host替换成你的域名或ip</p>\n<p><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509415.png\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509415.png\" alt=\"img\"></a></p>\n<h2 id=\"访问\"><a href=\"#访问\" class=\"headerlink\" title=\"访问\"></a>访问</h2><p>重置并启动GitLab，执行以下命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitlab-ctl reconfigure</span><br><span class=\"line\"></span><br><span class=\"line\">gitlab-ctl restart</span><br></pre></td></tr></table></figure>\n\n<p>提示 “ok: run:”表示启动成功</p>\n<p><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509416.png\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509416.png\" alt=\"img\"></a></p>\n<p>然后浏览器上输入你的访问地址（第一次访问会让你输入新密码，用户名默认为root）</p>\n<p><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509417.png\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509417.png\" alt=\"img\"></a></p>\n<h2 id=\"修改访问端口\"><a href=\"#修改访问端口\" class=\"headerlink\" title=\"修改访问端口\"></a>修改访问端口</h2><p>由于unicorn默认使用的是 <code>8080</code> 端口，打开 <code>/etc/gitlab/gitlab.rb</code> ，打开 <code># unicorn[&#39;port&#39;] = 8080</code> 的注释，将 <code>8080</code> 修改为 <code>9999</code> ，保存后运行 <code>sudo gitlab-ctl reconfigure</code> 即可(该端口不可与上方修改的端口一致)。</p>\n<h2 id=\"安装过程中遇到的问题\"><a href=\"#安装过程中遇到的问题\" class=\"headerlink\" title=\"安装过程中遇到的问题\"></a>安装过程中遇到的问题</h2><ol>\n<li>在浏览器中访问GitLab出现502错误：<br>原因：内存不足。<br>解决办法：检查系统的虚拟内存是否随机启动了，如果系统无虚拟内存，则增加虚拟内存，再重新启动系统。</li>\n</ol>\n<script>\n$(function() {\n  $(\".post-copyright__notice .post-copyright-info\").html(\"本文内容源自朋友&nbsp;<a href=\\\"https://hasaik.com/posts/a460b91e.html\\\" target=\\\"_blank\\\">Xu's Blog</a>，转载请注明来自&nbsp;<a href=\\\"https://hasaik.com/\\\" target=\\\"_blank\\\">Xu's Blog</a>\")\n})\n</script>\n","site":{"data":{"link":[{"class_name":null,"class_desc":"朋友圈 ———— 花径不曾缘客扫，蓬门今始为君开","link_list":[{"name":"Xu’s Blog","link":"https://hasaik.com","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/xuxu_icon.jpg","descr":"简单不先于复杂，而是在复杂之后"},{"name":"Yuning’s Blog","link":"https://yuning.life","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/Yuning_avatar.jpg","descr":"懒人没有左右铭~"}]},{"class_name":null,"class_desc":"技术大拿 ———— 没有不劳而获的工作，更没有坐享其成的收获","link_list":[{"name":"小康博客","link":"https://www.antmoe.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/links/小康博客.jpg","descr":"一个收藏回忆与分享技术的地方"}]},{"class_name":null,"class_desc":"使用工具","link_list":[{"name":"TinyPNG","link":"https://tinypng.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/tools/tinypng.png","descr":"图片在线压缩"},{"name":"Itemo","link":"https://webgradients.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/itmeo_icon.jpg","descr":"多种多样的渐变色"},{"name":"Easyicon","link":"https://www.easyicon.net/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/easy_icon.png","descr":"图标下载库"},{"name":"WallpaperAccess","link":"https://wallpaperaccess.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/wallpaperaccess_icon.png","descr":"高清图片"},{"name":"彼岸图库","link":"http://pic.netbian.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/bian_icon.png","descr":"超清壁纸"},{"name":"搞定抠图","link":"https://www.gaoding.com/koutu","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/gaoding_icon.png","descr":"免费在线抠图"},{"name":"Iconfont","link":"https://www.iconfont.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/iconfont.png","descr":"阿里矢量图标库"},{"name":"Flaticon","link":"https://www.flaticon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/flaticon.png","descr":"超好看的图标库"},{"name":"Font Awesome","link":"https://fontawesome.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/fontawesome.png","descr":"图标字体库"},{"name":"Linux 命令搜索","link":"http://www.atoolbox.net/Tool.php?Id=826","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/linux_icon.png","descr":"Linux 命令行帮助查询"},{"name":"processon","link":"https://www.processon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/process_icon.png","descr":"流程图、时序图"},{"name":"Canva","link":"https://www.canva.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/canva_icon.png","descr":"精品原创模板"}]}]}},"excerpt":"","more":"<h1 id=\"CentOS搭建Gitlab的详细教程\"><a href=\"#CentOS搭建Gitlab的详细教程\" class=\"headerlink\" title=\"CentOS搭建Gitlab的详细教程\"></a>CentOS搭建Gitlab的详细教程</h1><p>记录一次CentOS搭建gitlab服务器的经历。</p>\n<h2 id=\"前期准备\"><a href=\"#前期准备\" class=\"headerlink\" title=\"前期准备\"></a>前期准备</h2><ol>\n<li>服务器：CentOS7</li>\n<li>安装文件：<a href=\"https://packages.gitlab.com/gitlab/gitlab-ce/packages/el/7/gitlab-ce-12.6.3-ce.0.el7.x86_64.rpm\">gitlab-ce-12.6.3-ce.0.el7.x86_64.rpm</a></li>\n</ol>\n<h2 id=\"安装gitlab\"><a href=\"#安装gitlab\" class=\"headerlink\" title=\"安装gitlab\"></a>安装gitlab</h2><p>介绍一下两种安装方式 yum安装、rmp安装。</p>\n<h3 id=\"yum安装\"><a href=\"#yum安装\" class=\"headerlink\" title=\"yum安装\"></a>yum安装</h3><p>这里直接参考<a href=\"https://about.gitlab.com/install/#centos-7\">官网</a>安装教程</p>\n<p><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941-0/2020052509411.png\"><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509411.png\" alt=\"gitlab安装教程\"></a></p>\n<p>打开linux系统终端，首先安装gitlab必须的ssh，以及在系统防火墙中打开HTTP、HTTPS和SSH访问。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install -y curl policycoreutils-python openssh-server</span><br><span class=\"line\">sudo systemctl enable sshd</span><br><span class=\"line\">sudo systemctl start sshd</span><br><span class=\"line\">sudo firewall-cmd --permanent --add-service&#x3D;http</span><br><span class=\"line\">sudo firewall-cmd --permanent --add-service&#x3D;https</span><br><span class=\"line\">sudo systemctl reload firewalld</span><br></pre></td></tr></table></figure>\n\n<p>然后是安装发送邮件功能的postfix</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install postfix</span><br><span class=\"line\">sudo systemctl enable postfix</span><br><span class=\"line\">sudo systemctl start postfix</span><br></pre></td></tr></table></figure>\n\n<p>添加gitlab的包仓库（ee改成ce）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https:&#x2F;&#x2F;packages.gitlab.com&#x2F;install&#x2F;repositories&#x2F;gitlab&#x2F;gitlab-ce&#x2F;script.rpm.sh | sudo bash</span><br></pre></td></tr></table></figure>\n\n<p>安装gitlab（EXTERNAL_URL指的是你的gitlab访问地址，这里改为http://+你的linux系统ip）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo EXTERNAL_URL&#x3D;&quot;http:&#x2F;&#x2F;当前系统的ip或域名&quot; yum install -y gitlab-ce</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"rpm安装\"><a href=\"#rpm安装\" class=\"headerlink\" title=\"rpm安装\"></a>rpm安装</h3><p>使用官网的安装方式下载很慢，这里可以直接下载rmp安装包手动安装。</p>\n<p>首先去<a href=\"https://packages.gitlab.com/gitlab/gitlab-ce/\">官网安装包仓库</a>下载我们所需的安装包版本</p>\n<p><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941-0/2020052509412.png\"><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509412.png\" alt=\"官网安装包仓库\"></a></p>\n<p>下载完成之后将文件拷贝至你的linux服务器，同样需要配置ssh、防火墙、postfix，</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;安装gitlab必须的ssh，以及在系统防火墙中打开HTTP、HTTPS和SSH访问。</span><br><span class=\"line\">sudo yum install -y curl policycoreutils-python openssh-server</span><br><span class=\"line\">sudo systemctl enable sshd</span><br><span class=\"line\">sudo systemctl start sshd</span><br><span class=\"line\">sudo firewall-cmd --permanent --add-service&#x3D;http</span><br><span class=\"line\">sudo firewall-cmd --permanent --add-service&#x3D;https</span><br><span class=\"line\">sudo systemctl reload firewalld</span><br><span class=\"line\">&#x2F;&#x2F;安装发送邮件功能的postfix</span><br><span class=\"line\">sudo yum install postfix</span><br><span class=\"line\">sudo systemctl enable postfix</span><br><span class=\"line\">sudo systemctl start postfix</span><br></pre></td></tr></table></figure>\n\n<p>然后cd进入你的安装包路径进行安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;安装 example.rpm 包并在安装过程中显示正在安装的文件信息及安装进度</span><br><span class=\"line\">rpm -ivh example.rpm</span><br></pre></td></tr></table></figure>\n\n<p>出现下图即为安装成功</p>\n<p><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509413.png\"><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509413.png\" alt=\"安装成功图\"></a></p>\n<p>这种方式需要我们手动进入配置文件中修改访问地址</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim &#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;修改文件中external_url &#39;http:&#x2F;&#x2F;你linux的ip或域名&#39;</span><br></pre></td></tr></table></figure>\n\n<p>并且我们还需要修改默认的gitlab clone地址，要不每次都得自己修改</p>\n<p><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509414.png\"><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509414.png\" alt=\"img\"></a></p>\n<p>修改文件配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim &#x2F;opt&#x2F;gitlab&#x2F;embedded&#x2F;service&#x2F;gitlab-rails&#x2F;config&#x2F;gitlab.yml</span><br></pre></td></tr></table></figure>\n\n<p>将图片上标红处的Host替换成你的域名或ip</p>\n<p><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509415.png\"><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509415.png\" alt=\"img\"></a></p>\n<h2 id=\"访问\"><a href=\"#访问\" class=\"headerlink\" title=\"访问\"></a>访问</h2><p>重置并启动GitLab，执行以下命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitlab-ctl reconfigure</span><br><span class=\"line\"></span><br><span class=\"line\">gitlab-ctl restart</span><br></pre></td></tr></table></figure>\n\n<p>提示 “ok: run:”表示启动成功</p>\n<p><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509416.png\"><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509416.png\" alt=\"img\"></a></p>\n<p>然后浏览器上输入你的访问地址（第一次访问会让你输入新密码，用户名默认为root）</p>\n<p><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509417.png\"><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509417.png\" alt=\"img\"></a></p>\n<h2 id=\"修改访问端口\"><a href=\"#修改访问端口\" class=\"headerlink\" title=\"修改访问端口\"></a>修改访问端口</h2><p>由于unicorn默认使用的是 <code>8080</code> 端口，打开 <code>/etc/gitlab/gitlab.rb</code> ，打开 <code># unicorn[&#39;port&#39;] = 8080</code> 的注释，将 <code>8080</code> 修改为 <code>9999</code> ，保存后运行 <code>sudo gitlab-ctl reconfigure</code> 即可(该端口不可与上方修改的端口一致)。</p>\n<h2 id=\"安装过程中遇到的问题\"><a href=\"#安装过程中遇到的问题\" class=\"headerlink\" title=\"安装过程中遇到的问题\"></a>安装过程中遇到的问题</h2><ol>\n<li>在浏览器中访问GitLab出现502错误：<br>原因：内存不足。<br>解决办法：检查系统的虚拟内存是否随机启动了，如果系统无虚拟内存，则增加虚拟内存，再重新启动系统。</li>\n</ol>\n<script>\n$(function() {\n  $(\".post-copyright__notice .post-copyright-info\").html(\"本文内容源自朋友&nbsp;<a href=\\\"https://hasaik.com/posts/a460b91e.html\\\" target=\\\"_blank\\\">Xu's Blog</a>，转载请注明来自&nbsp;<a href=\\\"https://hasaik.com/\\\" target=\\\"_blank\\\">Xu's Blog</a>\")\n})\n</script>\n"},{"title":"Mybatis学习总结","date":"2020-09-04T15:45:40.000Z","Categories":["Mybatis"],"abbrlink":"202006030942","cover":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/cover_1.png","top_img":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/cover_2.png","description":"Mybatis的相关知识学习总结以及对整体的体系架构和工作流程的梳理，通过学习总结该部分内容深入理解该框架。","_content":"# Mybatis的介绍\n---\n## Mybatis的特性\n  + 使用连接池对连接进行管理\n  + SQL和代码分离,集中管理\n  + 参数可以映射并且可以写动态SQL\n  + 结果集映射\n  + 缓存管理\n  + 重复SQL可以提取重复使用\n  + 提供插件机制\n  \n## Mybatis的核心对象和其生命周期\n\n| 对象                     | 生命周期                    |\n| ------------------------ | --------------------------- |\n| SqlSeesionFactoryBuiler  | 方法局部 (method)           |\n| SqlSessionFactory (单例) | 应用级别 (application)      |\n| SqlSession               | 请求和操作 (request/method) |\n| Mapper                   | 方法 (method)               |\n\n## Mybatis的配置文件加载\n\n```java\nString resource = \"/mybatis-config.xml\";\nInputStream inputStream = Resources.getResourceAsStream(resource);\nSqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);\n```\nMybatis会将配置文件加载到Configurition这个配置对象中(在SqlSessionFactoryBuilder中会对xml配置文件进行解析,并且通过XMLConfigBuilder对象将标签配置解析到Configuration对象中).\n```java\nprivate XMLConfigBuilder(XPathParser parser, String environment, Properties props) {\n    super(new Configuration());\n    this.localReflectorFactory = new DefaultReflectorFactory();\n    ErrorContext.instance().resource(\"SQL Mapper Configuration\");\n    this.configuration.setVariables(props);\n    this.parsed = false;\n    this.environment = environment;\n    this.parser = parser;\n}\n```\n\n## Mybatis的一些配置\n\n> TypeHandlers\n\nMybatis之所以可以将java类型与数据库类型进行转换是因为mybatis提供了大量的类型处理器(typeHandler),mybatis使用TypeHandlerRegistry对象去处理数据类型的对应,代码如下 :\n\n```java\npublic final class TypeHandlerRegistry {\n    private final Map<JdbcType, TypeHandler<?>> JDBC_TYPE_HANDLER_MAP = new EnumMap(JdbcType.class);\n    private final Map<Type, Map<JdbcType, TypeHandler<?>>> TYPE_HANDLER_MAP = new ConcurrentHashMap();\n    private final TypeHandler<Object> UNKNOWN_TYPE_HANDLER = new UnknownTypeHandler(this);\n    private final Map<Class<?>, TypeHandler<?>> ALL_TYPE_HANDLERS_MAP = new HashMap();\n    private static final Map<JdbcType, TypeHandler<?>> NULL_TYPE_HANDLER_MAP = new HashMap();\n\n    public TypeHandlerRegistry() {\n        this.register((Class)Boolean.class, (TypeHandler)(new BooleanTypeHandler()));\n        this.register((Class)Boolean.TYPE, (TypeHandler)(new BooleanTypeHandler()));\n        this.register((JdbcType)JdbcType.BOOLEAN, (TypeHandler)(new BooleanTypeHandler()));\n        this.register((JdbcType)JdbcType.BIT, (TypeHandler)(new BooleanTypeHandler()));\n        this.register((Class)Byte.class, (TypeHandler)(new ByteTypeHandler()));\n        this.register((Class)Byte.TYPE, (TypeHandler)(new ByteTypeHandler()));\n        this.register((JdbcType)JdbcType.TINYINT, (TypeHandler)(new ByteTypeHandler()));\n        this.register((Class)Short.class, (TypeHandler)(new ShortTypeHandler()));\n        this.register((Class)Short.TYPE, (TypeHandler)(new ShortTypeHandler()));\n        this.register((JdbcType)JdbcType.SMALLINT, (TypeHandler)(new ShortTypeHandler()));\n        this.register((Class)Integer.class, (TypeHandler)(new IntegerTypeHandler()));\n        this.register((Class)Integer.TYPE, (TypeHandler)(new IntegerTypeHandler()));\n        this.register((JdbcType)JdbcType.INTEGER, (TypeHandler)(new IntegerTypeHandler()));\n        this.register((Class)Long.class, (TypeHandler)(new LongTypeHandler()));\n        this.register((Class)Long.TYPE, (TypeHandler)(new LongTypeHandler()));\n        this.register((Class)Float.class, (TypeHandler)(new FloatTypeHandler()));\n        this.register((Class)Float.TYPE, (TypeHandler)(new FloatTypeHandler()));\n        this.register((JdbcType)JdbcType.FLOAT, (TypeHandler)(new FloatTypeHandler()));\n        this.register((Class)Double.class, (TypeHandler)(new DoubleTypeHandler()));\n        this.register((Class)Double.TYPE, (TypeHandler)(new DoubleTypeHandler()));\n        this.register((JdbcType)JdbcType.DOUBLE, (TypeHandler)(new DoubleTypeHandler()));\n        this.register((Class)Reader.class, (TypeHandler)(new ClobReaderTypeHandler()));\n        this.register((Class)String.class, (TypeHandler)(new StringTypeHandler()));\n        this.register((Class)String.class, JdbcType.CHAR, (TypeHandler)(new StringTypeHandler()));\n        this.register((Class)String.class, JdbcType.CLOB, (TypeHandler)(new ClobTypeHandler()));\n        this.register((Class)String.class, JdbcType.VARCHAR, (TypeHandler)(new StringTypeHandler()));\n        this.register((Class)String.class, JdbcType.LONGVARCHAR, (TypeHandler)(new ClobTypeHandler()));\n        this.register((Class)String.class, JdbcType.NVARCHAR, (TypeHandler)(new NStringTypeHandler()));\n        this.register((Class)String.class, JdbcType.NCHAR, (TypeHandler)(new NStringTypeHandler()));\n        this.register((Class)String.class, JdbcType.NCLOB, (TypeHandler)(new NClobTypeHandler()));\n        this.register((JdbcType)JdbcType.CHAR, (TypeHandler)(new StringTypeHandler()));\n        this.register((JdbcType)JdbcType.VARCHAR, (TypeHandler)(new StringTypeHandler()));\n        this.register((JdbcType)JdbcType.CLOB, (TypeHandler)(new ClobTypeHandler()));\n        this.register((JdbcType)JdbcType.LONGVARCHAR, (TypeHandler)(new ClobTypeHandler()));\n        this.register((JdbcType)JdbcType.NVARCHAR, (TypeHandler)(new NStringTypeHandler()));\n        this.register((JdbcType)JdbcType.NCHAR, (TypeHandler)(new NStringTypeHandler()));\n        this.register((JdbcType)JdbcType.NCLOB, (TypeHandler)(new NClobTypeHandler()));\n        this.register((Class)Object.class, JdbcType.ARRAY, (TypeHandler)(new ArrayTypeHandler()));\n        this.register((JdbcType)JdbcType.ARRAY, (TypeHandler)(new ArrayTypeHandler()));\n        this.register((Class)BigInteger.class, (TypeHandler)(new BigIntegerTypeHandler()));\n        this.register((JdbcType)JdbcType.BIGINT, (TypeHandler)(new LongTypeHandler()));\n        this.register((Class)BigDecimal.class, (TypeHandler)(new BigDecimalTypeHandler()));\n        this.register((JdbcType)JdbcType.REAL, (TypeHandler)(new BigDecimalTypeHandler()));\n        this.register((JdbcType)JdbcType.DECIMAL, (TypeHandler)(new BigDecimalTypeHandler()));\n        this.register((JdbcType)JdbcType.NUMERIC, (TypeHandler)(new BigDecimalTypeHandler()));\n        this.register((Class)InputStream.class, (TypeHandler)(new BlobInputStreamTypeHandler()));\n        this.register((Class)Byte[].class, (TypeHandler)(new ByteObjectArrayTypeHandler()));\n        this.register((Class)Byte[].class, JdbcType.BLOB, (TypeHandler)(new BlobByteObjectArrayTypeHandler()));\n        this.register((Class)Byte[].class, JdbcType.LONGVARBINARY, (TypeHandler)(new BlobByteObjectArrayTypeHandler()));\n        this.register((Class)byte[].class, (TypeHandler)(new ByteArrayTypeHandler()));\n        this.register((Class)byte[].class, JdbcType.BLOB, (TypeHandler)(new BlobTypeHandler()));\n        this.register((Class)byte[].class, JdbcType.LONGVARBINARY, (TypeHandler)(new BlobTypeHandler()));\n        this.register((JdbcType)JdbcType.LONGVARBINARY, (TypeHandler)(new BlobTypeHandler()));\n        this.register((JdbcType)JdbcType.BLOB, (TypeHandler)(new BlobTypeHandler()));\n        this.register(Object.class, this.UNKNOWN_TYPE_HANDLER);\n        this.register(Object.class, JdbcType.OTHER, this.UNKNOWN_TYPE_HANDLER);\n        this.register(JdbcType.OTHER, this.UNKNOWN_TYPE_HANDLER);\n        this.register((Class)Date.class, (TypeHandler)(new DateTypeHandler()));\n        this.register((Class)Date.class, JdbcType.DATE, (TypeHandler)(new DateOnlyTypeHandler()));\n        this.register((Class)Date.class, JdbcType.TIME, (TypeHandler)(new TimeOnlyTypeHandler()));\n        this.register((JdbcType)JdbcType.TIMESTAMP, (TypeHandler)(new DateTypeHandler()));\n        this.register((JdbcType)JdbcType.DATE, (TypeHandler)(new DateOnlyTypeHandler()));\n        this.register((JdbcType)JdbcType.TIME, (TypeHandler)(new TimeOnlyTypeHandler()));\n        this.register((Class)java.sql.Date.class, (TypeHandler)(new SqlDateTypeHandler()));\n        this.register((Class)Time.class, (TypeHandler)(new SqlTimeTypeHandler()));\n        this.register((Class)Timestamp.class, (TypeHandler)(new SqlTimestampTypeHandler()));\n...\n}\n```\n\n如果业务需要对某个字段类型进行特殊处理,我们可以自定义TypeHandler进行使用,如下 :\n\n```java\n// 自定义类型转换器进行业务处理\npublic class ExampleTypeHandler extends BaseTypeHandler<String> {\n\n  @Override\n  public void setNonNullParameter(PreparedStatement ps, int i, String parameter, JdbcType jdbcType) throws SQLException {\n    ps.setString(i, parameter);\n  }\n\n  @Override\n  public String getNullableResult(ResultSet rs, String columnName) throws SQLException {\n    return rs.getString(columnName);\n  }\n\n  @Override\n  public String getNullableResult(ResultSet rs, int columnIndex) throws SQLException {\n    return rs.getString(columnIndex);\n  }\n\n  @Override\n  public String getNullableResult(CallableStatement cs, int columnIndex) throws SQLException {\n    return cs.getString(columnIndex);\n  }\n}\n```\n\n```xml\n<!-- 注册该自定义的Handler 配置mybatis-config.xml -->\n<typeHandlers>\n  <typeHandler handler=\"com.mybatis.test.ExampleTypeHandler\"/>\n</typeHandlers>\n```\n```xml\n<!-- 使用方式一 jdbc类型转java类型 -->\n<resultMap id=\"BaseResultMap\" type=\"cn.az.model.ActivityApply\" >\n    <id column=\"ACTIVITY_APPLY_ID\" property=\"activityApplyId\" jdbcType=\"VARCHAR\" />\n    <result typeHandler=\"com.mybatis.test.ExampleTypeHandler\" column=\"EMP_K_ACCOUNT\" property=\"empKAccount\" jdbcType=\"VARCHAR\" />\n</resultMap>\n```\n```xml\n<!-- 使用方式二 java类型转jdbc类型-->\n<select id=\"getBrandList\" resultType=\"cn.az.vo.DictionariesVo\">\n\t\tselect emp.BRAND_CODE as code,brand.BRAND_NAME as name\n\t\tfrom T_MARKET_EMPLOYEE_BRAND emp\n\t\tleft join T_BRAND_INFO brand\n\t\ton brand.BRAND_CODE = emp.BRAND_CODE\n\t\tand brand.TA_CODE = #{taCode, typeHandler=com.mybatis.test.ExampleTypeHandler}\n\t\twhere MARKET_EMPLOYEE_ID = #{marketEmployeeId}\n</select>\n```\n\n更多配置以及标签的使用可参考文档[Mybatis中文学习官网](https://mybatis.org/mybatis-3/zh/)\n\n# Mybatis的缓存\n---\n## 一级缓存\n一级缓存是存放在BaseExecutor执行器中的,是会话级别的缓存,无法跨会话访问,当用户访问数据库时,会先创建一个执行器,执行器访问缓存,如果已有数据则直接返回如果没有再调用数据库并且将查询结果返回用户后将数据存入缓存中。\n一级缓存默认就是开启的,namespace级别(同namespace中共享)\n`mybatis的增删改操作默认是会清空缓存的,查询操作默认是不会清空缓存的,也就是在mapper.xml文件中的<insert>/<update>等标签上有flushCache属性,会有默认值,为true执行该语句后会清空缓存,为false执行该语句后不会清空缓存`\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309421.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309421.png)\n`一级缓存如果跨会话使用的话会有脏数据,如一个会话先做一个查询然后对数据进行更新,更新后使用另一个会话去查询,此时查询的是另一个缓存中的数据而不是更新后的数据.`\n如果解决脏数据问题,那么就要使用二级缓存了.\n\n## 二级缓存\n二级缓存使用的是装饰着模式,当我们开启二级缓存后mybatis会对BaseExecutor进行一个包装,该包装对象为CachingExecutor.二级缓存的管理是使用TransactionalCacheManager进行管理的.\n如何开启二级缓存 :\n1. 在mybatis-config.xml配置文件中开启二级缓存\n```xml\n<setting name=\"cacheEnable\" value=\"true\"/>\n```\n2. 需要在写SQL的mapper.xml文件中加上标签\n```xml\n<cache/>\n<!--上下两者相等,下面的属性配置为默认配置-->\n<!-- <cache type=\"org.apache.ibatis.cache.impl.PerpetualCache\"\n\t   size=\"1024\"\n\t   eviction=\"LRU\"\n\t   flushInterval=\"120000\"\n\t   readOnly=\"false\"/> -->\n```\n如果开启二级缓存后,想要对某一个`<select>`标签进行二级缓存的使用关闭,可以使用属性`useCache=false`\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309422.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309422.png)\n\n# Mybatis的批量操作方式\n---\n\n> 通过JAVA代码\n\n通过java代码的方式进行for循环然后在循环内部进行新增和编辑操作(不建议使用)该方式虽然写起来简单,但是会非常消耗性能,会多次建立连接和释放连接\n\n> mybatis支持批量操作的语句\n\n   SQL批量插入的语句 :\n   `insert into User (id,name ....) values (1, aaa ....) , (2, bbb ....) , (3, ccc ...) ....`\n   mybatis 使用动态标签`<foreach>` 拼接成该方式去批量插入,这样会减少数据库的连接与释放的次数以减少性能的消耗,但是数据库在接受sql时会有大小的限制,默认是`4m`大小,如果SQL语句拼接的过长的话会报错.\n   \n> mybatis支持自定义批量操作执行器\n\n   1) 自定义一个批量操作的执行器 Batch Executor\n   2) mybatis 支持三中执行器,执行器是封装在DefaultSqlSession 中的,真正执行SQL的就是该执行器,而SessionFactory所创建的Session只是提供了一些API供我们调用,执行器的三中模式 :\n   a. SIMPLE 最普通的执行器,使用的是Statement处理语句\n   b. REUSE 会重用预处理语句,使用PreparedStatement处理语句,意思是我们所执行过的语句会把它缓存起来,下次再执行的时候会从缓存里面去拿到该语句然后进行执行\n   c. BATCH 批处理执行器,JDBC链接操作数据库时提供了PreparedStatement.addBatch()方法去添加多个SQL语句,然后成批次的放入PreparedStatement的批处理执行器(executeBatch)中执行,无论是mybatis还是spirngjdbc都封装了该批处理方式\n\n# Mybatis的体系架构与执行流程\n---\n## 体系架构\n\n1. 提供给应用直接使用 : 接口层\n2. 处理数据库操作 : 核心层\n3. 支持工作(代码的抽取提供复用) : 基础层\n\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309423.jpg)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309423.jpg)\n\n## 工作流程\n\n1. 解析配置文件初始化Configuration对象\n2. 使用Build创建工厂类\n3. 使用工厂类创建会话\n4. 会话操作数据库\n\n> 流程图如下\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309424.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309424.png)\n\n> 具体流程细节时序图\n\n1. 配置文件解析流程与SqlSessionFactory的创建过程\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309425.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309425.png)\n\n2. 会话工厂创建会话的过程\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309426.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309426.png)\n\n3. 会话工厂通过getMapper(xxx.class)获取代理对象的过程\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309427.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309427.png)\n\n4. 代理对象执行SQL的过程\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309428.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309428.png)\n\n以上大多是以流程图以及时序图展示的过程，如果想具体了解可以查看下方代码，该代码通过上方的过程摘取出Mybatis重要的构建过程，分为V1,V2两个版本,V1为简易版，V2为详细版\n{% ghcard zhangbiao-code/mebatis, theme=solarized-light %}\n","source":"_posts/Mybatis学习总结.md","raw":"---\ntitle: Mybatis学习总结\ndate: 2020-09-04 15:45:40\ntags: [Mybatis]\nCategories: [Mybatis]\nabbrlink: '202006030942'\ncover: https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/cover_1.png\ntop_img: https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/cover_2.png\ndescription: Mybatis的相关知识学习总结以及对整体的体系架构和工作流程的梳理，通过学习总结该部分内容深入理解该框架。\n---\n# Mybatis的介绍\n---\n## Mybatis的特性\n  + 使用连接池对连接进行管理\n  + SQL和代码分离,集中管理\n  + 参数可以映射并且可以写动态SQL\n  + 结果集映射\n  + 缓存管理\n  + 重复SQL可以提取重复使用\n  + 提供插件机制\n  \n## Mybatis的核心对象和其生命周期\n\n| 对象                     | 生命周期                    |\n| ------------------------ | --------------------------- |\n| SqlSeesionFactoryBuiler  | 方法局部 (method)           |\n| SqlSessionFactory (单例) | 应用级别 (application)      |\n| SqlSession               | 请求和操作 (request/method) |\n| Mapper                   | 方法 (method)               |\n\n## Mybatis的配置文件加载\n\n```java\nString resource = \"/mybatis-config.xml\";\nInputStream inputStream = Resources.getResourceAsStream(resource);\nSqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);\n```\nMybatis会将配置文件加载到Configurition这个配置对象中(在SqlSessionFactoryBuilder中会对xml配置文件进行解析,并且通过XMLConfigBuilder对象将标签配置解析到Configuration对象中).\n```java\nprivate XMLConfigBuilder(XPathParser parser, String environment, Properties props) {\n    super(new Configuration());\n    this.localReflectorFactory = new DefaultReflectorFactory();\n    ErrorContext.instance().resource(\"SQL Mapper Configuration\");\n    this.configuration.setVariables(props);\n    this.parsed = false;\n    this.environment = environment;\n    this.parser = parser;\n}\n```\n\n## Mybatis的一些配置\n\n> TypeHandlers\n\nMybatis之所以可以将java类型与数据库类型进行转换是因为mybatis提供了大量的类型处理器(typeHandler),mybatis使用TypeHandlerRegistry对象去处理数据类型的对应,代码如下 :\n\n```java\npublic final class TypeHandlerRegistry {\n    private final Map<JdbcType, TypeHandler<?>> JDBC_TYPE_HANDLER_MAP = new EnumMap(JdbcType.class);\n    private final Map<Type, Map<JdbcType, TypeHandler<?>>> TYPE_HANDLER_MAP = new ConcurrentHashMap();\n    private final TypeHandler<Object> UNKNOWN_TYPE_HANDLER = new UnknownTypeHandler(this);\n    private final Map<Class<?>, TypeHandler<?>> ALL_TYPE_HANDLERS_MAP = new HashMap();\n    private static final Map<JdbcType, TypeHandler<?>> NULL_TYPE_HANDLER_MAP = new HashMap();\n\n    public TypeHandlerRegistry() {\n        this.register((Class)Boolean.class, (TypeHandler)(new BooleanTypeHandler()));\n        this.register((Class)Boolean.TYPE, (TypeHandler)(new BooleanTypeHandler()));\n        this.register((JdbcType)JdbcType.BOOLEAN, (TypeHandler)(new BooleanTypeHandler()));\n        this.register((JdbcType)JdbcType.BIT, (TypeHandler)(new BooleanTypeHandler()));\n        this.register((Class)Byte.class, (TypeHandler)(new ByteTypeHandler()));\n        this.register((Class)Byte.TYPE, (TypeHandler)(new ByteTypeHandler()));\n        this.register((JdbcType)JdbcType.TINYINT, (TypeHandler)(new ByteTypeHandler()));\n        this.register((Class)Short.class, (TypeHandler)(new ShortTypeHandler()));\n        this.register((Class)Short.TYPE, (TypeHandler)(new ShortTypeHandler()));\n        this.register((JdbcType)JdbcType.SMALLINT, (TypeHandler)(new ShortTypeHandler()));\n        this.register((Class)Integer.class, (TypeHandler)(new IntegerTypeHandler()));\n        this.register((Class)Integer.TYPE, (TypeHandler)(new IntegerTypeHandler()));\n        this.register((JdbcType)JdbcType.INTEGER, (TypeHandler)(new IntegerTypeHandler()));\n        this.register((Class)Long.class, (TypeHandler)(new LongTypeHandler()));\n        this.register((Class)Long.TYPE, (TypeHandler)(new LongTypeHandler()));\n        this.register((Class)Float.class, (TypeHandler)(new FloatTypeHandler()));\n        this.register((Class)Float.TYPE, (TypeHandler)(new FloatTypeHandler()));\n        this.register((JdbcType)JdbcType.FLOAT, (TypeHandler)(new FloatTypeHandler()));\n        this.register((Class)Double.class, (TypeHandler)(new DoubleTypeHandler()));\n        this.register((Class)Double.TYPE, (TypeHandler)(new DoubleTypeHandler()));\n        this.register((JdbcType)JdbcType.DOUBLE, (TypeHandler)(new DoubleTypeHandler()));\n        this.register((Class)Reader.class, (TypeHandler)(new ClobReaderTypeHandler()));\n        this.register((Class)String.class, (TypeHandler)(new StringTypeHandler()));\n        this.register((Class)String.class, JdbcType.CHAR, (TypeHandler)(new StringTypeHandler()));\n        this.register((Class)String.class, JdbcType.CLOB, (TypeHandler)(new ClobTypeHandler()));\n        this.register((Class)String.class, JdbcType.VARCHAR, (TypeHandler)(new StringTypeHandler()));\n        this.register((Class)String.class, JdbcType.LONGVARCHAR, (TypeHandler)(new ClobTypeHandler()));\n        this.register((Class)String.class, JdbcType.NVARCHAR, (TypeHandler)(new NStringTypeHandler()));\n        this.register((Class)String.class, JdbcType.NCHAR, (TypeHandler)(new NStringTypeHandler()));\n        this.register((Class)String.class, JdbcType.NCLOB, (TypeHandler)(new NClobTypeHandler()));\n        this.register((JdbcType)JdbcType.CHAR, (TypeHandler)(new StringTypeHandler()));\n        this.register((JdbcType)JdbcType.VARCHAR, (TypeHandler)(new StringTypeHandler()));\n        this.register((JdbcType)JdbcType.CLOB, (TypeHandler)(new ClobTypeHandler()));\n        this.register((JdbcType)JdbcType.LONGVARCHAR, (TypeHandler)(new ClobTypeHandler()));\n        this.register((JdbcType)JdbcType.NVARCHAR, (TypeHandler)(new NStringTypeHandler()));\n        this.register((JdbcType)JdbcType.NCHAR, (TypeHandler)(new NStringTypeHandler()));\n        this.register((JdbcType)JdbcType.NCLOB, (TypeHandler)(new NClobTypeHandler()));\n        this.register((Class)Object.class, JdbcType.ARRAY, (TypeHandler)(new ArrayTypeHandler()));\n        this.register((JdbcType)JdbcType.ARRAY, (TypeHandler)(new ArrayTypeHandler()));\n        this.register((Class)BigInteger.class, (TypeHandler)(new BigIntegerTypeHandler()));\n        this.register((JdbcType)JdbcType.BIGINT, (TypeHandler)(new LongTypeHandler()));\n        this.register((Class)BigDecimal.class, (TypeHandler)(new BigDecimalTypeHandler()));\n        this.register((JdbcType)JdbcType.REAL, (TypeHandler)(new BigDecimalTypeHandler()));\n        this.register((JdbcType)JdbcType.DECIMAL, (TypeHandler)(new BigDecimalTypeHandler()));\n        this.register((JdbcType)JdbcType.NUMERIC, (TypeHandler)(new BigDecimalTypeHandler()));\n        this.register((Class)InputStream.class, (TypeHandler)(new BlobInputStreamTypeHandler()));\n        this.register((Class)Byte[].class, (TypeHandler)(new ByteObjectArrayTypeHandler()));\n        this.register((Class)Byte[].class, JdbcType.BLOB, (TypeHandler)(new BlobByteObjectArrayTypeHandler()));\n        this.register((Class)Byte[].class, JdbcType.LONGVARBINARY, (TypeHandler)(new BlobByteObjectArrayTypeHandler()));\n        this.register((Class)byte[].class, (TypeHandler)(new ByteArrayTypeHandler()));\n        this.register((Class)byte[].class, JdbcType.BLOB, (TypeHandler)(new BlobTypeHandler()));\n        this.register((Class)byte[].class, JdbcType.LONGVARBINARY, (TypeHandler)(new BlobTypeHandler()));\n        this.register((JdbcType)JdbcType.LONGVARBINARY, (TypeHandler)(new BlobTypeHandler()));\n        this.register((JdbcType)JdbcType.BLOB, (TypeHandler)(new BlobTypeHandler()));\n        this.register(Object.class, this.UNKNOWN_TYPE_HANDLER);\n        this.register(Object.class, JdbcType.OTHER, this.UNKNOWN_TYPE_HANDLER);\n        this.register(JdbcType.OTHER, this.UNKNOWN_TYPE_HANDLER);\n        this.register((Class)Date.class, (TypeHandler)(new DateTypeHandler()));\n        this.register((Class)Date.class, JdbcType.DATE, (TypeHandler)(new DateOnlyTypeHandler()));\n        this.register((Class)Date.class, JdbcType.TIME, (TypeHandler)(new TimeOnlyTypeHandler()));\n        this.register((JdbcType)JdbcType.TIMESTAMP, (TypeHandler)(new DateTypeHandler()));\n        this.register((JdbcType)JdbcType.DATE, (TypeHandler)(new DateOnlyTypeHandler()));\n        this.register((JdbcType)JdbcType.TIME, (TypeHandler)(new TimeOnlyTypeHandler()));\n        this.register((Class)java.sql.Date.class, (TypeHandler)(new SqlDateTypeHandler()));\n        this.register((Class)Time.class, (TypeHandler)(new SqlTimeTypeHandler()));\n        this.register((Class)Timestamp.class, (TypeHandler)(new SqlTimestampTypeHandler()));\n...\n}\n```\n\n如果业务需要对某个字段类型进行特殊处理,我们可以自定义TypeHandler进行使用,如下 :\n\n```java\n// 自定义类型转换器进行业务处理\npublic class ExampleTypeHandler extends BaseTypeHandler<String> {\n\n  @Override\n  public void setNonNullParameter(PreparedStatement ps, int i, String parameter, JdbcType jdbcType) throws SQLException {\n    ps.setString(i, parameter);\n  }\n\n  @Override\n  public String getNullableResult(ResultSet rs, String columnName) throws SQLException {\n    return rs.getString(columnName);\n  }\n\n  @Override\n  public String getNullableResult(ResultSet rs, int columnIndex) throws SQLException {\n    return rs.getString(columnIndex);\n  }\n\n  @Override\n  public String getNullableResult(CallableStatement cs, int columnIndex) throws SQLException {\n    return cs.getString(columnIndex);\n  }\n}\n```\n\n```xml\n<!-- 注册该自定义的Handler 配置mybatis-config.xml -->\n<typeHandlers>\n  <typeHandler handler=\"com.mybatis.test.ExampleTypeHandler\"/>\n</typeHandlers>\n```\n```xml\n<!-- 使用方式一 jdbc类型转java类型 -->\n<resultMap id=\"BaseResultMap\" type=\"cn.az.model.ActivityApply\" >\n    <id column=\"ACTIVITY_APPLY_ID\" property=\"activityApplyId\" jdbcType=\"VARCHAR\" />\n    <result typeHandler=\"com.mybatis.test.ExampleTypeHandler\" column=\"EMP_K_ACCOUNT\" property=\"empKAccount\" jdbcType=\"VARCHAR\" />\n</resultMap>\n```\n```xml\n<!-- 使用方式二 java类型转jdbc类型-->\n<select id=\"getBrandList\" resultType=\"cn.az.vo.DictionariesVo\">\n\t\tselect emp.BRAND_CODE as code,brand.BRAND_NAME as name\n\t\tfrom T_MARKET_EMPLOYEE_BRAND emp\n\t\tleft join T_BRAND_INFO brand\n\t\ton brand.BRAND_CODE = emp.BRAND_CODE\n\t\tand brand.TA_CODE = #{taCode, typeHandler=com.mybatis.test.ExampleTypeHandler}\n\t\twhere MARKET_EMPLOYEE_ID = #{marketEmployeeId}\n</select>\n```\n\n更多配置以及标签的使用可参考文档[Mybatis中文学习官网](https://mybatis.org/mybatis-3/zh/)\n\n# Mybatis的缓存\n---\n## 一级缓存\n一级缓存是存放在BaseExecutor执行器中的,是会话级别的缓存,无法跨会话访问,当用户访问数据库时,会先创建一个执行器,执行器访问缓存,如果已有数据则直接返回如果没有再调用数据库并且将查询结果返回用户后将数据存入缓存中。\n一级缓存默认就是开启的,namespace级别(同namespace中共享)\n`mybatis的增删改操作默认是会清空缓存的,查询操作默认是不会清空缓存的,也就是在mapper.xml文件中的<insert>/<update>等标签上有flushCache属性,会有默认值,为true执行该语句后会清空缓存,为false执行该语句后不会清空缓存`\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309421.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309421.png)\n`一级缓存如果跨会话使用的话会有脏数据,如一个会话先做一个查询然后对数据进行更新,更新后使用另一个会话去查询,此时查询的是另一个缓存中的数据而不是更新后的数据.`\n如果解决脏数据问题,那么就要使用二级缓存了.\n\n## 二级缓存\n二级缓存使用的是装饰着模式,当我们开启二级缓存后mybatis会对BaseExecutor进行一个包装,该包装对象为CachingExecutor.二级缓存的管理是使用TransactionalCacheManager进行管理的.\n如何开启二级缓存 :\n1. 在mybatis-config.xml配置文件中开启二级缓存\n```xml\n<setting name=\"cacheEnable\" value=\"true\"/>\n```\n2. 需要在写SQL的mapper.xml文件中加上标签\n```xml\n<cache/>\n<!--上下两者相等,下面的属性配置为默认配置-->\n<!-- <cache type=\"org.apache.ibatis.cache.impl.PerpetualCache\"\n\t   size=\"1024\"\n\t   eviction=\"LRU\"\n\t   flushInterval=\"120000\"\n\t   readOnly=\"false\"/> -->\n```\n如果开启二级缓存后,想要对某一个`<select>`标签进行二级缓存的使用关闭,可以使用属性`useCache=false`\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309422.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309422.png)\n\n# Mybatis的批量操作方式\n---\n\n> 通过JAVA代码\n\n通过java代码的方式进行for循环然后在循环内部进行新增和编辑操作(不建议使用)该方式虽然写起来简单,但是会非常消耗性能,会多次建立连接和释放连接\n\n> mybatis支持批量操作的语句\n\n   SQL批量插入的语句 :\n   `insert into User (id,name ....) values (1, aaa ....) , (2, bbb ....) , (3, ccc ...) ....`\n   mybatis 使用动态标签`<foreach>` 拼接成该方式去批量插入,这样会减少数据库的连接与释放的次数以减少性能的消耗,但是数据库在接受sql时会有大小的限制,默认是`4m`大小,如果SQL语句拼接的过长的话会报错.\n   \n> mybatis支持自定义批量操作执行器\n\n   1) 自定义一个批量操作的执行器 Batch Executor\n   2) mybatis 支持三中执行器,执行器是封装在DefaultSqlSession 中的,真正执行SQL的就是该执行器,而SessionFactory所创建的Session只是提供了一些API供我们调用,执行器的三中模式 :\n   a. SIMPLE 最普通的执行器,使用的是Statement处理语句\n   b. REUSE 会重用预处理语句,使用PreparedStatement处理语句,意思是我们所执行过的语句会把它缓存起来,下次再执行的时候会从缓存里面去拿到该语句然后进行执行\n   c. BATCH 批处理执行器,JDBC链接操作数据库时提供了PreparedStatement.addBatch()方法去添加多个SQL语句,然后成批次的放入PreparedStatement的批处理执行器(executeBatch)中执行,无论是mybatis还是spirngjdbc都封装了该批处理方式\n\n# Mybatis的体系架构与执行流程\n---\n## 体系架构\n\n1. 提供给应用直接使用 : 接口层\n2. 处理数据库操作 : 核心层\n3. 支持工作(代码的抽取提供复用) : 基础层\n\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309423.jpg)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309423.jpg)\n\n## 工作流程\n\n1. 解析配置文件初始化Configuration对象\n2. 使用Build创建工厂类\n3. 使用工厂类创建会话\n4. 会话操作数据库\n\n> 流程图如下\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309424.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309424.png)\n\n> 具体流程细节时序图\n\n1. 配置文件解析流程与SqlSessionFactory的创建过程\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309425.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309425.png)\n\n2. 会话工厂创建会话的过程\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309426.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309426.png)\n\n3. 会话工厂通过getMapper(xxx.class)获取代理对象的过程\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309427.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309427.png)\n\n4. 代理对象执行SQL的过程\n[![img](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309428.png)](https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309428.png)\n\n以上大多是以流程图以及时序图展示的过程，如果想具体了解可以查看下方代码，该代码通过上方的过程摘取出Mybatis重要的构建过程，分为V1,V2两个版本,V1为简易版，V2为详细版\n{% ghcard zhangbiao-code/mebatis, theme=solarized-light %}\n","slug":"Mybatis学习总结","published":1,"updated":"2020-09-13T08:39:17.308Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckf0znje1000dp27jerf691b8","content":"<h1 id=\"Mybatis的介绍\"><a href=\"#Mybatis的介绍\" class=\"headerlink\" title=\"Mybatis的介绍\"></a>Mybatis的介绍</h1><hr>\n<h2 id=\"Mybatis的特性\"><a href=\"#Mybatis的特性\" class=\"headerlink\" title=\"Mybatis的特性\"></a>Mybatis的特性</h2><ul>\n<li>使用连接池对连接进行管理</li>\n<li>SQL和代码分离,集中管理</li>\n<li>参数可以映射并且可以写动态SQL</li>\n<li>结果集映射</li>\n<li>缓存管理</li>\n<li>重复SQL可以提取重复使用</li>\n<li>提供插件机制</li>\n</ul>\n<h2 id=\"Mybatis的核心对象和其生命周期\"><a href=\"#Mybatis的核心对象和其生命周期\" class=\"headerlink\" title=\"Mybatis的核心对象和其生命周期\"></a>Mybatis的核心对象和其生命周期</h2><table>\n<thead>\n<tr>\n<th>对象</th>\n<th>生命周期</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>SqlSeesionFactoryBuiler</td>\n<td>方法局部 (method)</td>\n</tr>\n<tr>\n<td>SqlSessionFactory (单例)</td>\n<td>应用级别 (application)</td>\n</tr>\n<tr>\n<td>SqlSession</td>\n<td>请求和操作 (request/method)</td>\n</tr>\n<tr>\n<td>Mapper</td>\n<td>方法 (method)</td>\n</tr>\n</tbody></table>\n<h2 id=\"Mybatis的配置文件加载\"><a href=\"#Mybatis的配置文件加载\" class=\"headerlink\" title=\"Mybatis的配置文件加载\"></a>Mybatis的配置文件加载</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String resource = <span class=\"string\">&quot;/mybatis-config.xml&quot;</span>;</span><br><span class=\"line\">InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class=\"line\">SqlSessionFactory sqlSessionFactory = <span class=\"keyword\">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br></pre></td></tr></table></figure>\n<p>Mybatis会将配置文件加载到Configurition这个配置对象中(在SqlSessionFactoryBuilder中会对xml配置文件进行解析,并且通过XMLConfigBuilder对象将标签配置解析到Configuration对象中).</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">XMLConfigBuilder</span><span class=\"params\">(XPathParser parser, String environment, Properties props)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(<span class=\"keyword\">new</span> Configuration());</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.localReflectorFactory = <span class=\"keyword\">new</span> DefaultReflectorFactory();</span><br><span class=\"line\">    ErrorContext.instance().resource(<span class=\"string\">&quot;SQL Mapper Configuration&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.configuration.setVariables(props);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.parsed = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.environment = environment;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.parser = parser;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Mybatis的一些配置\"><a href=\"#Mybatis的一些配置\" class=\"headerlink\" title=\"Mybatis的一些配置\"></a>Mybatis的一些配置</h2><blockquote>\n<p>TypeHandlers</p>\n</blockquote>\n<p>Mybatis之所以可以将java类型与数据库类型进行转换是因为mybatis提供了大量的类型处理器(typeHandler),mybatis使用TypeHandlerRegistry对象去处理数据类型的对应,代码如下 :</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TypeHandlerRegistry</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Map&lt;JdbcType, TypeHandler&lt;?&gt;&gt; JDBC_TYPE_HANDLER_MAP = <span class=\"keyword\">new</span> EnumMap(JdbcType.class);</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Map&lt;Type, Map&lt;JdbcType, TypeHandler&lt;?&gt;&gt;&gt; TYPE_HANDLER_MAP = <span class=\"keyword\">new</span> ConcurrentHashMap();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> TypeHandler&lt;Object&gt; UNKNOWN_TYPE_HANDLER = <span class=\"keyword\">new</span> UnknownTypeHandler(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Map&lt;Class&lt;?&gt;, TypeHandler&lt;?&gt;&gt; ALL_TYPE_HANDLERS_MAP = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Map&lt;JdbcType, TypeHandler&lt;?&gt;&gt; NULL_TYPE_HANDLER_MAP = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TypeHandlerRegistry</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Boolean.class, (TypeHandler)(<span class=\"keyword\">new</span> BooleanTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Boolean.TYPE, (TypeHandler)(<span class=\"keyword\">new</span> BooleanTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.BOOLEAN, (TypeHandler)(<span class=\"keyword\">new</span> BooleanTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.BIT, (TypeHandler)(<span class=\"keyword\">new</span> BooleanTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Byte.class, (TypeHandler)(<span class=\"keyword\">new</span> ByteTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Byte.TYPE, (TypeHandler)(<span class=\"keyword\">new</span> ByteTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.TINYINT, (TypeHandler)(<span class=\"keyword\">new</span> ByteTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Short.class, (TypeHandler)(<span class=\"keyword\">new</span> ShortTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Short.TYPE, (TypeHandler)(<span class=\"keyword\">new</span> ShortTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.SMALLINT, (TypeHandler)(<span class=\"keyword\">new</span> ShortTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Integer.class, (TypeHandler)(<span class=\"keyword\">new</span> IntegerTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Integer.TYPE, (TypeHandler)(<span class=\"keyword\">new</span> IntegerTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.INTEGER, (TypeHandler)(<span class=\"keyword\">new</span> IntegerTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Long.class, (TypeHandler)(<span class=\"keyword\">new</span> LongTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Long.TYPE, (TypeHandler)(<span class=\"keyword\">new</span> LongTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Float.class, (TypeHandler)(<span class=\"keyword\">new</span> FloatTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Float.TYPE, (TypeHandler)(<span class=\"keyword\">new</span> FloatTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.FLOAT, (TypeHandler)(<span class=\"keyword\">new</span> FloatTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Double.class, (TypeHandler)(<span class=\"keyword\">new</span> DoubleTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Double.TYPE, (TypeHandler)(<span class=\"keyword\">new</span> DoubleTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.DOUBLE, (TypeHandler)(<span class=\"keyword\">new</span> DoubleTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Reader.class, (TypeHandler)(<span class=\"keyword\">new</span> ClobReaderTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)String.class, (TypeHandler)(<span class=\"keyword\">new</span> StringTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)String.class, JdbcType.CHAR, (TypeHandler)(<span class=\"keyword\">new</span> StringTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)String.class, JdbcType.CLOB, (TypeHandler)(<span class=\"keyword\">new</span> ClobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)String.class, JdbcType.VARCHAR, (TypeHandler)(<span class=\"keyword\">new</span> StringTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)String.class, JdbcType.LONGVARCHAR, (TypeHandler)(<span class=\"keyword\">new</span> ClobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)String.class, JdbcType.NVARCHAR, (TypeHandler)(<span class=\"keyword\">new</span> NStringTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)String.class, JdbcType.NCHAR, (TypeHandler)(<span class=\"keyword\">new</span> NStringTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)String.class, JdbcType.NCLOB, (TypeHandler)(<span class=\"keyword\">new</span> NClobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.CHAR, (TypeHandler)(<span class=\"keyword\">new</span> StringTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.VARCHAR, (TypeHandler)(<span class=\"keyword\">new</span> StringTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.CLOB, (TypeHandler)(<span class=\"keyword\">new</span> ClobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.LONGVARCHAR, (TypeHandler)(<span class=\"keyword\">new</span> ClobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.NVARCHAR, (TypeHandler)(<span class=\"keyword\">new</span> NStringTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.NCHAR, (TypeHandler)(<span class=\"keyword\">new</span> NStringTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.NCLOB, (TypeHandler)(<span class=\"keyword\">new</span> NClobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Object.class, JdbcType.ARRAY, (TypeHandler)(<span class=\"keyword\">new</span> ArrayTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.ARRAY, (TypeHandler)(<span class=\"keyword\">new</span> ArrayTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)BigInteger.class, (TypeHandler)(<span class=\"keyword\">new</span> BigIntegerTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.BIGINT, (TypeHandler)(<span class=\"keyword\">new</span> LongTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)BigDecimal.class, (TypeHandler)(<span class=\"keyword\">new</span> BigDecimalTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.REAL, (TypeHandler)(<span class=\"keyword\">new</span> BigDecimalTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.DECIMAL, (TypeHandler)(<span class=\"keyword\">new</span> BigDecimalTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.NUMERIC, (TypeHandler)(<span class=\"keyword\">new</span> BigDecimalTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)InputStream.class, (TypeHandler)(<span class=\"keyword\">new</span> BlobInputStreamTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Byte[].class, (TypeHandler)(<span class=\"keyword\">new</span> ByteObjectArrayTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Byte[].class, JdbcType.BLOB, (TypeHandler)(<span class=\"keyword\">new</span> BlobByteObjectArrayTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Byte[].class, JdbcType.LONGVARBINARY, (TypeHandler)(<span class=\"keyword\">new</span> BlobByteObjectArrayTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)<span class=\"keyword\">byte</span>[].class, (TypeHandler)(<span class=\"keyword\">new</span> ByteArrayTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)<span class=\"keyword\">byte</span>[].class, JdbcType.BLOB, (TypeHandler)(<span class=\"keyword\">new</span> BlobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)<span class=\"keyword\">byte</span>[].class, JdbcType.LONGVARBINARY, (TypeHandler)(<span class=\"keyword\">new</span> BlobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.LONGVARBINARY, (TypeHandler)(<span class=\"keyword\">new</span> BlobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.BLOB, (TypeHandler)(<span class=\"keyword\">new</span> BlobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register(Object.class, <span class=\"keyword\">this</span>.UNKNOWN_TYPE_HANDLER);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register(Object.class, JdbcType.OTHER, <span class=\"keyword\">this</span>.UNKNOWN_TYPE_HANDLER);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register(JdbcType.OTHER, <span class=\"keyword\">this</span>.UNKNOWN_TYPE_HANDLER);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Date.class, (TypeHandler)(<span class=\"keyword\">new</span> DateTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Date.class, JdbcType.DATE, (TypeHandler)(<span class=\"keyword\">new</span> DateOnlyTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Date.class, JdbcType.TIME, (TypeHandler)(<span class=\"keyword\">new</span> TimeOnlyTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.TIMESTAMP, (TypeHandler)(<span class=\"keyword\">new</span> DateTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.DATE, (TypeHandler)(<span class=\"keyword\">new</span> DateOnlyTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.TIME, (TypeHandler)(<span class=\"keyword\">new</span> TimeOnlyTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)java.sql.Date.class, (TypeHandler)(<span class=\"keyword\">new</span> SqlDateTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Time.class, (TypeHandler)(<span class=\"keyword\">new</span> SqlTimeTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Timestamp.class, (TypeHandler)(<span class=\"keyword\">new</span> SqlTimestampTypeHandler()));</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>如果业务需要对某个字段类型进行特殊处理,我们可以自定义TypeHandler进行使用,如下 :</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 自定义类型转换器进行业务处理</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExampleTypeHandler</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseTypeHandler</span>&lt;<span class=\"title\">String</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setNonNullParameter</span><span class=\"params\">(PreparedStatement ps, <span class=\"keyword\">int</span> i, String parameter, JdbcType jdbcType)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">    ps.setString(i, parameter);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getNullableResult</span><span class=\"params\">(ResultSet rs, String columnName)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rs.getString(columnName);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getNullableResult</span><span class=\"params\">(ResultSet rs, <span class=\"keyword\">int</span> columnIndex)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rs.getString(columnIndex);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getNullableResult</span><span class=\"params\">(CallableStatement cs, <span class=\"keyword\">int</span> columnIndex)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> cs.getString(columnIndex);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 注册该自定义的Handler 配置mybatis-config.xml --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">typeHandlers</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">typeHandler</span> <span class=\"attr\">handler</span>=<span class=\"string\">&quot;com.mybatis.test.ExampleTypeHandler&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">typeHandlers</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 使用方式一 jdbc类型转java类型 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;BaseResultMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;cn.az.model.ActivityApply&quot;</span> &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;ACTIVITY_APPLY_ID&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;activityApplyId&quot;</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">typeHandler</span>=<span class=\"string\">&quot;com.mybatis.test.ExampleTypeHandler&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;EMP_K_ACCOUNT&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;empKAccount&quot;</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 使用方式二 java类型转jdbc类型--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getBrandList&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;cn.az.vo.DictionariesVo&quot;</span>&gt;</span></span><br><span class=\"line\">\t\tselect emp.BRAND_CODE as code,brand.BRAND_NAME as name</span><br><span class=\"line\">\t\tfrom T_MARKET_EMPLOYEE_BRAND emp</span><br><span class=\"line\">\t\tleft join T_BRAND_INFO brand</span><br><span class=\"line\">\t\ton brand.BRAND_CODE = emp.BRAND_CODE</span><br><span class=\"line\">\t\tand brand.TA_CODE = #&#123;taCode, typeHandler=com.mybatis.test.ExampleTypeHandler&#125;</span><br><span class=\"line\">\t\twhere MARKET_EMPLOYEE_ID = #&#123;marketEmployeeId&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>更多配置以及标签的使用可参考文档<a href=\"https://mybatis.org/mybatis-3/zh/\">Mybatis中文学习官网</a></p>\n<h1 id=\"Mybatis的缓存\"><a href=\"#Mybatis的缓存\" class=\"headerlink\" title=\"Mybatis的缓存\"></a>Mybatis的缓存</h1><hr>\n<h2 id=\"一级缓存\"><a href=\"#一级缓存\" class=\"headerlink\" title=\"一级缓存\"></a>一级缓存</h2><p>一级缓存是存放在BaseExecutor执行器中的,是会话级别的缓存,无法跨会话访问,当用户访问数据库时,会先创建一个执行器,执行器访问缓存,如果已有数据则直接返回如果没有再调用数据库并且将查询结果返回用户后将数据存入缓存中。<br>一级缓存默认就是开启的,namespace级别(同namespace中共享)<br><code>mybatis的增删改操作默认是会清空缓存的,查询操作默认是不会清空缓存的,也就是在mapper.xml文件中的&lt;insert&gt;/&lt;update&gt;等标签上有flushCache属性,会有默认值,为true执行该语句后会清空缓存,为false执行该语句后不会清空缓存</code><br><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309421.png\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309421.png\" alt=\"img\"></a><br><code>一级缓存如果跨会话使用的话会有脏数据,如一个会话先做一个查询然后对数据进行更新,更新后使用另一个会话去查询,此时查询的是另一个缓存中的数据而不是更新后的数据.</code><br>如果解决脏数据问题,那么就要使用二级缓存了.</p>\n<h2 id=\"二级缓存\"><a href=\"#二级缓存\" class=\"headerlink\" title=\"二级缓存\"></a>二级缓存</h2><p>二级缓存使用的是装饰着模式,当我们开启二级缓存后mybatis会对BaseExecutor进行一个包装,该包装对象为CachingExecutor.二级缓存的管理是使用TransactionalCacheManager进行管理的.<br>如何开启二级缓存 :</p>\n<ol>\n<li>在mybatis-config.xml配置文件中开启二级缓存<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">setting</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;cacheEnable&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;true&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>需要在写SQL的mapper.xml文件中加上标签<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">cache</span>/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--上下两者相等,下面的属性配置为默认配置--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- &lt;cache type=&quot;org.apache.ibatis.cache.impl.PerpetualCache&quot;</span></span><br><span class=\"line\"><span class=\"comment\">\t   size=&quot;1024&quot;</span></span><br><span class=\"line\"><span class=\"comment\">\t   eviction=&quot;LRU&quot;</span></span><br><span class=\"line\"><span class=\"comment\">\t   flushInterval=&quot;120000&quot;</span></span><br><span class=\"line\"><span class=\"comment\">\t   readOnly=&quot;false&quot;/&gt; --&gt;</span></span><br></pre></td></tr></table></figure>\n如果开启二级缓存后,想要对某一个<code>&lt;select&gt;</code>标签进行二级缓存的使用关闭,可以使用属性<code>useCache=false</code><br><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309422.png\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309422.png\" alt=\"img\"></a></li>\n</ol>\n<h1 id=\"Mybatis的批量操作方式\"><a href=\"#Mybatis的批量操作方式\" class=\"headerlink\" title=\"Mybatis的批量操作方式\"></a>Mybatis的批量操作方式</h1><hr>\n<blockquote>\n<p>通过JAVA代码</p>\n</blockquote>\n<p>通过java代码的方式进行for循环然后在循环内部进行新增和编辑操作(不建议使用)该方式虽然写起来简单,但是会非常消耗性能,会多次建立连接和释放连接</p>\n<blockquote>\n<p>mybatis支持批量操作的语句</p>\n</blockquote>\n<p>   SQL批量插入的语句 :<br>   <code>insert into User (id,name ....) values (1, aaa ....) , (2, bbb ....) , (3, ccc ...) ....</code><br>   mybatis 使用动态标签<code>&lt;foreach&gt;</code> 拼接成该方式去批量插入,这样会减少数据库的连接与释放的次数以减少性能的消耗,但是数据库在接受sql时会有大小的限制,默认是<code>4m</code>大小,如果SQL语句拼接的过长的话会报错.</p>\n<blockquote>\n<p>mybatis支持自定义批量操作执行器</p>\n</blockquote>\n<ol>\n<li>自定义一个批量操作的执行器 Batch Executor</li>\n<li>mybatis 支持三中执行器,执行器是封装在DefaultSqlSession 中的,真正执行SQL的就是该执行器,而SessionFactory所创建的Session只是提供了一些API供我们调用,执行器的三中模式 :<br>a. SIMPLE 最普通的执行器,使用的是Statement处理语句<br>b. REUSE 会重用预处理语句,使用PreparedStatement处理语句,意思是我们所执行过的语句会把它缓存起来,下次再执行的时候会从缓存里面去拿到该语句然后进行执行<br>c. BATCH 批处理执行器,JDBC链接操作数据库时提供了PreparedStatement.addBatch()方法去添加多个SQL语句,然后成批次的放入PreparedStatement的批处理执行器(executeBatch)中执行,无论是mybatis还是spirngjdbc都封装了该批处理方式</li>\n</ol>\n<h1 id=\"Mybatis的体系架构与执行流程\"><a href=\"#Mybatis的体系架构与执行流程\" class=\"headerlink\" title=\"Mybatis的体系架构与执行流程\"></a>Mybatis的体系架构与执行流程</h1><hr>\n<h2 id=\"体系架构\"><a href=\"#体系架构\" class=\"headerlink\" title=\"体系架构\"></a>体系架构</h2><ol>\n<li>提供给应用直接使用 : 接口层</li>\n<li>处理数据库操作 : 核心层</li>\n<li>支持工作(代码的抽取提供复用) : 基础层</li>\n</ol>\n<p><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309423.jpg\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309423.jpg\" alt=\"img\"></a></p>\n<h2 id=\"工作流程\"><a href=\"#工作流程\" class=\"headerlink\" title=\"工作流程\"></a>工作流程</h2><ol>\n<li>解析配置文件初始化Configuration对象</li>\n<li>使用Build创建工厂类</li>\n<li>使用工厂类创建会话</li>\n<li>会话操作数据库</li>\n</ol>\n<blockquote>\n<p>流程图如下<br><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309424.png\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309424.png\" alt=\"img\"></a></p>\n</blockquote>\n<blockquote>\n<p>具体流程细节时序图</p>\n</blockquote>\n<ol>\n<li><p>配置文件解析流程与SqlSessionFactory的创建过程<br><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309425.png\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309425.png\" alt=\"img\"></a></p>\n</li>\n<li><p>会话工厂创建会话的过程<br><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309426.png\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309426.png\" alt=\"img\"></a></p>\n</li>\n<li><p>会话工厂通过getMapper(xxx.class)获取代理对象的过程<br><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309427.png\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309427.png\" alt=\"img\"></a></p>\n</li>\n<li><p>代理对象执行SQL的过程<br><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309428.png\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309428.png\" alt=\"img\"></a></p>\n</li>\n</ol>\n<p>以上大多是以流程图以及时序图展示的过程，如果想具体了解可以查看下方代码，该代码通过上方的过程摘取出Mybatis重要的构建过程，分为V1,V2两个版本,V1为简易版，V2为详细版</p>\n<a class=\"ghcard\" rel=\"external nofollow noopener noreferrer\" href=\"https://github.com/zhangbiao-code/mebatis\"><img src= \"/img/loading.gif\" data-lazy-src=\"https://github-readme-stats.vercel.app/api/pin/?username=zhangbiao-code&repo=mebatis&theme=solarized-light&show_owner=true\"/></a>\n","site":{"data":{"link":[{"class_name":null,"class_desc":"朋友圈 ———— 花径不曾缘客扫，蓬门今始为君开","link_list":[{"name":"Xu’s Blog","link":"https://hasaik.com","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/xuxu_icon.jpg","descr":"简单不先于复杂，而是在复杂之后"},{"name":"Yuning’s Blog","link":"https://yuning.life","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/Yuning_avatar.jpg","descr":"懒人没有左右铭~"}]},{"class_name":null,"class_desc":"技术大拿 ———— 没有不劳而获的工作，更没有坐享其成的收获","link_list":[{"name":"小康博客","link":"https://www.antmoe.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/links/小康博客.jpg","descr":"一个收藏回忆与分享技术的地方"}]},{"class_name":null,"class_desc":"使用工具","link_list":[{"name":"TinyPNG","link":"https://tinypng.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/tools/tinypng.png","descr":"图片在线压缩"},{"name":"Itemo","link":"https://webgradients.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/itmeo_icon.jpg","descr":"多种多样的渐变色"},{"name":"Easyicon","link":"https://www.easyicon.net/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/easy_icon.png","descr":"图标下载库"},{"name":"WallpaperAccess","link":"https://wallpaperaccess.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/wallpaperaccess_icon.png","descr":"高清图片"},{"name":"彼岸图库","link":"http://pic.netbian.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/bian_icon.png","descr":"超清壁纸"},{"name":"搞定抠图","link":"https://www.gaoding.com/koutu","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/gaoding_icon.png","descr":"免费在线抠图"},{"name":"Iconfont","link":"https://www.iconfont.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/iconfont.png","descr":"阿里矢量图标库"},{"name":"Flaticon","link":"https://www.flaticon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/flaticon.png","descr":"超好看的图标库"},{"name":"Font Awesome","link":"https://fontawesome.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/fontawesome.png","descr":"图标字体库"},{"name":"Linux 命令搜索","link":"http://www.atoolbox.net/Tool.php?Id=826","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/linux_icon.png","descr":"Linux 命令行帮助查询"},{"name":"processon","link":"https://www.processon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/process_icon.png","descr":"流程图、时序图"},{"name":"Canva","link":"https://www.canva.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/canva_icon.png","descr":"精品原创模板"}]}]}},"excerpt":"","more":"<h1 id=\"Mybatis的介绍\"><a href=\"#Mybatis的介绍\" class=\"headerlink\" title=\"Mybatis的介绍\"></a>Mybatis的介绍</h1><hr>\n<h2 id=\"Mybatis的特性\"><a href=\"#Mybatis的特性\" class=\"headerlink\" title=\"Mybatis的特性\"></a>Mybatis的特性</h2><ul>\n<li>使用连接池对连接进行管理</li>\n<li>SQL和代码分离,集中管理</li>\n<li>参数可以映射并且可以写动态SQL</li>\n<li>结果集映射</li>\n<li>缓存管理</li>\n<li>重复SQL可以提取重复使用</li>\n<li>提供插件机制</li>\n</ul>\n<h2 id=\"Mybatis的核心对象和其生命周期\"><a href=\"#Mybatis的核心对象和其生命周期\" class=\"headerlink\" title=\"Mybatis的核心对象和其生命周期\"></a>Mybatis的核心对象和其生命周期</h2><table>\n<thead>\n<tr>\n<th>对象</th>\n<th>生命周期</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>SqlSeesionFactoryBuiler</td>\n<td>方法局部 (method)</td>\n</tr>\n<tr>\n<td>SqlSessionFactory (单例)</td>\n<td>应用级别 (application)</td>\n</tr>\n<tr>\n<td>SqlSession</td>\n<td>请求和操作 (request/method)</td>\n</tr>\n<tr>\n<td>Mapper</td>\n<td>方法 (method)</td>\n</tr>\n</tbody></table>\n<h2 id=\"Mybatis的配置文件加载\"><a href=\"#Mybatis的配置文件加载\" class=\"headerlink\" title=\"Mybatis的配置文件加载\"></a>Mybatis的配置文件加载</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String resource = <span class=\"string\">&quot;/mybatis-config.xml&quot;</span>;</span><br><span class=\"line\">InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class=\"line\">SqlSessionFactory sqlSessionFactory = <span class=\"keyword\">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br></pre></td></tr></table></figure>\n<p>Mybatis会将配置文件加载到Configurition这个配置对象中(在SqlSessionFactoryBuilder中会对xml配置文件进行解析,并且通过XMLConfigBuilder对象将标签配置解析到Configuration对象中).</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">XMLConfigBuilder</span><span class=\"params\">(XPathParser parser, String environment, Properties props)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(<span class=\"keyword\">new</span> Configuration());</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.localReflectorFactory = <span class=\"keyword\">new</span> DefaultReflectorFactory();</span><br><span class=\"line\">    ErrorContext.instance().resource(<span class=\"string\">&quot;SQL Mapper Configuration&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.configuration.setVariables(props);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.parsed = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.environment = environment;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.parser = parser;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Mybatis的一些配置\"><a href=\"#Mybatis的一些配置\" class=\"headerlink\" title=\"Mybatis的一些配置\"></a>Mybatis的一些配置</h2><blockquote>\n<p>TypeHandlers</p>\n</blockquote>\n<p>Mybatis之所以可以将java类型与数据库类型进行转换是因为mybatis提供了大量的类型处理器(typeHandler),mybatis使用TypeHandlerRegistry对象去处理数据类型的对应,代码如下 :</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TypeHandlerRegistry</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Map&lt;JdbcType, TypeHandler&lt;?&gt;&gt; JDBC_TYPE_HANDLER_MAP = <span class=\"keyword\">new</span> EnumMap(JdbcType.class);</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Map&lt;Type, Map&lt;JdbcType, TypeHandler&lt;?&gt;&gt;&gt; TYPE_HANDLER_MAP = <span class=\"keyword\">new</span> ConcurrentHashMap();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> TypeHandler&lt;Object&gt; UNKNOWN_TYPE_HANDLER = <span class=\"keyword\">new</span> UnknownTypeHandler(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Map&lt;Class&lt;?&gt;, TypeHandler&lt;?&gt;&gt; ALL_TYPE_HANDLERS_MAP = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Map&lt;JdbcType, TypeHandler&lt;?&gt;&gt; NULL_TYPE_HANDLER_MAP = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TypeHandlerRegistry</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Boolean.class, (TypeHandler)(<span class=\"keyword\">new</span> BooleanTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Boolean.TYPE, (TypeHandler)(<span class=\"keyword\">new</span> BooleanTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.BOOLEAN, (TypeHandler)(<span class=\"keyword\">new</span> BooleanTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.BIT, (TypeHandler)(<span class=\"keyword\">new</span> BooleanTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Byte.class, (TypeHandler)(<span class=\"keyword\">new</span> ByteTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Byte.TYPE, (TypeHandler)(<span class=\"keyword\">new</span> ByteTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.TINYINT, (TypeHandler)(<span class=\"keyword\">new</span> ByteTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Short.class, (TypeHandler)(<span class=\"keyword\">new</span> ShortTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Short.TYPE, (TypeHandler)(<span class=\"keyword\">new</span> ShortTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.SMALLINT, (TypeHandler)(<span class=\"keyword\">new</span> ShortTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Integer.class, (TypeHandler)(<span class=\"keyword\">new</span> IntegerTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Integer.TYPE, (TypeHandler)(<span class=\"keyword\">new</span> IntegerTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.INTEGER, (TypeHandler)(<span class=\"keyword\">new</span> IntegerTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Long.class, (TypeHandler)(<span class=\"keyword\">new</span> LongTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Long.TYPE, (TypeHandler)(<span class=\"keyword\">new</span> LongTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Float.class, (TypeHandler)(<span class=\"keyword\">new</span> FloatTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Float.TYPE, (TypeHandler)(<span class=\"keyword\">new</span> FloatTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.FLOAT, (TypeHandler)(<span class=\"keyword\">new</span> FloatTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Double.class, (TypeHandler)(<span class=\"keyword\">new</span> DoubleTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Double.TYPE, (TypeHandler)(<span class=\"keyword\">new</span> DoubleTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.DOUBLE, (TypeHandler)(<span class=\"keyword\">new</span> DoubleTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Reader.class, (TypeHandler)(<span class=\"keyword\">new</span> ClobReaderTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)String.class, (TypeHandler)(<span class=\"keyword\">new</span> StringTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)String.class, JdbcType.CHAR, (TypeHandler)(<span class=\"keyword\">new</span> StringTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)String.class, JdbcType.CLOB, (TypeHandler)(<span class=\"keyword\">new</span> ClobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)String.class, JdbcType.VARCHAR, (TypeHandler)(<span class=\"keyword\">new</span> StringTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)String.class, JdbcType.LONGVARCHAR, (TypeHandler)(<span class=\"keyword\">new</span> ClobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)String.class, JdbcType.NVARCHAR, (TypeHandler)(<span class=\"keyword\">new</span> NStringTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)String.class, JdbcType.NCHAR, (TypeHandler)(<span class=\"keyword\">new</span> NStringTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)String.class, JdbcType.NCLOB, (TypeHandler)(<span class=\"keyword\">new</span> NClobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.CHAR, (TypeHandler)(<span class=\"keyword\">new</span> StringTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.VARCHAR, (TypeHandler)(<span class=\"keyword\">new</span> StringTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.CLOB, (TypeHandler)(<span class=\"keyword\">new</span> ClobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.LONGVARCHAR, (TypeHandler)(<span class=\"keyword\">new</span> ClobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.NVARCHAR, (TypeHandler)(<span class=\"keyword\">new</span> NStringTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.NCHAR, (TypeHandler)(<span class=\"keyword\">new</span> NStringTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.NCLOB, (TypeHandler)(<span class=\"keyword\">new</span> NClobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Object.class, JdbcType.ARRAY, (TypeHandler)(<span class=\"keyword\">new</span> ArrayTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.ARRAY, (TypeHandler)(<span class=\"keyword\">new</span> ArrayTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)BigInteger.class, (TypeHandler)(<span class=\"keyword\">new</span> BigIntegerTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.BIGINT, (TypeHandler)(<span class=\"keyword\">new</span> LongTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)BigDecimal.class, (TypeHandler)(<span class=\"keyword\">new</span> BigDecimalTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.REAL, (TypeHandler)(<span class=\"keyword\">new</span> BigDecimalTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.DECIMAL, (TypeHandler)(<span class=\"keyword\">new</span> BigDecimalTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.NUMERIC, (TypeHandler)(<span class=\"keyword\">new</span> BigDecimalTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)InputStream.class, (TypeHandler)(<span class=\"keyword\">new</span> BlobInputStreamTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Byte[].class, (TypeHandler)(<span class=\"keyword\">new</span> ByteObjectArrayTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Byte[].class, JdbcType.BLOB, (TypeHandler)(<span class=\"keyword\">new</span> BlobByteObjectArrayTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Byte[].class, JdbcType.LONGVARBINARY, (TypeHandler)(<span class=\"keyword\">new</span> BlobByteObjectArrayTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)<span class=\"keyword\">byte</span>[].class, (TypeHandler)(<span class=\"keyword\">new</span> ByteArrayTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)<span class=\"keyword\">byte</span>[].class, JdbcType.BLOB, (TypeHandler)(<span class=\"keyword\">new</span> BlobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)<span class=\"keyword\">byte</span>[].class, JdbcType.LONGVARBINARY, (TypeHandler)(<span class=\"keyword\">new</span> BlobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.LONGVARBINARY, (TypeHandler)(<span class=\"keyword\">new</span> BlobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.BLOB, (TypeHandler)(<span class=\"keyword\">new</span> BlobTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register(Object.class, <span class=\"keyword\">this</span>.UNKNOWN_TYPE_HANDLER);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register(Object.class, JdbcType.OTHER, <span class=\"keyword\">this</span>.UNKNOWN_TYPE_HANDLER);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register(JdbcType.OTHER, <span class=\"keyword\">this</span>.UNKNOWN_TYPE_HANDLER);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Date.class, (TypeHandler)(<span class=\"keyword\">new</span> DateTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Date.class, JdbcType.DATE, (TypeHandler)(<span class=\"keyword\">new</span> DateOnlyTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Date.class, JdbcType.TIME, (TypeHandler)(<span class=\"keyword\">new</span> TimeOnlyTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.TIMESTAMP, (TypeHandler)(<span class=\"keyword\">new</span> DateTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.DATE, (TypeHandler)(<span class=\"keyword\">new</span> DateOnlyTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((JdbcType)JdbcType.TIME, (TypeHandler)(<span class=\"keyword\">new</span> TimeOnlyTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)java.sql.Date.class, (TypeHandler)(<span class=\"keyword\">new</span> SqlDateTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Time.class, (TypeHandler)(<span class=\"keyword\">new</span> SqlTimeTypeHandler()));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.register((Class)Timestamp.class, (TypeHandler)(<span class=\"keyword\">new</span> SqlTimestampTypeHandler()));</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>如果业务需要对某个字段类型进行特殊处理,我们可以自定义TypeHandler进行使用,如下 :</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 自定义类型转换器进行业务处理</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExampleTypeHandler</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseTypeHandler</span>&lt;<span class=\"title\">String</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setNonNullParameter</span><span class=\"params\">(PreparedStatement ps, <span class=\"keyword\">int</span> i, String parameter, JdbcType jdbcType)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">    ps.setString(i, parameter);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getNullableResult</span><span class=\"params\">(ResultSet rs, String columnName)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rs.getString(columnName);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getNullableResult</span><span class=\"params\">(ResultSet rs, <span class=\"keyword\">int</span> columnIndex)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rs.getString(columnIndex);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getNullableResult</span><span class=\"params\">(CallableStatement cs, <span class=\"keyword\">int</span> columnIndex)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> cs.getString(columnIndex);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 注册该自定义的Handler 配置mybatis-config.xml --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">typeHandlers</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">typeHandler</span> <span class=\"attr\">handler</span>=<span class=\"string\">&quot;com.mybatis.test.ExampleTypeHandler&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">typeHandlers</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 使用方式一 jdbc类型转java类型 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;BaseResultMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;cn.az.model.ActivityApply&quot;</span> &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;ACTIVITY_APPLY_ID&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;activityApplyId&quot;</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">typeHandler</span>=<span class=\"string\">&quot;com.mybatis.test.ExampleTypeHandler&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;EMP_K_ACCOUNT&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;empKAccount&quot;</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 使用方式二 java类型转jdbc类型--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getBrandList&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;cn.az.vo.DictionariesVo&quot;</span>&gt;</span></span><br><span class=\"line\">\t\tselect emp.BRAND_CODE as code,brand.BRAND_NAME as name</span><br><span class=\"line\">\t\tfrom T_MARKET_EMPLOYEE_BRAND emp</span><br><span class=\"line\">\t\tleft join T_BRAND_INFO brand</span><br><span class=\"line\">\t\ton brand.BRAND_CODE = emp.BRAND_CODE</span><br><span class=\"line\">\t\tand brand.TA_CODE = #&#123;taCode, typeHandler=com.mybatis.test.ExampleTypeHandler&#125;</span><br><span class=\"line\">\t\twhere MARKET_EMPLOYEE_ID = #&#123;marketEmployeeId&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>更多配置以及标签的使用可参考文档<a href=\"https://mybatis.org/mybatis-3/zh/\">Mybatis中文学习官网</a></p>\n<h1 id=\"Mybatis的缓存\"><a href=\"#Mybatis的缓存\" class=\"headerlink\" title=\"Mybatis的缓存\"></a>Mybatis的缓存</h1><hr>\n<h2 id=\"一级缓存\"><a href=\"#一级缓存\" class=\"headerlink\" title=\"一级缓存\"></a>一级缓存</h2><p>一级缓存是存放在BaseExecutor执行器中的,是会话级别的缓存,无法跨会话访问,当用户访问数据库时,会先创建一个执行器,执行器访问缓存,如果已有数据则直接返回如果没有再调用数据库并且将查询结果返回用户后将数据存入缓存中。<br>一级缓存默认就是开启的,namespace级别(同namespace中共享)<br><code>mybatis的增删改操作默认是会清空缓存的,查询操作默认是不会清空缓存的,也就是在mapper.xml文件中的&lt;insert&gt;/&lt;update&gt;等标签上有flushCache属性,会有默认值,为true执行该语句后会清空缓存,为false执行该语句后不会清空缓存</code><br><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309421.png\"><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309421.png\" alt=\"img\"></a><br><code>一级缓存如果跨会话使用的话会有脏数据,如一个会话先做一个查询然后对数据进行更新,更新后使用另一个会话去查询,此时查询的是另一个缓存中的数据而不是更新后的数据.</code><br>如果解决脏数据问题,那么就要使用二级缓存了.</p>\n<h2 id=\"二级缓存\"><a href=\"#二级缓存\" class=\"headerlink\" title=\"二级缓存\"></a>二级缓存</h2><p>二级缓存使用的是装饰着模式,当我们开启二级缓存后mybatis会对BaseExecutor进行一个包装,该包装对象为CachingExecutor.二级缓存的管理是使用TransactionalCacheManager进行管理的.<br>如何开启二级缓存 :</p>\n<ol>\n<li>在mybatis-config.xml配置文件中开启二级缓存<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">setting</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;cacheEnable&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;true&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>需要在写SQL的mapper.xml文件中加上标签<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">cache</span>/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--上下两者相等,下面的属性配置为默认配置--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- &lt;cache type=&quot;org.apache.ibatis.cache.impl.PerpetualCache&quot;</span></span><br><span class=\"line\"><span class=\"comment\">\t   size=&quot;1024&quot;</span></span><br><span class=\"line\"><span class=\"comment\">\t   eviction=&quot;LRU&quot;</span></span><br><span class=\"line\"><span class=\"comment\">\t   flushInterval=&quot;120000&quot;</span></span><br><span class=\"line\"><span class=\"comment\">\t   readOnly=&quot;false&quot;/&gt; --&gt;</span></span><br></pre></td></tr></table></figure>\n如果开启二级缓存后,想要对某一个<code>&lt;select&gt;</code>标签进行二级缓存的使用关闭,可以使用属性<code>useCache=false</code><br><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309422.png\"><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309422.png\" alt=\"img\"></a></li>\n</ol>\n<h1 id=\"Mybatis的批量操作方式\"><a href=\"#Mybatis的批量操作方式\" class=\"headerlink\" title=\"Mybatis的批量操作方式\"></a>Mybatis的批量操作方式</h1><hr>\n<blockquote>\n<p>通过JAVA代码</p>\n</blockquote>\n<p>通过java代码的方式进行for循环然后在循环内部进行新增和编辑操作(不建议使用)该方式虽然写起来简单,但是会非常消耗性能,会多次建立连接和释放连接</p>\n<blockquote>\n<p>mybatis支持批量操作的语句</p>\n</blockquote>\n<p>   SQL批量插入的语句 :<br>   <code>insert into User (id,name ....) values (1, aaa ....) , (2, bbb ....) , (3, ccc ...) ....</code><br>   mybatis 使用动态标签<code>&lt;foreach&gt;</code> 拼接成该方式去批量插入,这样会减少数据库的连接与释放的次数以减少性能的消耗,但是数据库在接受sql时会有大小的限制,默认是<code>4m</code>大小,如果SQL语句拼接的过长的话会报错.</p>\n<blockquote>\n<p>mybatis支持自定义批量操作执行器</p>\n</blockquote>\n<ol>\n<li>自定义一个批量操作的执行器 Batch Executor</li>\n<li>mybatis 支持三中执行器,执行器是封装在DefaultSqlSession 中的,真正执行SQL的就是该执行器,而SessionFactory所创建的Session只是提供了一些API供我们调用,执行器的三中模式 :<br>a. SIMPLE 最普通的执行器,使用的是Statement处理语句<br>b. REUSE 会重用预处理语句,使用PreparedStatement处理语句,意思是我们所执行过的语句会把它缓存起来,下次再执行的时候会从缓存里面去拿到该语句然后进行执行<br>c. BATCH 批处理执行器,JDBC链接操作数据库时提供了PreparedStatement.addBatch()方法去添加多个SQL语句,然后成批次的放入PreparedStatement的批处理执行器(executeBatch)中执行,无论是mybatis还是spirngjdbc都封装了该批处理方式</li>\n</ol>\n<h1 id=\"Mybatis的体系架构与执行流程\"><a href=\"#Mybatis的体系架构与执行流程\" class=\"headerlink\" title=\"Mybatis的体系架构与执行流程\"></a>Mybatis的体系架构与执行流程</h1><hr>\n<h2 id=\"体系架构\"><a href=\"#体系架构\" class=\"headerlink\" title=\"体系架构\"></a>体系架构</h2><ol>\n<li>提供给应用直接使用 : 接口层</li>\n<li>处理数据库操作 : 核心层</li>\n<li>支持工作(代码的抽取提供复用) : 基础层</li>\n</ol>\n<p><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309423.jpg\"><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309423.jpg\" alt=\"img\"></a></p>\n<h2 id=\"工作流程\"><a href=\"#工作流程\" class=\"headerlink\" title=\"工作流程\"></a>工作流程</h2><ol>\n<li>解析配置文件初始化Configuration对象</li>\n<li>使用Build创建工厂类</li>\n<li>使用工厂类创建会话</li>\n<li>会话操作数据库</li>\n</ol>\n<blockquote>\n<p>流程图如下<br><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309424.png\"><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309424.png\" alt=\"img\"></a></p>\n</blockquote>\n<blockquote>\n<p>具体流程细节时序图</p>\n</blockquote>\n<ol>\n<li><p>配置文件解析流程与SqlSessionFactory的创建过程<br><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309425.png\"><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309425.png\" alt=\"img\"></a></p>\n</li>\n<li><p>会话工厂创建会话的过程<br><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309426.png\"><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309426.png\" alt=\"img\"></a></p>\n</li>\n<li><p>会话工厂通过getMapper(xxx.class)获取代理对象的过程<br><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309427.png\"><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309427.png\" alt=\"img\"></a></p>\n</li>\n<li><p>代理对象执行SQL的过程<br><a href=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309428.png\"><img src=\"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309428.png\" alt=\"img\"></a></p>\n</li>\n</ol>\n<p>以上大多是以流程图以及时序图展示的过程，如果想具体了解可以查看下方代码，该代码通过上方的过程摘取出Mybatis重要的构建过程，分为V1,V2两个版本,V1为简易版，V2为详细版</p>\n<a class=\"ghcard\" rel=\"external nofollow noopener noreferrer\" href=\"https://github.com/zhangbiao-code/mebatis\"><img src=\"https://github-readme-stats.vercel.app/api/pin/?username=zhangbiao-code&repo=mebatis&theme=solarized-light&show_owner=true\"/></a>\n"},{"title":"模板模式","abbrlink":202009131022,"date":"2020-09-13T16:23:05.000Z","Categories":["设计模式"],"cover":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202009131022/cover.png","description":"Mybatis的相关知识学习总结以及对整体的体系架构和工作流程的梳理，通过学习总结该部分内容深入理解该框架。","_content":"\n### 模板模式的定义\n\n模板模式通常又叫模板方法模式(Template Method Pattern)是指定义一个算法的骨架，并允许子类为一个或者多个步骤提供实现。模板方法使得子类可以在不改变算法结构的情况下，重新定义算法的某些步骤，属于行为性设计模式。\n\n### 模板模式的应用场景\n\n​我们平时办理入职流程填写入职登记表-->打印简历-->复印学历-->复印身份证-->签订 劳动合同-->建立花名册-->办理工牌-->安排工位等;再比如，我平时在家里炒菜:洗锅 -->点火-->热锅-->上油-->下原料-->翻炒-->放调料-->出锅，这些都是模板模式的体现。\n\n#### 模板方法适用于以下应用场景:\n\n+ 一次性实现一个算法的不变的部分，并将可变的行为留给子类来实现\n+ 各子类中公共的行为被提取出来并集中到一个公共的父类中，从而避免代码重复\n\n### 实际项目中Excel数据导入案例\n\n该部分业务场景为:\n\n    有多个Excel模板，客户希望在不同的业务模块下下载该模块固定的Excel模板，将数据录入模板后并将模板上传，系统自动将模板内的数据录入到系统中。\n\n使用模板模式原因：录入数据的过程是一样的,只是每个模板解析数据的行列、数据校验和存储时所需的操作对象不同,所以可以使用模板模式,在模板中定义大体的执行流程,不同的解析数据的方式可以放到不同子对象中实现,录入数据的过程可以分为:\n\n    1. check模板文件是否正确 \n    2. 加载该文件遍历解析出每一行数据 \n    3. 将数据解析到集合中 \n    4. 批量存储数据 \n    5. 清除该过程中使用的临时对象或集合\n\n创建一个模板类 AbstractLoadExcelDataTemplate:\n\n```java\n/**\n * excel模板数据导入模板\n */\npublic abstract class AbstractLoadExcelDataTemplate {\n\n    public Long id; // 里程碑模板导入时里程碑数据关联所需的外键\n\n    public int milepostType; // 用于判断里程碑外键的类型属于项目的里程碑还是合同的里程碑 (暂时无合同里程碑，留待以后使用)\n\n    public Long currentLoginUserId; // 当前登录用户\n\n    public String excelName; // excel模板名称\n\n    public String dataSheetName; // sheet页名称\n\n    public int dataBeginLineNum; // excel 数据起始行数\n\n    public final static String suffix = \"xlsx\";\n\n    public static final long projectUserRoleId = 0l; // 项目经理RoleID\n\n    public static final long controlUserRoleId = 1l; // 管控经理RoleID\n\n    public Map<String, Long> projectTypeOneMap = new HashMap<>(); // 一级类别Map key->类别名称  value->类别ID\n\n    public Map<String, Long> projectTypeTwoMap = new HashMap<>(); // 二级类别Map key->类别名称  value->类别ID\n\n    public Map<String, Long> projectYearMap = new HashMap<>(); // 项目年度Map key->年度  value->年度ID\n\n    public Map<String, Long> projectCategoryMap = new HashMap<>(); // 项目类型Map key->类型名称  value->类型ID\n\n    public Map<String, Long> projectNatureMap = new HashMap<>(); // 项目性质Map key->性质名称  value->性质ID\n\n    public Map<String, Long> deptMap = new HashMap<>(); // 项目部门Map key->部门名称  value->部门ID\n\n    public UserService userService;\n\n    public UserRoleService userRoleService;\n\n    public ProjectService projectService;\n\n    public SettleTransferFinalService settleTransferFinalService;\n\n    public ResearchReferenceNumService researchReferenceNumService;\n\n    public InvestPlanInfoService investPlanInfoService;\n\n    public MilepostService milepostService;\n\n    // ------------------------------ 加载基础数据 Begin -------------------------------\n    public void setDept(List<Dept> list) {\n\n        for (Dept dept : list) {\n            deptMap.put(dept.getName(), dept.getId());\n        }\n    }\n\n    public void setProjectType(List<ProjectType> list) {\n\n        for (ProjectType projectType : list) {\n\n            if (projectType.getParentId() == 0l) {\n                projectTypeOneMap.put(projectType.getName(), projectType.getId());\n            } else {\n                projectTypeTwoMap.put(projectType.getName(), projectType.getId());\n            }\n        }\n    }\n\n    public void setProjectYear(List<Dictionary> list) {\n\n        for (Dictionary dictionary : list) {\n\n            projectYearMap.put(dictionary.getName(), dictionary.getId());\n        }\n    }\n\n    public void setProjectCategory(List<Dictionary> list) {\n\n        for (Dictionary dictionary : list) {\n\n            projectYearMap.put(dictionary.getName(), dictionary.getId());\n        }\n    }\n\n    public void setProjectNature(List<Dictionary> list) {\n\n        for (Dictionary dictionary : list) {\n\n            projectYearMap.put(dictionary.getName(), dictionary.getId());\n        }\n    }\n    // ------------------------------ 加载基础数据 End -------------------------------\n\n    // 模板模式核心控制流程的代码\n    public void inputData(MultipartFile file) throws BusinessException, IOException {\n\n        XSSFSheet sheet = this.checkFile(file);\n\n        Row row;\n\n        for (int rowNum = this.dataBeginLineNum; rowNum <= sheet.getLastRowNum(); rowNum++) {\n\n            row = sheet.getRow(rowNum);\n\n            try {\n                this.readData(row);\n            } catch (BusinessException e) {\n                throw new BusinessException(\"第【\" + rowNum + \"】行中\" + e.message);\n            }\n        }\n\n        this.saveData();\n\n        this.clear(); // 释放资源\n    }\n\n    abstract void readData(Row row) throws BusinessException;\n\n    abstract void saveData();\n\n    abstract void clear();\n\n    public XSSFSheet checkFile(MultipartFile file) throws BusinessException, IOException {\n\n        XSSFSheet sheet = null;\n\n        if (file != null) {\n\n            String originalFilename = file.getOriginalFilename();\n            String[] arr = originalFilename.split(\"\\\\.\");\n\n            checkSuffix(arr[1]);\n            checkExcelName(arr[0]);\n\n            InputStream is = file.getInputStream();\n            XSSFWorkbook workbook = new XSSFWorkbook(is);\n\n            sheet = checkDataSheetName(workbook);\n            checkSheetDataIsNotNull(sheet);\n        }\n\n        return sheet;\n    }\n\n    private void checkExcelName(String excelName) throws BusinessException {\n\n        if (!this.excelName.equals(excelName)) {\n            throw new BusinessException(\"不可修改模板文件名称，请先恢复模板名称再尽心数据导入\");\n        }\n    }\n\n    private void checkSuffix(String suffix) throws BusinessException {\n\n        if (!this.suffix.equals(suffix)) {\n            throw new BusinessException(\"模板文件格式错误\");\n        }\n    }\n\n    private XSSFSheet checkDataSheetName(XSSFWorkbook workbook) throws BusinessException {\n\n        XSSFSheet sheet = workbook.getSheet(this.dataSheetName);\n        if (sheet == null) {\n            throw new BusinessException(\"无可录入数据的sheet页(不可修改sheet页名称)\");\n        }\n        return sheet;\n    }\n\n    private void checkSheetDataIsNotNull(XSSFSheet sheet) throws BusinessException {\n        if (!(sheet.getLastRowNum() > this.dataBeginLineNum)) {\n            throw new BusinessException(\"请先将数据录入模板文件再进行导入\");\n        }\n    }\n\n    /**\n     * check时间格式为YYYY-MM-DD\n     * @param time\n     * @return\n     */\n    public boolean checkDate(String time) {\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy/MM/dd\");\n        try {\n            Date t = dateFormat.parse(time);\n        } catch (Exception ex) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * check金额后面只允许有两位小数\n     * @param money\n     * @return\n     */\n    public boolean checkMoney(String money) {\n\n        if (money.contains(\"\\\\.\")) {\n            if (money.split(\"\\\\.\")[1].length() > 2) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n```\n\n该业务中存在两处模板数据录入：1、项目的数据导入  2、项目里程碑的数据导入(里程碑：项目的阶段介绍如项目开始阶段，验收阶段，维护阶段等)\n\n创建项目对象LoadProjectBaseData\n```java\npublic class LoadProjectBaseData extends AbstractLoadExcelDataTemplate {\n\n    public String excelName = \"项目基本信息导入模板\";\n\n    public String dataSheetName = \"项目导入模板\";\n\n    public List<Project> projectList = new ArrayList<>();\n\n    public List<SettleTransferFinal> settleTransferFinalList = new ArrayList<>();\n\n    public List<ResearchReferenceNum> researchReferenceNumList = new ArrayList<>();\n\n    public List<InvestPlanInfo> investPlanInfoList = new ArrayList<>();\n\n    public int dataBeginLineNum = 3;\n\n    public LoadProjectBaseData() {\n        super.excelName = this.excelName;\n        super.dataSheetName = this.dataSheetName;\n        super.dataBeginLineNum = this.dataBeginLineNum;\n    }\n\n    @Override\n    public void readData(Row row) throws BusinessException {\n\n        String projectCode = row.getCell(5).getStringCellValue();\n\n        if (StringUtil.isNullOrEmpty(projectCode)) {\n            throw new BusinessException(\"项目编码不能为空，请先完善数据\");\n        }\n\n        List<Project> list = projectService.list(new QueryWrapper<Project>().eq(\"code\", projectCode).eq(\"deleted\", 0));\n\n        // 项目编码不存在在当前系统中才进行数据的录入\n        if (list.size() <= 0) {\n\n            projectList.add(readCellProjectData(row));\n\n            settleTransferFinalList.add(readCellSettleTransferFinalData(row));\n\n            researchReferenceNumList.add(readCellResearchReferenceNumData(row));\n\n            investPlanInfoList.add(readCellInvestPlanInfoData(row));\n        }\n    }\n\n    @Override\n    public void saveData() {\n\n        projectService.saveBatch(projectList);\n\n        settleTransferFinalService.saveBatch(settleTransferFinalList);\n\n        researchReferenceNumService.saveBatch(researchReferenceNumList);\n\n        investPlanInfoService.saveBatch(investPlanInfoList);\n    }\n\n    @Override\n    public void clear() {\n\n        this.projectList.clear();\n        this.settleTransferFinalList.clear();\n        this.investPlanInfoList.clear();\n        this.researchReferenceNumList.clear();\n\n        super.deptMap.clear();\n        super.projectCategoryMap.clear();\n        super.projectYearMap.clear();\n        super.projectNatureMap.clear();\n        super.projectTypeOneMap.clear();\n        super.projectTypeTwoMap.clear();\n\n        super.userService = null;\n        super.userRoleService = null;\n        super.projectService = null;\n        super.settleTransferFinalService = null;\n        super.researchReferenceNumService = null;\n        super.investPlanInfoService = null;\n    }\n\n    private Project readCellProjectData(Row row) throws BusinessException {\n\n        Project project = new Project();\n\n        if (StringUtil.isNullOrEmpty(row.getCell(1).getStringCellValue())) {\n            throw new BusinessException(\"项目类别不能为空，请先完善数据\");\n        }\n\n        Long projectTypeOneId = super.projectTypeOneMap.get(row.getCell(1).getStringCellValue());\n\n        if (projectTypeOneId == null) {\n            throw new BusinessException(\"项目类别只能选择现有的类别，请先完善数据\");\n        }\n\n        if (StringUtil.isNullOrEmpty(row.getCell(2).getStringCellValue())) {\n            throw new BusinessException(\"项目二级分类不能为空，请先完善数据\");\n        }\n\n        Long projectTypeTwoId = super.projectTypeTwoMap.get(row.getCell(2).getStringCellValue());\n\n        if (projectTypeTwoId == null) {\n            throw new BusinessException(\"二级分类只能选择现有的分类，请先完善数据\");\n        }\n\n        String projectYear = row.getCell(3).getStringCellValue();\n        Long projectYearId = super.projectYearMap.get(projectYear);\n        if (projectYearId == null) {\n            throw new BusinessException(\"项目年度不能为空，请先完善数据\");\n        }\n\n        String projectName = row.getCell(4).getStringCellValue();\n\n        if (StringUtil.isNullOrEmpty(projectName)) {\n            throw new BusinessException(\"项目名称不能为空，请先完善数据\");\n        }\n\n        String projectCategory = row.getCell(7).getStringCellValue();\n\n        if (!StringUtil.isNullOrEmpty(projectCategory) && super.projectCategoryMap.get(projectCategory) == null) {\n            throw new BusinessException(\"项目类型只能选择现有类型，请先完善数据\");\n        } else if (super.projectCategoryMap.get(projectCategory) != null) {\n            project.setProjectCategoryDictionaryId(super.projectCategoryMap.get(projectCategory));\n        }\n\n        String projectNature = row.getCell(8).getStringCellValue();\n\n        if (!StringUtil.isNullOrEmpty(projectNature) && super.projectNatureMap.get(projectNature) == null) {\n            throw new BusinessException(\"项目性质只能选择现有性质，请先完善数据\");\n        } else if (super.projectNatureMap.get(projectNature) != null) {\n            project.setNatureDictionaryId(super.projectCategoryMap.get(projectNature));\n        }\n\n        String isNotFive = row.getCell(9).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(isNotFive)) {\n            if (\"是\".equals(isNotFive)) {\n                project.setIsNotFive(true);\n            } else if (\"否\".equals(isNotFive)) {\n                project.setIsNotFive(false);\n            } else {\n                throw new BusinessException(\"是否五率只能填写是或否，请先完善数据\");\n            }\n        }\n\n        String deptName = row.getCell(10).getStringCellValue();\n        if (StringUtil.isNullOrEmpty(deptName)) {\n            throw new BusinessException(\"责任部门不能为空，请先完善数据\");\n        }\n\n        Long deptId = super.deptMap.get(deptName);\n        if (deptId == null) {\n            throw new BusinessException(\"责任部门只能选择现有的部门，请先完善数据\");\n        }\n\n        String projectUserAccountNo = row.getCell(11).getStringCellValue();\n        String projectUserName = row.getCell(12).getStringCellValue();\n\n        if (StringUtil.isNullOrEmpty(projectUserAccountNo)) {\n            throw new BusinessException(\"项目经理的账号不能为空，请先完善数据\");\n        }\n\n        if (StringUtil.isNullOrEmpty(projectUserName)) {\n            throw new BusinessException(\"项目经理姓名不能为空，请先完善数据\");\n        }\n\n        List<User> userList = userService.list(new QueryWrapper<User>().eq(\"account_no\", projectUserAccountNo).eq(\"nick_name\", projectUserName).eq(\"deleted\", 0));\n        if (userList == null || userList.size() == 0) {\n            throw new BusinessException(\"项目经理姓名和账号不存在在当前系统中，请排查数据\");\n        } else if (userList.size() > 1) {\n            throw new BusinessException(\"项目经理姓名和账号在系统中存在多个，请先精准数据\");\n        } else {\n            UserRole userRole = userRoleService.getOne(new QueryWrapper<UserRole>().eq(\"uid\", userList.get(0).getId()));\n            if (userRole == null || userRole.getRid() != projectUserRoleId) {\n                throw new BusinessException(\"该账号角色不属于项目经理，请先核实数据\");\n            }\n            project.setProjectUserId(userList.get(0).getId());\n        }\n\n        String controlUserAccountNo = row.getCell(13).getStringCellValue();\n        String controlUserName = row.getCell(14).getStringCellValue();\n\n        if (StringUtil.isNullOrEmpty(controlUserAccountNo)) {\n            throw new BusinessException(\"管控经理的账号不能为空，请先完善数据\");\n        }\n\n        if (StringUtil.isNullOrEmpty(controlUserName)) {\n            throw new BusinessException(\"管控经理姓名不能为空，请先完善数据\");\n        }\n\n        userList = userService.list(new QueryWrapper<User>().eq(\"account_no\", controlUserAccountNo).eq(\"nick_name\", controlUserName).eq(\"deleted\", 0));\n        if (userList == null || userList.size() == 0) {\n            throw new BusinessException(\"该管控经理姓名和账号不存在在当前系统中，请排查数据\");\n        } else if (userList.size() > 1) {\n            throw new BusinessException(\"该管控经理姓名和账号在系统中存在多个，请先精准数据\");\n        } else {\n            UserRole userRole = userRoleService.getOne(new QueryWrapper<UserRole>().eq(\"uid\", userList.get(0).getId()));\n            if (userRole == null || userRole.getRid() != controlUserRoleId) {\n                throw new BusinessException(\"该账号角色不属于管控经理，请先核实数据\");\n            }\n            project.setControlUserId(userList.get(0).getId());\n        }\n\n        String planBeginDateText = row.getCell(15).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(planBeginDateText)) {\n            if (!checkDate(planBeginDateText)) {\n                throw new BusinessException(\"计划开工时间格式为YYYY-MM-DD,请先调整时间格式\");\n            }\n            project.setPlanBeginDate(LocalDateTime.parse(planBeginDateText));\n        }\n\n        String planEndDateText = row.getCell(16).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(planEndDateText)) {\n            if (!checkDate(planEndDateText)) {\n                throw new BusinessException(\"计划竣工时间格式为YYYY-MM-DD,请先调整时间格式\");\n            }\n            project.setPlanBeginDate(LocalDateTime.parse(planEndDateText));\n        }\n\n        project.setProjectTypeOneId(projectTypeOneId);\n        project.setProjectTypeTwoId(projectTypeTwoId);\n        project.setProjectYear(projectYearId);\n        project.setName(projectName);\n        project.setCode(row.getCell(5).getStringCellValue());\n        project.setRemark(row.getCell(6).getStringCellValue());\n        project.setDeptId(deptId);\n        project.setDeleted(false);\n        project.setCreateTime(LocalDateTime.now());\n        project.setCreateUser(currentLoginUserId);\n\n        return project;\n    }\n\n    public SettleTransferFinal readCellSettleTransferFinalData(Row row) {\n\n        SettleTransferFinal settleTransferFinal = new SettleTransferFinal();\n\n        String planAcceptTime = row.getCell(17).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(planAcceptTime)) {\n            if (!checkDate(planAcceptTime)) {\n                throw new BusinessException(\"计划验收时间格式为YYYY-MM-DD,请先调整时间格式\");\n            }\n            settleTransferFinal.setPlanAcceptTime(LocalDateTime.parse(planAcceptTime));\n        }\n\n        String planSettlementTime = row.getCell(18).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(planSettlementTime)) {\n            if (!checkDate(planSettlementTime)) {\n                throw new BusinessException(\"计划结算时间格式为YYYY-MM-DD,请先调整时间格式\");\n            }\n            settleTransferFinal.setPlanSettlementTime(LocalDateTime.parse(planSettlementTime));\n        }\n\n        String planFinalTime = row.getCell(19).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(planFinalTime)) {\n            if (!checkDate(planFinalTime)) {\n                throw new BusinessException(\"计划决算时间格式为YYYY-MM-DD,请先调整时间格式\");\n            }\n            settleTransferFinal.setPlanFinalTime(LocalDateTime.parse(planFinalTime));\n        }\n\n        String planTransferStatusDictionaryTime = row.getCell(20).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(planTransferStatusDictionaryTime) && planTransferStatusDictionaryTime.contains(\"/\")) {\n            if (!checkDate(planTransferStatusDictionaryTime)) {\n                throw new BusinessException(\"计划转资时间格式为YYYY-MM-DD,请先调整时间格式\");\n            }\n            settleTransferFinal.setPlanTransferStatusDictionaryTime(LocalDateTime.parse(planTransferStatusDictionaryTime));\n        }\n\n        settleTransferFinal.setDeleted(false);\n        settleTransferFinal.setCreateTime(LocalDateTime.now());\n        settleTransferFinal.setCreateUser(currentLoginUserId);\n\n        return settleTransferFinal;\n    }\n\n    private ResearchReferenceNum readCellResearchReferenceNumData(Row row) {\n\n        ResearchReferenceNum researchReferenceNum = new ResearchReferenceNum();\n\n        String referenceNum = row.getCell(21).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(referenceNum)) {\n            researchReferenceNum.setReferenceNum(referenceNum);\n        }\n\n        String amount = row.getCell(22).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(amount)) {\n            if (!checkMoney(amount)) {\n                throw new BusinessException(\"可研批复金额只允许小数后两位，请先修改该金额\");\n            }\n            researchReferenceNum.setAmount(new BigDecimal(amount));\n        }\n\n        String approveTime = row.getCell(23).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(approveTime)) {\n            researchReferenceNum.setApproveTime(LocalDateTime.parse(approveTime));\n        }\n\n        researchReferenceNum.setDeleted(false);\n        researchReferenceNum.setCreateTime(LocalDateTime.now());\n        researchReferenceNum.setCreateUser(currentLoginUserId);\n\n        return researchReferenceNum;\n    }\n\n    private InvestPlanInfo readCellInvestPlanInfoData(Row row) {\n\n        InvestPlanInfo info = new InvestPlanInfo();\n\n        String investPlanYear = row.getCell(24).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(investPlanYear)) {\n            info.setInvestPlanYear(Integer.valueOf(investPlanYear));\n        }\n\n        String investPlanNum = row.getCell(25).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(investPlanNum)) {\n            info.setInvestPlanNum(investPlanNum);\n        }\n\n        String planDownTime = row.getCell(26).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(planDownTime)) {\n            if (!checkDate(planDownTime)) {\n                throw new BusinessException(\"投资计划下达日期格式为YYYY-MM-DD,请先调整时间格式\");\n            }\n            info.setPlanDownTime(LocalDateTime.parse(planDownTime));\n        }\n\n        String investPlanAmount = row.getCell(27).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(investPlanAmount)) {\n            if (!checkMoney(investPlanAmount)) {\n                throw new BusinessException(\"投资计划总金额只允许小数后两位，请先修改该金额\");\n            }\n            info.setInvestPlanAmount(new BigDecimal(investPlanAmount));\n        }\n\n        String capitalAmount = row.getCell(28).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(capitalAmount)) {\n            if (!checkMoney(capitalAmount)) {\n                throw new BusinessException(\"计划资本金只允许小数后两位，请先修改该金额\");\n            }\n            info.setCapitalAmount(new BigDecimal(capitalAmount));\n        }\n\n        String costAmount = row.getCell(29).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(costAmount)) {\n            if (!checkMoney(costAmount)) {\n                throw new BusinessException(\"计划成本金只允许小数后两位，请先修改该金额\");\n            }\n            info.setCostAmount(new BigDecimal(costAmount));\n        }\n\n        info.setDeleted(false);\n        info.setCreateTime(LocalDateTime.now());\n        info.setCreateUser(currentLoginUserId);\n\n        return info;\n    }\n\n}\n```\n\n创建里程碑对象LoadMilepostData\n\n```java\npublic class LoadMilepostData extends AbstractLoadExcelDataTemplate {\n\n    public String excelName = \"项目基本信息导入模板\";\n\n    public String dataSheetName = \"项目导入模板\";\n\n    public int dataBeginLineNum = 3;\n\n    public List<Milepost> milepostList = new ArrayList<>();\n\n    public LoadMilepostData() {\n        super.excelName = this.excelName;\n        super.dataSheetName = this.dataSheetName;\n        super.dataBeginLineNum = this.dataBeginLineNum;\n    }\n\n    @Override\n    public void readData(Row row) {\n\n        milepostList.add(readCellMilepostData(row));\n    }\n\n    @Override\n    public void saveData() {\n\n        milepostService.saveBatch(milepostList);\n    }\n\n    @Override\n    public void clear() {\n\n        this.milepostList.clear();\n        super.milepostService = null;\n    }\n\n    private Milepost readCellMilepostData(Row row) throws BusinessException {\n\n        Milepost milepost = new Milepost();\n\n        String name = row.getCell(0).getStringCellValue();\n        if (StringUtil.isNullOrEmpty(name)) {\n            throw new BusinessException(\"里程碑名称未填写，请先完善数据\");\n        }\n\n        milepost.setName(name);\n\n        String plannedTime = row.getCell(1).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(plannedTime)) {\n            if (!checkDate(plannedTime)) {\n                throw new BusinessException(\"计划时间格式为YYYY-MM-DD,请先调整时间格式\");\n            }\n            milepost.setPlannedTime(LocalDateTime.parse(plannedTime));\n        }\n\n        String actualTime = row.getCell(2).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(actualTime)) {\n            if (!checkDate(actualTime)) {\n                throw new BusinessException(\"实际时间格式为YYYY-MM-DD,请先调整时间格式\");\n            }\n            milepost.setActualTime(LocalDateTime.parse(actualTime));\n        }\n\n        milepost.setReasonsOfDelay(row.getCell(3).getStringCellValue());\n        milepost.setPromoteMeasures(row.getCell(4).getStringCellValue());\n\n        milepost.setDeleted(false);\n        milepost.setCreateTime(LocalDateTime.now());\n        milepost.setCreateUser(currentLoginUserId);\n        milepost.setConId(id);\n        milepost.setType(milepostType);\n\n        return milepost;\n    }\n}\n\n```\n\n由于数据录入频率不会过于频繁，所以只需创建一个Controller即可 :\n\n```java\n@PostMapping(\"/excelInputData\")\n@ApiOperation(value = \"模板数据导入\", response = Result.class)\npublic Result excelInputData(@RequestParam(\"type\") int type, @RequestParam(\"id\") long id, @RequestParam(value = \"milepostType\", required = false) int milepostType, @RequestParam(\"file\") MultipartFile file) {\n\n    try {\n        // 根据传入的Type不同过去不同的模板子对象进行解析\n        LoadExcelDataEnum excelDataEnum = LoadExcelDataEnum.loadEnum(type);\n\n        // 根据type获取所需要的模板对象\n        AbstractLoadExcelDataTemplate template = excelDataEnum.createTemplate();\n\n        template.currentLoginUserId = getUserId();\n\n        // 加载模板所需基础数据\n        excelDataEnum.loadTemplateNeedBaseData(template, deptService, projectTypeService, dictionaryService, userService, userRoleService, projectService, settleTransferFinalService, researchReferenceNumService, investPlanInfoService, milepostService, id, milepostType);\n\n        // 导入Excel数据\n        template.inputData(file);\n\n        return ResultGenerator.genSuccessResult();\n    } catch (BusinessException e) {\n        e.printStackTrace();\n        return ResultGenerator.genFailResult(e.message);\n    } catch (Exception e) {\n        e.printStackTrace();\n        return ResultGenerator.genFailResult(ErrorCode.SYS_ERROR);\n    }\n}\n```\n\n上面代码中本应采用工厂模式判断type类型获取不同的模板子对象，但博主可能偏爱枚举对象，绝对枚举对象就是工厂和策略的合集，所以上方采用枚举的方式进行获取模板对象。\n\n枚举对象LoadExcelDataEnum\n\n```java\npublic enum LoadExcelDataEnum {\n\n    PROJECT(1, \"项目基本信息导入模板.xlsx\") {\n        @Override\n        public AbstractLoadExcelDataTemplate createTemplate() {\n            return new LoadProjectBaseData();\n        }\n\n        @Override\n        public void loadTemplateNeedBaseData(AbstractLoadExcelDataTemplate template, DeptService deptService, ProjectTypeService projectTypeService, DictionaryService dictionaryService, UserService userService, UserRoleService userRoleService, ProjectService projectService, SettleTransferFinalService settleTransferFinalService, ResearchReferenceNumService researchReferenceNumService, InvestPlanInfoService investPlanInfoService, MilepostService milepostService, long id, int milepostType) {\n            // 加载基础数据，以便减少查询次数\n            List<Dept> deptList = deptService.list();\n            List<ProjectType> projectTypeList = projectTypeService.list();\n            List<Dictionary> projectYearList = dictionaryService.list(new QueryWrapper<Dictionary>().eq(\"type\", \"ProjectYear\").eq(\"status\", \"1\").eq(\"deleted\", \"0\"));\n            List<Dictionary> projectCategoryList = dictionaryService.list(new QueryWrapper<Dictionary>().eq(\"type\", \"ProjectCategory\").eq(\"status\", \"1\").eq(\"deleted\", \"0\"));\n            List<Dictionary> projectNatureList = dictionaryService.list(new QueryWrapper<Dictionary>().eq(\"type\", \"ProjectNature\").eq(\"status\", \"1\").eq(\"deleted\", \"0\"));\n\n            // 将基础数据放入模板\n            template.setProjectYear(projectYearList);\n            template.setProjectCategory(projectCategoryList);\n            template.setProjectNature(projectNatureList);\n            template.setProjectType(projectTypeList);\n            template.setDept(deptList);\n\n            // 注入操作对象\n            template.userService = userService;\n            template.userRoleService = userRoleService;\n            template.projectService = projectService;\n            template.settleTransferFinalService = settleTransferFinalService;\n            template.researchReferenceNumService = researchReferenceNumService;\n            template.investPlanInfoService = investPlanInfoService;\n        }\n    },\n    MILEPOST(2, \"里程碑导入模板.xlsx\") {\n        @Override\n        public AbstractLoadExcelDataTemplate createTemplate() {\n            return new LoadMilepostData();\n        }\n\n        @Override\n        public void loadTemplateNeedBaseData(AbstractLoadExcelDataTemplate template, DeptService deptService, ProjectTypeService projectTypeService, DictionaryService dictionaryService, UserService userService, UserRoleService userRoleService, ProjectService projectService, SettleTransferFinalService settleTransferFinalService, ResearchReferenceNumService researchReferenceNumService, InvestPlanInfoService investPlanInfoService, MilepostService milepostService, long id, int milepostType) {\n\n            template.id = id;\n            template.milepostType = milepostType;\n            template.milepostService = milepostService;\n        }\n    };\n\n    public int type;\n\n    public String name;\n\n    LoadExcelDataEnum(int type, String name) {\n        this.type = type;\n        this.name = name;\n    }\n\n    public static LoadExcelDataEnum loadEnum(int type) {\n\n        for (LoadExcelDataEnum excelDataEnum : values()) {\n            if (excelDataEnum.type == type) {\n                return excelDataEnum;\n            }\n        }\n        return null;\n    }\n\n    public AbstractLoadExcelDataTemplate createTemplate() {\n        return null;\n    }\n\n    public void loadTemplateNeedBaseData(AbstractLoadExcelDataTemplate template, DeptService deptService, ProjectTypeService projectTypeService, DictionaryService dictionaryService, UserService userService, UserRoleService userRoleService, ProjectService projectService, SettleTransferFinalService settleTransferFinalService, ResearchReferenceNumService researchReferenceNumService, InvestPlanInfoService investPlanInfoService, MilepostService milepostService, long id, int milepostType) {\n    }\n}\n```\n\n### 模板模式在源码中的体现\n\n先来看 JDK 中的 AbstractList，来看代码:\n\n```java\npackage java.util;\npublic abstract class AbstractList<E> extends AbstractCollection<E> implements List<E> { \n  \t...\n\t\tabstract public E get(int index); \n  \t...\n}\n```\n\n我们看到 get()是一个抽象方法，那么它的逻辑就是交给子类来实现，我们大家所熟知的 ArrayList 就是 AbstractList 的子类。同理，有 AbstractList 就有 AbstractSet 和 AbstractMap，有兴趣的可以去看看这些的源码实现。还有一个每天都在用的 HttpServlet，有三个方法 service()和 doGet()、doPost()方法，都是模板方法的抽象实现。\n\n在 MyBatis 框架也有一些经典的应用，比如 BaseExecutor 类，它是一个基础的 SQL 执行类，实现了大部分的 SQL 执行逻辑，然后把几个方法交给子类定制化完成，源码如下:\n\n```java\npublic abstract class BaseExecutor implements Executor { \n  \t...\n\t\tprotected abstract int doUpdate(MappedStatement var1, Object var2) throws SQLException;\n\t\tprotected abstract List<BatchResult> doFlushStatements(boolean var1) throws SQLException;\n\t\tprotected abstract <E> List<E> doQuery(MappedStatement var1, Object var2, RowBounds var3, ResultHandler var4, BoundSql var5) throws SQLException;\n\t\tprotected abstract <E> Cursor<E> doQueryCursor(MappedStatement var1, Object var2, RowBounds var3, BoundSql var4) throws SQLException;\n\t\t... \n}\n```\n\n如 doUpdate、doFlushStatements、doQuery、doQueryCursor 这几个方法就是交由子类来实现，下面是它的类图:\n\n![image-20200328183440955](http://127.0.0.1/image/blog/image-20200328183440955.png)\n\n\n\n### 模板模式的优缺点\n\n优点:\n\n+ 利用模板方法将相同处理逻辑的代码放到抽象父类中，可以提高代码的复用性\n+ 将不同的代码放在不同的子类中，通过对子类的扩展增加新的行为，提高代码的扩展性\n+ 把不变的行为写在父类上，去除子类的重复代码，提供了一个很好的代码复用平台， 符合开闭原则\n\n缺点:\n\n+ 类数目的增加，每一个抽象类都需要一个子类来实现，这样导致类的个数增加\n+ 类数量的增加，间接地增加了系统实现的复杂度\n+ 继承关系自身缺点，如果父类添加新的抽象方法，所有子类都要改一遍\n","source":"_posts/模板模式.md","raw":"---\ntitle: 模板模式\nabbrlink: 202009131022\ndate: 2020-09-13 16:23:05\ntags: [模板模式]\nCategories: [设计模式]\ncover: https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202009131022/cover.png\ndescription: Mybatis的相关知识学习总结以及对整体的体系架构和工作流程的梳理，通过学习总结该部分内容深入理解该框架。\n---\n\n### 模板模式的定义\n\n模板模式通常又叫模板方法模式(Template Method Pattern)是指定义一个算法的骨架，并允许子类为一个或者多个步骤提供实现。模板方法使得子类可以在不改变算法结构的情况下，重新定义算法的某些步骤，属于行为性设计模式。\n\n### 模板模式的应用场景\n\n​我们平时办理入职流程填写入职登记表-->打印简历-->复印学历-->复印身份证-->签订 劳动合同-->建立花名册-->办理工牌-->安排工位等;再比如，我平时在家里炒菜:洗锅 -->点火-->热锅-->上油-->下原料-->翻炒-->放调料-->出锅，这些都是模板模式的体现。\n\n#### 模板方法适用于以下应用场景:\n\n+ 一次性实现一个算法的不变的部分，并将可变的行为留给子类来实现\n+ 各子类中公共的行为被提取出来并集中到一个公共的父类中，从而避免代码重复\n\n### 实际项目中Excel数据导入案例\n\n该部分业务场景为:\n\n    有多个Excel模板，客户希望在不同的业务模块下下载该模块固定的Excel模板，将数据录入模板后并将模板上传，系统自动将模板内的数据录入到系统中。\n\n使用模板模式原因：录入数据的过程是一样的,只是每个模板解析数据的行列、数据校验和存储时所需的操作对象不同,所以可以使用模板模式,在模板中定义大体的执行流程,不同的解析数据的方式可以放到不同子对象中实现,录入数据的过程可以分为:\n\n    1. check模板文件是否正确 \n    2. 加载该文件遍历解析出每一行数据 \n    3. 将数据解析到集合中 \n    4. 批量存储数据 \n    5. 清除该过程中使用的临时对象或集合\n\n创建一个模板类 AbstractLoadExcelDataTemplate:\n\n```java\n/**\n * excel模板数据导入模板\n */\npublic abstract class AbstractLoadExcelDataTemplate {\n\n    public Long id; // 里程碑模板导入时里程碑数据关联所需的外键\n\n    public int milepostType; // 用于判断里程碑外键的类型属于项目的里程碑还是合同的里程碑 (暂时无合同里程碑，留待以后使用)\n\n    public Long currentLoginUserId; // 当前登录用户\n\n    public String excelName; // excel模板名称\n\n    public String dataSheetName; // sheet页名称\n\n    public int dataBeginLineNum; // excel 数据起始行数\n\n    public final static String suffix = \"xlsx\";\n\n    public static final long projectUserRoleId = 0l; // 项目经理RoleID\n\n    public static final long controlUserRoleId = 1l; // 管控经理RoleID\n\n    public Map<String, Long> projectTypeOneMap = new HashMap<>(); // 一级类别Map key->类别名称  value->类别ID\n\n    public Map<String, Long> projectTypeTwoMap = new HashMap<>(); // 二级类别Map key->类别名称  value->类别ID\n\n    public Map<String, Long> projectYearMap = new HashMap<>(); // 项目年度Map key->年度  value->年度ID\n\n    public Map<String, Long> projectCategoryMap = new HashMap<>(); // 项目类型Map key->类型名称  value->类型ID\n\n    public Map<String, Long> projectNatureMap = new HashMap<>(); // 项目性质Map key->性质名称  value->性质ID\n\n    public Map<String, Long> deptMap = new HashMap<>(); // 项目部门Map key->部门名称  value->部门ID\n\n    public UserService userService;\n\n    public UserRoleService userRoleService;\n\n    public ProjectService projectService;\n\n    public SettleTransferFinalService settleTransferFinalService;\n\n    public ResearchReferenceNumService researchReferenceNumService;\n\n    public InvestPlanInfoService investPlanInfoService;\n\n    public MilepostService milepostService;\n\n    // ------------------------------ 加载基础数据 Begin -------------------------------\n    public void setDept(List<Dept> list) {\n\n        for (Dept dept : list) {\n            deptMap.put(dept.getName(), dept.getId());\n        }\n    }\n\n    public void setProjectType(List<ProjectType> list) {\n\n        for (ProjectType projectType : list) {\n\n            if (projectType.getParentId() == 0l) {\n                projectTypeOneMap.put(projectType.getName(), projectType.getId());\n            } else {\n                projectTypeTwoMap.put(projectType.getName(), projectType.getId());\n            }\n        }\n    }\n\n    public void setProjectYear(List<Dictionary> list) {\n\n        for (Dictionary dictionary : list) {\n\n            projectYearMap.put(dictionary.getName(), dictionary.getId());\n        }\n    }\n\n    public void setProjectCategory(List<Dictionary> list) {\n\n        for (Dictionary dictionary : list) {\n\n            projectYearMap.put(dictionary.getName(), dictionary.getId());\n        }\n    }\n\n    public void setProjectNature(List<Dictionary> list) {\n\n        for (Dictionary dictionary : list) {\n\n            projectYearMap.put(dictionary.getName(), dictionary.getId());\n        }\n    }\n    // ------------------------------ 加载基础数据 End -------------------------------\n\n    // 模板模式核心控制流程的代码\n    public void inputData(MultipartFile file) throws BusinessException, IOException {\n\n        XSSFSheet sheet = this.checkFile(file);\n\n        Row row;\n\n        for (int rowNum = this.dataBeginLineNum; rowNum <= sheet.getLastRowNum(); rowNum++) {\n\n            row = sheet.getRow(rowNum);\n\n            try {\n                this.readData(row);\n            } catch (BusinessException e) {\n                throw new BusinessException(\"第【\" + rowNum + \"】行中\" + e.message);\n            }\n        }\n\n        this.saveData();\n\n        this.clear(); // 释放资源\n    }\n\n    abstract void readData(Row row) throws BusinessException;\n\n    abstract void saveData();\n\n    abstract void clear();\n\n    public XSSFSheet checkFile(MultipartFile file) throws BusinessException, IOException {\n\n        XSSFSheet sheet = null;\n\n        if (file != null) {\n\n            String originalFilename = file.getOriginalFilename();\n            String[] arr = originalFilename.split(\"\\\\.\");\n\n            checkSuffix(arr[1]);\n            checkExcelName(arr[0]);\n\n            InputStream is = file.getInputStream();\n            XSSFWorkbook workbook = new XSSFWorkbook(is);\n\n            sheet = checkDataSheetName(workbook);\n            checkSheetDataIsNotNull(sheet);\n        }\n\n        return sheet;\n    }\n\n    private void checkExcelName(String excelName) throws BusinessException {\n\n        if (!this.excelName.equals(excelName)) {\n            throw new BusinessException(\"不可修改模板文件名称，请先恢复模板名称再尽心数据导入\");\n        }\n    }\n\n    private void checkSuffix(String suffix) throws BusinessException {\n\n        if (!this.suffix.equals(suffix)) {\n            throw new BusinessException(\"模板文件格式错误\");\n        }\n    }\n\n    private XSSFSheet checkDataSheetName(XSSFWorkbook workbook) throws BusinessException {\n\n        XSSFSheet sheet = workbook.getSheet(this.dataSheetName);\n        if (sheet == null) {\n            throw new BusinessException(\"无可录入数据的sheet页(不可修改sheet页名称)\");\n        }\n        return sheet;\n    }\n\n    private void checkSheetDataIsNotNull(XSSFSheet sheet) throws BusinessException {\n        if (!(sheet.getLastRowNum() > this.dataBeginLineNum)) {\n            throw new BusinessException(\"请先将数据录入模板文件再进行导入\");\n        }\n    }\n\n    /**\n     * check时间格式为YYYY-MM-DD\n     * @param time\n     * @return\n     */\n    public boolean checkDate(String time) {\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy/MM/dd\");\n        try {\n            Date t = dateFormat.parse(time);\n        } catch (Exception ex) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * check金额后面只允许有两位小数\n     * @param money\n     * @return\n     */\n    public boolean checkMoney(String money) {\n\n        if (money.contains(\"\\\\.\")) {\n            if (money.split(\"\\\\.\")[1].length() > 2) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n```\n\n该业务中存在两处模板数据录入：1、项目的数据导入  2、项目里程碑的数据导入(里程碑：项目的阶段介绍如项目开始阶段，验收阶段，维护阶段等)\n\n创建项目对象LoadProjectBaseData\n```java\npublic class LoadProjectBaseData extends AbstractLoadExcelDataTemplate {\n\n    public String excelName = \"项目基本信息导入模板\";\n\n    public String dataSheetName = \"项目导入模板\";\n\n    public List<Project> projectList = new ArrayList<>();\n\n    public List<SettleTransferFinal> settleTransferFinalList = new ArrayList<>();\n\n    public List<ResearchReferenceNum> researchReferenceNumList = new ArrayList<>();\n\n    public List<InvestPlanInfo> investPlanInfoList = new ArrayList<>();\n\n    public int dataBeginLineNum = 3;\n\n    public LoadProjectBaseData() {\n        super.excelName = this.excelName;\n        super.dataSheetName = this.dataSheetName;\n        super.dataBeginLineNum = this.dataBeginLineNum;\n    }\n\n    @Override\n    public void readData(Row row) throws BusinessException {\n\n        String projectCode = row.getCell(5).getStringCellValue();\n\n        if (StringUtil.isNullOrEmpty(projectCode)) {\n            throw new BusinessException(\"项目编码不能为空，请先完善数据\");\n        }\n\n        List<Project> list = projectService.list(new QueryWrapper<Project>().eq(\"code\", projectCode).eq(\"deleted\", 0));\n\n        // 项目编码不存在在当前系统中才进行数据的录入\n        if (list.size() <= 0) {\n\n            projectList.add(readCellProjectData(row));\n\n            settleTransferFinalList.add(readCellSettleTransferFinalData(row));\n\n            researchReferenceNumList.add(readCellResearchReferenceNumData(row));\n\n            investPlanInfoList.add(readCellInvestPlanInfoData(row));\n        }\n    }\n\n    @Override\n    public void saveData() {\n\n        projectService.saveBatch(projectList);\n\n        settleTransferFinalService.saveBatch(settleTransferFinalList);\n\n        researchReferenceNumService.saveBatch(researchReferenceNumList);\n\n        investPlanInfoService.saveBatch(investPlanInfoList);\n    }\n\n    @Override\n    public void clear() {\n\n        this.projectList.clear();\n        this.settleTransferFinalList.clear();\n        this.investPlanInfoList.clear();\n        this.researchReferenceNumList.clear();\n\n        super.deptMap.clear();\n        super.projectCategoryMap.clear();\n        super.projectYearMap.clear();\n        super.projectNatureMap.clear();\n        super.projectTypeOneMap.clear();\n        super.projectTypeTwoMap.clear();\n\n        super.userService = null;\n        super.userRoleService = null;\n        super.projectService = null;\n        super.settleTransferFinalService = null;\n        super.researchReferenceNumService = null;\n        super.investPlanInfoService = null;\n    }\n\n    private Project readCellProjectData(Row row) throws BusinessException {\n\n        Project project = new Project();\n\n        if (StringUtil.isNullOrEmpty(row.getCell(1).getStringCellValue())) {\n            throw new BusinessException(\"项目类别不能为空，请先完善数据\");\n        }\n\n        Long projectTypeOneId = super.projectTypeOneMap.get(row.getCell(1).getStringCellValue());\n\n        if (projectTypeOneId == null) {\n            throw new BusinessException(\"项目类别只能选择现有的类别，请先完善数据\");\n        }\n\n        if (StringUtil.isNullOrEmpty(row.getCell(2).getStringCellValue())) {\n            throw new BusinessException(\"项目二级分类不能为空，请先完善数据\");\n        }\n\n        Long projectTypeTwoId = super.projectTypeTwoMap.get(row.getCell(2).getStringCellValue());\n\n        if (projectTypeTwoId == null) {\n            throw new BusinessException(\"二级分类只能选择现有的分类，请先完善数据\");\n        }\n\n        String projectYear = row.getCell(3).getStringCellValue();\n        Long projectYearId = super.projectYearMap.get(projectYear);\n        if (projectYearId == null) {\n            throw new BusinessException(\"项目年度不能为空，请先完善数据\");\n        }\n\n        String projectName = row.getCell(4).getStringCellValue();\n\n        if (StringUtil.isNullOrEmpty(projectName)) {\n            throw new BusinessException(\"项目名称不能为空，请先完善数据\");\n        }\n\n        String projectCategory = row.getCell(7).getStringCellValue();\n\n        if (!StringUtil.isNullOrEmpty(projectCategory) && super.projectCategoryMap.get(projectCategory) == null) {\n            throw new BusinessException(\"项目类型只能选择现有类型，请先完善数据\");\n        } else if (super.projectCategoryMap.get(projectCategory) != null) {\n            project.setProjectCategoryDictionaryId(super.projectCategoryMap.get(projectCategory));\n        }\n\n        String projectNature = row.getCell(8).getStringCellValue();\n\n        if (!StringUtil.isNullOrEmpty(projectNature) && super.projectNatureMap.get(projectNature) == null) {\n            throw new BusinessException(\"项目性质只能选择现有性质，请先完善数据\");\n        } else if (super.projectNatureMap.get(projectNature) != null) {\n            project.setNatureDictionaryId(super.projectCategoryMap.get(projectNature));\n        }\n\n        String isNotFive = row.getCell(9).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(isNotFive)) {\n            if (\"是\".equals(isNotFive)) {\n                project.setIsNotFive(true);\n            } else if (\"否\".equals(isNotFive)) {\n                project.setIsNotFive(false);\n            } else {\n                throw new BusinessException(\"是否五率只能填写是或否，请先完善数据\");\n            }\n        }\n\n        String deptName = row.getCell(10).getStringCellValue();\n        if (StringUtil.isNullOrEmpty(deptName)) {\n            throw new BusinessException(\"责任部门不能为空，请先完善数据\");\n        }\n\n        Long deptId = super.deptMap.get(deptName);\n        if (deptId == null) {\n            throw new BusinessException(\"责任部门只能选择现有的部门，请先完善数据\");\n        }\n\n        String projectUserAccountNo = row.getCell(11).getStringCellValue();\n        String projectUserName = row.getCell(12).getStringCellValue();\n\n        if (StringUtil.isNullOrEmpty(projectUserAccountNo)) {\n            throw new BusinessException(\"项目经理的账号不能为空，请先完善数据\");\n        }\n\n        if (StringUtil.isNullOrEmpty(projectUserName)) {\n            throw new BusinessException(\"项目经理姓名不能为空，请先完善数据\");\n        }\n\n        List<User> userList = userService.list(new QueryWrapper<User>().eq(\"account_no\", projectUserAccountNo).eq(\"nick_name\", projectUserName).eq(\"deleted\", 0));\n        if (userList == null || userList.size() == 0) {\n            throw new BusinessException(\"项目经理姓名和账号不存在在当前系统中，请排查数据\");\n        } else if (userList.size() > 1) {\n            throw new BusinessException(\"项目经理姓名和账号在系统中存在多个，请先精准数据\");\n        } else {\n            UserRole userRole = userRoleService.getOne(new QueryWrapper<UserRole>().eq(\"uid\", userList.get(0).getId()));\n            if (userRole == null || userRole.getRid() != projectUserRoleId) {\n                throw new BusinessException(\"该账号角色不属于项目经理，请先核实数据\");\n            }\n            project.setProjectUserId(userList.get(0).getId());\n        }\n\n        String controlUserAccountNo = row.getCell(13).getStringCellValue();\n        String controlUserName = row.getCell(14).getStringCellValue();\n\n        if (StringUtil.isNullOrEmpty(controlUserAccountNo)) {\n            throw new BusinessException(\"管控经理的账号不能为空，请先完善数据\");\n        }\n\n        if (StringUtil.isNullOrEmpty(controlUserName)) {\n            throw new BusinessException(\"管控经理姓名不能为空，请先完善数据\");\n        }\n\n        userList = userService.list(new QueryWrapper<User>().eq(\"account_no\", controlUserAccountNo).eq(\"nick_name\", controlUserName).eq(\"deleted\", 0));\n        if (userList == null || userList.size() == 0) {\n            throw new BusinessException(\"该管控经理姓名和账号不存在在当前系统中，请排查数据\");\n        } else if (userList.size() > 1) {\n            throw new BusinessException(\"该管控经理姓名和账号在系统中存在多个，请先精准数据\");\n        } else {\n            UserRole userRole = userRoleService.getOne(new QueryWrapper<UserRole>().eq(\"uid\", userList.get(0).getId()));\n            if (userRole == null || userRole.getRid() != controlUserRoleId) {\n                throw new BusinessException(\"该账号角色不属于管控经理，请先核实数据\");\n            }\n            project.setControlUserId(userList.get(0).getId());\n        }\n\n        String planBeginDateText = row.getCell(15).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(planBeginDateText)) {\n            if (!checkDate(planBeginDateText)) {\n                throw new BusinessException(\"计划开工时间格式为YYYY-MM-DD,请先调整时间格式\");\n            }\n            project.setPlanBeginDate(LocalDateTime.parse(planBeginDateText));\n        }\n\n        String planEndDateText = row.getCell(16).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(planEndDateText)) {\n            if (!checkDate(planEndDateText)) {\n                throw new BusinessException(\"计划竣工时间格式为YYYY-MM-DD,请先调整时间格式\");\n            }\n            project.setPlanBeginDate(LocalDateTime.parse(planEndDateText));\n        }\n\n        project.setProjectTypeOneId(projectTypeOneId);\n        project.setProjectTypeTwoId(projectTypeTwoId);\n        project.setProjectYear(projectYearId);\n        project.setName(projectName);\n        project.setCode(row.getCell(5).getStringCellValue());\n        project.setRemark(row.getCell(6).getStringCellValue());\n        project.setDeptId(deptId);\n        project.setDeleted(false);\n        project.setCreateTime(LocalDateTime.now());\n        project.setCreateUser(currentLoginUserId);\n\n        return project;\n    }\n\n    public SettleTransferFinal readCellSettleTransferFinalData(Row row) {\n\n        SettleTransferFinal settleTransferFinal = new SettleTransferFinal();\n\n        String planAcceptTime = row.getCell(17).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(planAcceptTime)) {\n            if (!checkDate(planAcceptTime)) {\n                throw new BusinessException(\"计划验收时间格式为YYYY-MM-DD,请先调整时间格式\");\n            }\n            settleTransferFinal.setPlanAcceptTime(LocalDateTime.parse(planAcceptTime));\n        }\n\n        String planSettlementTime = row.getCell(18).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(planSettlementTime)) {\n            if (!checkDate(planSettlementTime)) {\n                throw new BusinessException(\"计划结算时间格式为YYYY-MM-DD,请先调整时间格式\");\n            }\n            settleTransferFinal.setPlanSettlementTime(LocalDateTime.parse(planSettlementTime));\n        }\n\n        String planFinalTime = row.getCell(19).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(planFinalTime)) {\n            if (!checkDate(planFinalTime)) {\n                throw new BusinessException(\"计划决算时间格式为YYYY-MM-DD,请先调整时间格式\");\n            }\n            settleTransferFinal.setPlanFinalTime(LocalDateTime.parse(planFinalTime));\n        }\n\n        String planTransferStatusDictionaryTime = row.getCell(20).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(planTransferStatusDictionaryTime) && planTransferStatusDictionaryTime.contains(\"/\")) {\n            if (!checkDate(planTransferStatusDictionaryTime)) {\n                throw new BusinessException(\"计划转资时间格式为YYYY-MM-DD,请先调整时间格式\");\n            }\n            settleTransferFinal.setPlanTransferStatusDictionaryTime(LocalDateTime.parse(planTransferStatusDictionaryTime));\n        }\n\n        settleTransferFinal.setDeleted(false);\n        settleTransferFinal.setCreateTime(LocalDateTime.now());\n        settleTransferFinal.setCreateUser(currentLoginUserId);\n\n        return settleTransferFinal;\n    }\n\n    private ResearchReferenceNum readCellResearchReferenceNumData(Row row) {\n\n        ResearchReferenceNum researchReferenceNum = new ResearchReferenceNum();\n\n        String referenceNum = row.getCell(21).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(referenceNum)) {\n            researchReferenceNum.setReferenceNum(referenceNum);\n        }\n\n        String amount = row.getCell(22).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(amount)) {\n            if (!checkMoney(amount)) {\n                throw new BusinessException(\"可研批复金额只允许小数后两位，请先修改该金额\");\n            }\n            researchReferenceNum.setAmount(new BigDecimal(amount));\n        }\n\n        String approveTime = row.getCell(23).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(approveTime)) {\n            researchReferenceNum.setApproveTime(LocalDateTime.parse(approveTime));\n        }\n\n        researchReferenceNum.setDeleted(false);\n        researchReferenceNum.setCreateTime(LocalDateTime.now());\n        researchReferenceNum.setCreateUser(currentLoginUserId);\n\n        return researchReferenceNum;\n    }\n\n    private InvestPlanInfo readCellInvestPlanInfoData(Row row) {\n\n        InvestPlanInfo info = new InvestPlanInfo();\n\n        String investPlanYear = row.getCell(24).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(investPlanYear)) {\n            info.setInvestPlanYear(Integer.valueOf(investPlanYear));\n        }\n\n        String investPlanNum = row.getCell(25).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(investPlanNum)) {\n            info.setInvestPlanNum(investPlanNum);\n        }\n\n        String planDownTime = row.getCell(26).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(planDownTime)) {\n            if (!checkDate(planDownTime)) {\n                throw new BusinessException(\"投资计划下达日期格式为YYYY-MM-DD,请先调整时间格式\");\n            }\n            info.setPlanDownTime(LocalDateTime.parse(planDownTime));\n        }\n\n        String investPlanAmount = row.getCell(27).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(investPlanAmount)) {\n            if (!checkMoney(investPlanAmount)) {\n                throw new BusinessException(\"投资计划总金额只允许小数后两位，请先修改该金额\");\n            }\n            info.setInvestPlanAmount(new BigDecimal(investPlanAmount));\n        }\n\n        String capitalAmount = row.getCell(28).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(capitalAmount)) {\n            if (!checkMoney(capitalAmount)) {\n                throw new BusinessException(\"计划资本金只允许小数后两位，请先修改该金额\");\n            }\n            info.setCapitalAmount(new BigDecimal(capitalAmount));\n        }\n\n        String costAmount = row.getCell(29).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(costAmount)) {\n            if (!checkMoney(costAmount)) {\n                throw new BusinessException(\"计划成本金只允许小数后两位，请先修改该金额\");\n            }\n            info.setCostAmount(new BigDecimal(costAmount));\n        }\n\n        info.setDeleted(false);\n        info.setCreateTime(LocalDateTime.now());\n        info.setCreateUser(currentLoginUserId);\n\n        return info;\n    }\n\n}\n```\n\n创建里程碑对象LoadMilepostData\n\n```java\npublic class LoadMilepostData extends AbstractLoadExcelDataTemplate {\n\n    public String excelName = \"项目基本信息导入模板\";\n\n    public String dataSheetName = \"项目导入模板\";\n\n    public int dataBeginLineNum = 3;\n\n    public List<Milepost> milepostList = new ArrayList<>();\n\n    public LoadMilepostData() {\n        super.excelName = this.excelName;\n        super.dataSheetName = this.dataSheetName;\n        super.dataBeginLineNum = this.dataBeginLineNum;\n    }\n\n    @Override\n    public void readData(Row row) {\n\n        milepostList.add(readCellMilepostData(row));\n    }\n\n    @Override\n    public void saveData() {\n\n        milepostService.saveBatch(milepostList);\n    }\n\n    @Override\n    public void clear() {\n\n        this.milepostList.clear();\n        super.milepostService = null;\n    }\n\n    private Milepost readCellMilepostData(Row row) throws BusinessException {\n\n        Milepost milepost = new Milepost();\n\n        String name = row.getCell(0).getStringCellValue();\n        if (StringUtil.isNullOrEmpty(name)) {\n            throw new BusinessException(\"里程碑名称未填写，请先完善数据\");\n        }\n\n        milepost.setName(name);\n\n        String plannedTime = row.getCell(1).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(plannedTime)) {\n            if (!checkDate(plannedTime)) {\n                throw new BusinessException(\"计划时间格式为YYYY-MM-DD,请先调整时间格式\");\n            }\n            milepost.setPlannedTime(LocalDateTime.parse(plannedTime));\n        }\n\n        String actualTime = row.getCell(2).getStringCellValue();\n        if (!StringUtil.isNullOrEmpty(actualTime)) {\n            if (!checkDate(actualTime)) {\n                throw new BusinessException(\"实际时间格式为YYYY-MM-DD,请先调整时间格式\");\n            }\n            milepost.setActualTime(LocalDateTime.parse(actualTime));\n        }\n\n        milepost.setReasonsOfDelay(row.getCell(3).getStringCellValue());\n        milepost.setPromoteMeasures(row.getCell(4).getStringCellValue());\n\n        milepost.setDeleted(false);\n        milepost.setCreateTime(LocalDateTime.now());\n        milepost.setCreateUser(currentLoginUserId);\n        milepost.setConId(id);\n        milepost.setType(milepostType);\n\n        return milepost;\n    }\n}\n\n```\n\n由于数据录入频率不会过于频繁，所以只需创建一个Controller即可 :\n\n```java\n@PostMapping(\"/excelInputData\")\n@ApiOperation(value = \"模板数据导入\", response = Result.class)\npublic Result excelInputData(@RequestParam(\"type\") int type, @RequestParam(\"id\") long id, @RequestParam(value = \"milepostType\", required = false) int milepostType, @RequestParam(\"file\") MultipartFile file) {\n\n    try {\n        // 根据传入的Type不同过去不同的模板子对象进行解析\n        LoadExcelDataEnum excelDataEnum = LoadExcelDataEnum.loadEnum(type);\n\n        // 根据type获取所需要的模板对象\n        AbstractLoadExcelDataTemplate template = excelDataEnum.createTemplate();\n\n        template.currentLoginUserId = getUserId();\n\n        // 加载模板所需基础数据\n        excelDataEnum.loadTemplateNeedBaseData(template, deptService, projectTypeService, dictionaryService, userService, userRoleService, projectService, settleTransferFinalService, researchReferenceNumService, investPlanInfoService, milepostService, id, milepostType);\n\n        // 导入Excel数据\n        template.inputData(file);\n\n        return ResultGenerator.genSuccessResult();\n    } catch (BusinessException e) {\n        e.printStackTrace();\n        return ResultGenerator.genFailResult(e.message);\n    } catch (Exception e) {\n        e.printStackTrace();\n        return ResultGenerator.genFailResult(ErrorCode.SYS_ERROR);\n    }\n}\n```\n\n上面代码中本应采用工厂模式判断type类型获取不同的模板子对象，但博主可能偏爱枚举对象，绝对枚举对象就是工厂和策略的合集，所以上方采用枚举的方式进行获取模板对象。\n\n枚举对象LoadExcelDataEnum\n\n```java\npublic enum LoadExcelDataEnum {\n\n    PROJECT(1, \"项目基本信息导入模板.xlsx\") {\n        @Override\n        public AbstractLoadExcelDataTemplate createTemplate() {\n            return new LoadProjectBaseData();\n        }\n\n        @Override\n        public void loadTemplateNeedBaseData(AbstractLoadExcelDataTemplate template, DeptService deptService, ProjectTypeService projectTypeService, DictionaryService dictionaryService, UserService userService, UserRoleService userRoleService, ProjectService projectService, SettleTransferFinalService settleTransferFinalService, ResearchReferenceNumService researchReferenceNumService, InvestPlanInfoService investPlanInfoService, MilepostService milepostService, long id, int milepostType) {\n            // 加载基础数据，以便减少查询次数\n            List<Dept> deptList = deptService.list();\n            List<ProjectType> projectTypeList = projectTypeService.list();\n            List<Dictionary> projectYearList = dictionaryService.list(new QueryWrapper<Dictionary>().eq(\"type\", \"ProjectYear\").eq(\"status\", \"1\").eq(\"deleted\", \"0\"));\n            List<Dictionary> projectCategoryList = dictionaryService.list(new QueryWrapper<Dictionary>().eq(\"type\", \"ProjectCategory\").eq(\"status\", \"1\").eq(\"deleted\", \"0\"));\n            List<Dictionary> projectNatureList = dictionaryService.list(new QueryWrapper<Dictionary>().eq(\"type\", \"ProjectNature\").eq(\"status\", \"1\").eq(\"deleted\", \"0\"));\n\n            // 将基础数据放入模板\n            template.setProjectYear(projectYearList);\n            template.setProjectCategory(projectCategoryList);\n            template.setProjectNature(projectNatureList);\n            template.setProjectType(projectTypeList);\n            template.setDept(deptList);\n\n            // 注入操作对象\n            template.userService = userService;\n            template.userRoleService = userRoleService;\n            template.projectService = projectService;\n            template.settleTransferFinalService = settleTransferFinalService;\n            template.researchReferenceNumService = researchReferenceNumService;\n            template.investPlanInfoService = investPlanInfoService;\n        }\n    },\n    MILEPOST(2, \"里程碑导入模板.xlsx\") {\n        @Override\n        public AbstractLoadExcelDataTemplate createTemplate() {\n            return new LoadMilepostData();\n        }\n\n        @Override\n        public void loadTemplateNeedBaseData(AbstractLoadExcelDataTemplate template, DeptService deptService, ProjectTypeService projectTypeService, DictionaryService dictionaryService, UserService userService, UserRoleService userRoleService, ProjectService projectService, SettleTransferFinalService settleTransferFinalService, ResearchReferenceNumService researchReferenceNumService, InvestPlanInfoService investPlanInfoService, MilepostService milepostService, long id, int milepostType) {\n\n            template.id = id;\n            template.milepostType = milepostType;\n            template.milepostService = milepostService;\n        }\n    };\n\n    public int type;\n\n    public String name;\n\n    LoadExcelDataEnum(int type, String name) {\n        this.type = type;\n        this.name = name;\n    }\n\n    public static LoadExcelDataEnum loadEnum(int type) {\n\n        for (LoadExcelDataEnum excelDataEnum : values()) {\n            if (excelDataEnum.type == type) {\n                return excelDataEnum;\n            }\n        }\n        return null;\n    }\n\n    public AbstractLoadExcelDataTemplate createTemplate() {\n        return null;\n    }\n\n    public void loadTemplateNeedBaseData(AbstractLoadExcelDataTemplate template, DeptService deptService, ProjectTypeService projectTypeService, DictionaryService dictionaryService, UserService userService, UserRoleService userRoleService, ProjectService projectService, SettleTransferFinalService settleTransferFinalService, ResearchReferenceNumService researchReferenceNumService, InvestPlanInfoService investPlanInfoService, MilepostService milepostService, long id, int milepostType) {\n    }\n}\n```\n\n### 模板模式在源码中的体现\n\n先来看 JDK 中的 AbstractList，来看代码:\n\n```java\npackage java.util;\npublic abstract class AbstractList<E> extends AbstractCollection<E> implements List<E> { \n  \t...\n\t\tabstract public E get(int index); \n  \t...\n}\n```\n\n我们看到 get()是一个抽象方法，那么它的逻辑就是交给子类来实现，我们大家所熟知的 ArrayList 就是 AbstractList 的子类。同理，有 AbstractList 就有 AbstractSet 和 AbstractMap，有兴趣的可以去看看这些的源码实现。还有一个每天都在用的 HttpServlet，有三个方法 service()和 doGet()、doPost()方法，都是模板方法的抽象实现。\n\n在 MyBatis 框架也有一些经典的应用，比如 BaseExecutor 类，它是一个基础的 SQL 执行类，实现了大部分的 SQL 执行逻辑，然后把几个方法交给子类定制化完成，源码如下:\n\n```java\npublic abstract class BaseExecutor implements Executor { \n  \t...\n\t\tprotected abstract int doUpdate(MappedStatement var1, Object var2) throws SQLException;\n\t\tprotected abstract List<BatchResult> doFlushStatements(boolean var1) throws SQLException;\n\t\tprotected abstract <E> List<E> doQuery(MappedStatement var1, Object var2, RowBounds var3, ResultHandler var4, BoundSql var5) throws SQLException;\n\t\tprotected abstract <E> Cursor<E> doQueryCursor(MappedStatement var1, Object var2, RowBounds var3, BoundSql var4) throws SQLException;\n\t\t... \n}\n```\n\n如 doUpdate、doFlushStatements、doQuery、doQueryCursor 这几个方法就是交由子类来实现，下面是它的类图:\n\n![image-20200328183440955](http://127.0.0.1/image/blog/image-20200328183440955.png)\n\n\n\n### 模板模式的优缺点\n\n优点:\n\n+ 利用模板方法将相同处理逻辑的代码放到抽象父类中，可以提高代码的复用性\n+ 将不同的代码放在不同的子类中，通过对子类的扩展增加新的行为，提高代码的扩展性\n+ 把不变的行为写在父类上，去除子类的重复代码，提供了一个很好的代码复用平台， 符合开闭原则\n\n缺点:\n\n+ 类数目的增加，每一个抽象类都需要一个子类来实现，这样导致类的个数增加\n+ 类数量的增加，间接地增加了系统实现的复杂度\n+ 继承关系自身缺点，如果父类添加新的抽象方法，所有子类都要改一遍\n","slug":"模板模式","published":1,"updated":"2020-09-13T11:01:29.701Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckf0znjez000gp27j41hfbq5m","content":"<h3 id=\"模板模式的定义\"><a href=\"#模板模式的定义\" class=\"headerlink\" title=\"模板模式的定义\"></a>模板模式的定义</h3><p>模板模式通常又叫模板方法模式(Template Method Pattern)是指定义一个算法的骨架，并允许子类为一个或者多个步骤提供实现。模板方法使得子类可以在不改变算法结构的情况下，重新定义算法的某些步骤，属于行为性设计模式。</p>\n<h3 id=\"模板模式的应用场景\"><a href=\"#模板模式的应用场景\" class=\"headerlink\" title=\"模板模式的应用场景\"></a>模板模式的应用场景</h3><p>​我们平时办理入职流程填写入职登记表–&gt;打印简历–&gt;复印学历–&gt;复印身份证–&gt;签订 劳动合同–&gt;建立花名册–&gt;办理工牌–&gt;安排工位等;再比如，我平时在家里炒菜:洗锅 –&gt;点火–&gt;热锅–&gt;上油–&gt;下原料–&gt;翻炒–&gt;放调料–&gt;出锅，这些都是模板模式的体现。</p>\n<h4 id=\"模板方法适用于以下应用场景\"><a href=\"#模板方法适用于以下应用场景\" class=\"headerlink\" title=\"模板方法适用于以下应用场景:\"></a>模板方法适用于以下应用场景:</h4><ul>\n<li>一次性实现一个算法的不变的部分，并将可变的行为留给子类来实现</li>\n<li>各子类中公共的行为被提取出来并集中到一个公共的父类中，从而避免代码重复</li>\n</ul>\n<h3 id=\"实际项目中Excel数据导入案例\"><a href=\"#实际项目中Excel数据导入案例\" class=\"headerlink\" title=\"实际项目中Excel数据导入案例\"></a>实际项目中Excel数据导入案例</h3><p>该部分业务场景为:</p>\n<pre><code>有多个Excel模板，客户希望在不同的业务模块下下载该模块固定的Excel模板，将数据录入模板后并将模板上传，系统自动将模板内的数据录入到系统中。</code></pre>\n<p>使用模板模式原因：录入数据的过程是一样的,只是每个模板解析数据的行列、数据校验和存储时所需的操作对象不同,所以可以使用模板模式,在模板中定义大体的执行流程,不同的解析数据的方式可以放到不同子对象中实现,录入数据的过程可以分为:</p>\n<pre><code>1. check模板文件是否正确 \n2. 加载该文件遍历解析出每一行数据 \n3. 将数据解析到集合中 \n4. 批量存储数据 \n5. 清除该过程中使用的临时对象或集合</code></pre>\n<p>创建一个模板类 AbstractLoadExcelDataTemplate:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * excel模板数据导入模板</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AbstractLoadExcelDataTemplate</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Long id; <span class=\"comment\">// 里程碑模板导入时里程碑数据关联所需的外键</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> milepostType; <span class=\"comment\">// 用于判断里程碑外键的类型属于项目的里程碑还是合同的里程碑 (暂时无合同里程碑，留待以后使用)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Long currentLoginUserId; <span class=\"comment\">// 当前登录用户</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String excelName; <span class=\"comment\">// excel模板名称</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String dataSheetName; <span class=\"comment\">// sheet页名称</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> dataBeginLineNum; <span class=\"comment\">// excel 数据起始行数</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String suffix = <span class=\"string\">&quot;xlsx&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> projectUserRoleId = <span class=\"number\">0l</span>; <span class=\"comment\">// 项目经理RoleID</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> controlUserRoleId = <span class=\"number\">1l</span>; <span class=\"comment\">// 管控经理RoleID</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, Long&gt; projectTypeOneMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;(); <span class=\"comment\">// 一级类别Map key-&gt;类别名称  value-&gt;类别ID</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, Long&gt; projectTypeTwoMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;(); <span class=\"comment\">// 二级类别Map key-&gt;类别名称  value-&gt;类别ID</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, Long&gt; projectYearMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;(); <span class=\"comment\">// 项目年度Map key-&gt;年度  value-&gt;年度ID</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, Long&gt; projectCategoryMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;(); <span class=\"comment\">// 项目类型Map key-&gt;类型名称  value-&gt;类型ID</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, Long&gt; projectNatureMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;(); <span class=\"comment\">// 项目性质Map key-&gt;性质名称  value-&gt;性质ID</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, Long&gt; deptMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;(); <span class=\"comment\">// 项目部门Map key-&gt;部门名称  value-&gt;部门ID</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> UserService userService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> UserRoleService userRoleService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ProjectService projectService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> SettleTransferFinalService settleTransferFinalService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResearchReferenceNumService researchReferenceNumService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> InvestPlanInfoService investPlanInfoService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> MilepostService milepostService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ------------------------------ 加载基础数据 Begin -------------------------------</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setDept</span><span class=\"params\">(List&lt;Dept&gt; list)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Dept dept : list) &#123;</span><br><span class=\"line\">            deptMap.put(dept.getName(), dept.getId());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setProjectType</span><span class=\"params\">(List&lt;ProjectType&gt; list)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (ProjectType projectType : list) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (projectType.getParentId() == <span class=\"number\">0l</span>) &#123;</span><br><span class=\"line\">                projectTypeOneMap.put(projectType.getName(), projectType.getId());</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                projectTypeTwoMap.put(projectType.getName(), projectType.getId());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setProjectYear</span><span class=\"params\">(List&lt;Dictionary&gt; list)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Dictionary dictionary : list) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            projectYearMap.put(dictionary.getName(), dictionary.getId());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setProjectCategory</span><span class=\"params\">(List&lt;Dictionary&gt; list)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Dictionary dictionary : list) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            projectYearMap.put(dictionary.getName(), dictionary.getId());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setProjectNature</span><span class=\"params\">(List&lt;Dictionary&gt; list)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Dictionary dictionary : list) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            projectYearMap.put(dictionary.getName(), dictionary.getId());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// ------------------------------ 加载基础数据 End -------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 模板模式核心控制流程的代码</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">inputData</span><span class=\"params\">(MultipartFile file)</span> <span class=\"keyword\">throws</span> BusinessException, IOException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        XSSFSheet sheet = <span class=\"keyword\">this</span>.checkFile(file);</span><br><span class=\"line\"></span><br><span class=\"line\">        Row row;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> rowNum = <span class=\"keyword\">this</span>.dataBeginLineNum; rowNum &lt;= sheet.getLastRowNum(); rowNum++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            row = sheet.getRow(rowNum);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.readData(row);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (BusinessException e) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;第【&quot;</span> + rowNum + <span class=\"string\">&quot;】行中&quot;</span> + e.message);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.saveData();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.clear(); <span class=\"comment\">// 释放资源</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">readData</span><span class=\"params\">(Row row)</span> <span class=\"keyword\">throws</span> BusinessException</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">saveData</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> XSSFSheet <span class=\"title\">checkFile</span><span class=\"params\">(MultipartFile file)</span> <span class=\"keyword\">throws</span> BusinessException, IOException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        XSSFSheet sheet = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (file != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            String originalFilename = file.getOriginalFilename();</span><br><span class=\"line\">            String[] arr = originalFilename.split(<span class=\"string\">&quot;\\\\.&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            checkSuffix(arr[<span class=\"number\">1</span>]);</span><br><span class=\"line\">            checkExcelName(arr[<span class=\"number\">0</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">            InputStream is = file.getInputStream();</span><br><span class=\"line\">            XSSFWorkbook workbook = <span class=\"keyword\">new</span> XSSFWorkbook(is);</span><br><span class=\"line\"></span><br><span class=\"line\">            sheet = checkDataSheetName(workbook);</span><br><span class=\"line\">            checkSheetDataIsNotNull(sheet);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> sheet;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">checkExcelName</span><span class=\"params\">(String excelName)</span> <span class=\"keyword\">throws</span> BusinessException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.excelName.equals(excelName)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;不可修改模板文件名称，请先恢复模板名称再尽心数据导入&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">checkSuffix</span><span class=\"params\">(String suffix)</span> <span class=\"keyword\">throws</span> BusinessException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.suffix.equals(suffix)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;模板文件格式错误&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> XSSFSheet <span class=\"title\">checkDataSheetName</span><span class=\"params\">(XSSFWorkbook workbook)</span> <span class=\"keyword\">throws</span> BusinessException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        XSSFSheet sheet = workbook.getSheet(<span class=\"keyword\">this</span>.dataSheetName);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sheet == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;无可录入数据的sheet页(不可修改sheet页名称)&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sheet;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">checkSheetDataIsNotNull</span><span class=\"params\">(XSSFSheet sheet)</span> <span class=\"keyword\">throws</span> BusinessException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!(sheet.getLastRowNum() &gt; <span class=\"keyword\">this</span>.dataBeginLineNum)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;请先将数据录入模板文件再进行导入&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * check时间格式为YYYY-MM-DD</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">checkDate</span><span class=\"params\">(String time)</span> </span>&#123;</span><br><span class=\"line\">        SimpleDateFormat dateFormat = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">&quot;yyyy/MM/dd&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Date t = dateFormat.parse(time);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception ex) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * check金额后面只允许有两位小数</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> money</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">checkMoney</span><span class=\"params\">(String money)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (money.contains(<span class=\"string\">&quot;\\\\.&quot;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (money.split(<span class=\"string\">&quot;\\\\.&quot;</span>)[<span class=\"number\">1</span>].length() &gt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>该业务中存在两处模板数据录入：1、项目的数据导入  2、项目里程碑的数据导入(里程碑：项目的阶段介绍如项目开始阶段，验收阶段，维护阶段等)</p>\n<p>创建项目对象LoadProjectBaseData</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LoadProjectBaseData</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractLoadExcelDataTemplate</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String excelName = <span class=\"string\">&quot;项目基本信息导入模板&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String dataSheetName = <span class=\"string\">&quot;项目导入模板&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Project&gt; projectList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;SettleTransferFinal&gt; settleTransferFinalList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;ResearchReferenceNum&gt; researchReferenceNumList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;InvestPlanInfo&gt; investPlanInfoList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> dataBeginLineNum = <span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LoadProjectBaseData</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.excelName = <span class=\"keyword\">this</span>.excelName;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.dataSheetName = <span class=\"keyword\">this</span>.dataSheetName;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.dataBeginLineNum = <span class=\"keyword\">this</span>.dataBeginLineNum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">readData</span><span class=\"params\">(Row row)</span> <span class=\"keyword\">throws</span> BusinessException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        String projectCode = row.getCell(<span class=\"number\">5</span>).getStringCellValue();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(projectCode)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目编码不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        List&lt;Project&gt; list = projectService.list(<span class=\"keyword\">new</span> QueryWrapper&lt;Project&gt;().eq(<span class=\"string\">&quot;code&quot;</span>, projectCode).eq(<span class=\"string\">&quot;deleted&quot;</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 项目编码不存在在当前系统中才进行数据的录入</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (list.size() &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            projectList.add(readCellProjectData(row));</span><br><span class=\"line\"></span><br><span class=\"line\">            settleTransferFinalList.add(readCellSettleTransferFinalData(row));</span><br><span class=\"line\"></span><br><span class=\"line\">            researchReferenceNumList.add(readCellResearchReferenceNumData(row));</span><br><span class=\"line\"></span><br><span class=\"line\">            investPlanInfoList.add(readCellInvestPlanInfoData(row));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">saveData</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        projectService.saveBatch(projectList);</span><br><span class=\"line\"></span><br><span class=\"line\">        settleTransferFinalService.saveBatch(settleTransferFinalList);</span><br><span class=\"line\"></span><br><span class=\"line\">        researchReferenceNumService.saveBatch(researchReferenceNumList);</span><br><span class=\"line\"></span><br><span class=\"line\">        investPlanInfoService.saveBatch(investPlanInfoList);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.projectList.clear();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.settleTransferFinalList.clear();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.investPlanInfoList.clear();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.researchReferenceNumList.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">super</span>.deptMap.clear();</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.projectCategoryMap.clear();</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.projectYearMap.clear();</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.projectNatureMap.clear();</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.projectTypeOneMap.clear();</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.projectTypeTwoMap.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">super</span>.userService = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.userRoleService = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.projectService = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.settleTransferFinalService = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.researchReferenceNumService = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.investPlanInfoService = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> Project <span class=\"title\">readCellProjectData</span><span class=\"params\">(Row row)</span> <span class=\"keyword\">throws</span> BusinessException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Project project = <span class=\"keyword\">new</span> Project();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(row.getCell(<span class=\"number\">1</span>).getStringCellValue())) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目类别不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Long projectTypeOneId = <span class=\"keyword\">super</span>.projectTypeOneMap.get(row.getCell(<span class=\"number\">1</span>).getStringCellValue());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (projectTypeOneId == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目类别只能选择现有的类别，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(row.getCell(<span class=\"number\">2</span>).getStringCellValue())) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目二级分类不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Long projectTypeTwoId = <span class=\"keyword\">super</span>.projectTypeTwoMap.get(row.getCell(<span class=\"number\">2</span>).getStringCellValue());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (projectTypeTwoId == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;二级分类只能选择现有的分类，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String projectYear = row.getCell(<span class=\"number\">3</span>).getStringCellValue();</span><br><span class=\"line\">        Long projectYearId = <span class=\"keyword\">super</span>.projectYearMap.get(projectYear);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (projectYearId == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目年度不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String projectName = row.getCell(<span class=\"number\">4</span>).getStringCellValue();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(projectName)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目名称不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String projectCategory = row.getCell(<span class=\"number\">7</span>).getStringCellValue();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(projectCategory) &amp;&amp; <span class=\"keyword\">super</span>.projectCategoryMap.get(projectCategory) == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目类型只能选择现有类型，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">super</span>.projectCategoryMap.get(projectCategory) != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            project.setProjectCategoryDictionaryId(<span class=\"keyword\">super</span>.projectCategoryMap.get(projectCategory));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String projectNature = row.getCell(<span class=\"number\">8</span>).getStringCellValue();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(projectNature) &amp;&amp; <span class=\"keyword\">super</span>.projectNatureMap.get(projectNature) == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目性质只能选择现有性质，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">super</span>.projectNatureMap.get(projectNature) != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            project.setNatureDictionaryId(<span class=\"keyword\">super</span>.projectCategoryMap.get(projectNature));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String isNotFive = row.getCell(<span class=\"number\">9</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(isNotFive)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"string\">&quot;是&quot;</span>.equals(isNotFive)) &#123;</span><br><span class=\"line\">                project.setIsNotFive(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"string\">&quot;否&quot;</span>.equals(isNotFive)) &#123;</span><br><span class=\"line\">                project.setIsNotFive(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;是否五率只能填写是或否，请先完善数据&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String deptName = row.getCell(<span class=\"number\">10</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(deptName)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;责任部门不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Long deptId = <span class=\"keyword\">super</span>.deptMap.get(deptName);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (deptId == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;责任部门只能选择现有的部门，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String projectUserAccountNo = row.getCell(<span class=\"number\">11</span>).getStringCellValue();</span><br><span class=\"line\">        String projectUserName = row.getCell(<span class=\"number\">12</span>).getStringCellValue();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(projectUserAccountNo)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目经理的账号不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(projectUserName)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目经理姓名不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        List&lt;User&gt; userList = userService.list(<span class=\"keyword\">new</span> QueryWrapper&lt;User&gt;().eq(<span class=\"string\">&quot;account_no&quot;</span>, projectUserAccountNo).eq(<span class=\"string\">&quot;nick_name&quot;</span>, projectUserName).eq(<span class=\"string\">&quot;deleted&quot;</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (userList == <span class=\"keyword\">null</span> || userList.size() == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目经理姓名和账号不存在在当前系统中，请排查数据&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (userList.size() &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目经理姓名和账号在系统中存在多个，请先精准数据&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            UserRole userRole = userRoleService.getOne(<span class=\"keyword\">new</span> QueryWrapper&lt;UserRole&gt;().eq(<span class=\"string\">&quot;uid&quot;</span>, userList.get(<span class=\"number\">0</span>).getId()));</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (userRole == <span class=\"keyword\">null</span> || userRole.getRid() != projectUserRoleId) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;该账号角色不属于项目经理，请先核实数据&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            project.setProjectUserId(userList.get(<span class=\"number\">0</span>).getId());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String controlUserAccountNo = row.getCell(<span class=\"number\">13</span>).getStringCellValue();</span><br><span class=\"line\">        String controlUserName = row.getCell(<span class=\"number\">14</span>).getStringCellValue();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(controlUserAccountNo)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;管控经理的账号不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(controlUserName)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;管控经理姓名不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        userList = userService.list(<span class=\"keyword\">new</span> QueryWrapper&lt;User&gt;().eq(<span class=\"string\">&quot;account_no&quot;</span>, controlUserAccountNo).eq(<span class=\"string\">&quot;nick_name&quot;</span>, controlUserName).eq(<span class=\"string\">&quot;deleted&quot;</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (userList == <span class=\"keyword\">null</span> || userList.size() == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;该管控经理姓名和账号不存在在当前系统中，请排查数据&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (userList.size() &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;该管控经理姓名和账号在系统中存在多个，请先精准数据&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            UserRole userRole = userRoleService.getOne(<span class=\"keyword\">new</span> QueryWrapper&lt;UserRole&gt;().eq(<span class=\"string\">&quot;uid&quot;</span>, userList.get(<span class=\"number\">0</span>).getId()));</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (userRole == <span class=\"keyword\">null</span> || userRole.getRid() != controlUserRoleId) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;该账号角色不属于管控经理，请先核实数据&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            project.setControlUserId(userList.get(<span class=\"number\">0</span>).getId());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String planBeginDateText = row.getCell(<span class=\"number\">15</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(planBeginDateText)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkDate(planBeginDateText)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;计划开工时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            project.setPlanBeginDate(LocalDateTime.parse(planBeginDateText));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String planEndDateText = row.getCell(<span class=\"number\">16</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(planEndDateText)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkDate(planEndDateText)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;计划竣工时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            project.setPlanBeginDate(LocalDateTime.parse(planEndDateText));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        project.setProjectTypeOneId(projectTypeOneId);</span><br><span class=\"line\">        project.setProjectTypeTwoId(projectTypeTwoId);</span><br><span class=\"line\">        project.setProjectYear(projectYearId);</span><br><span class=\"line\">        project.setName(projectName);</span><br><span class=\"line\">        project.setCode(row.getCell(<span class=\"number\">5</span>).getStringCellValue());</span><br><span class=\"line\">        project.setRemark(row.getCell(<span class=\"number\">6</span>).getStringCellValue());</span><br><span class=\"line\">        project.setDeptId(deptId);</span><br><span class=\"line\">        project.setDeleted(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">        project.setCreateTime(LocalDateTime.now());</span><br><span class=\"line\">        project.setCreateUser(currentLoginUserId);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> project;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> SettleTransferFinal <span class=\"title\">readCellSettleTransferFinalData</span><span class=\"params\">(Row row)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        SettleTransferFinal settleTransferFinal = <span class=\"keyword\">new</span> SettleTransferFinal();</span><br><span class=\"line\"></span><br><span class=\"line\">        String planAcceptTime = row.getCell(<span class=\"number\">17</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(planAcceptTime)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkDate(planAcceptTime)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;计划验收时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            settleTransferFinal.setPlanAcceptTime(LocalDateTime.parse(planAcceptTime));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String planSettlementTime = row.getCell(<span class=\"number\">18</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(planSettlementTime)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkDate(planSettlementTime)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;计划结算时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            settleTransferFinal.setPlanSettlementTime(LocalDateTime.parse(planSettlementTime));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String planFinalTime = row.getCell(<span class=\"number\">19</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(planFinalTime)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkDate(planFinalTime)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;计划决算时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            settleTransferFinal.setPlanFinalTime(LocalDateTime.parse(planFinalTime));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String planTransferStatusDictionaryTime = row.getCell(<span class=\"number\">20</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(planTransferStatusDictionaryTime) &amp;&amp; planTransferStatusDictionaryTime.contains(<span class=\"string\">&quot;/&quot;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkDate(planTransferStatusDictionaryTime)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;计划转资时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            settleTransferFinal.setPlanTransferStatusDictionaryTime(LocalDateTime.parse(planTransferStatusDictionaryTime));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        settleTransferFinal.setDeleted(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">        settleTransferFinal.setCreateTime(LocalDateTime.now());</span><br><span class=\"line\">        settleTransferFinal.setCreateUser(currentLoginUserId);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> settleTransferFinal;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> ResearchReferenceNum <span class=\"title\">readCellResearchReferenceNumData</span><span class=\"params\">(Row row)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        ResearchReferenceNum researchReferenceNum = <span class=\"keyword\">new</span> ResearchReferenceNum();</span><br><span class=\"line\"></span><br><span class=\"line\">        String referenceNum = row.getCell(<span class=\"number\">21</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(referenceNum)) &#123;</span><br><span class=\"line\">            researchReferenceNum.setReferenceNum(referenceNum);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String amount = row.getCell(<span class=\"number\">22</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(amount)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkMoney(amount)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;可研批复金额只允许小数后两位，请先修改该金额&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            researchReferenceNum.setAmount(<span class=\"keyword\">new</span> BigDecimal(amount));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String approveTime = row.getCell(<span class=\"number\">23</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(approveTime)) &#123;</span><br><span class=\"line\">            researchReferenceNum.setApproveTime(LocalDateTime.parse(approveTime));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        researchReferenceNum.setDeleted(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">        researchReferenceNum.setCreateTime(LocalDateTime.now());</span><br><span class=\"line\">        researchReferenceNum.setCreateUser(currentLoginUserId);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> researchReferenceNum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> InvestPlanInfo <span class=\"title\">readCellInvestPlanInfoData</span><span class=\"params\">(Row row)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        InvestPlanInfo info = <span class=\"keyword\">new</span> InvestPlanInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">        String investPlanYear = row.getCell(<span class=\"number\">24</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(investPlanYear)) &#123;</span><br><span class=\"line\">            info.setInvestPlanYear(Integer.valueOf(investPlanYear));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String investPlanNum = row.getCell(<span class=\"number\">25</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(investPlanNum)) &#123;</span><br><span class=\"line\">            info.setInvestPlanNum(investPlanNum);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String planDownTime = row.getCell(<span class=\"number\">26</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(planDownTime)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkDate(planDownTime)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;投资计划下达日期格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            info.setPlanDownTime(LocalDateTime.parse(planDownTime));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String investPlanAmount = row.getCell(<span class=\"number\">27</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(investPlanAmount)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkMoney(investPlanAmount)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;投资计划总金额只允许小数后两位，请先修改该金额&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            info.setInvestPlanAmount(<span class=\"keyword\">new</span> BigDecimal(investPlanAmount));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String capitalAmount = row.getCell(<span class=\"number\">28</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(capitalAmount)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkMoney(capitalAmount)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;计划资本金只允许小数后两位，请先修改该金额&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            info.setCapitalAmount(<span class=\"keyword\">new</span> BigDecimal(capitalAmount));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String costAmount = row.getCell(<span class=\"number\">29</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(costAmount)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkMoney(costAmount)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;计划成本金只允许小数后两位，请先修改该金额&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            info.setCostAmount(<span class=\"keyword\">new</span> BigDecimal(costAmount));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        info.setDeleted(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">        info.setCreateTime(LocalDateTime.now());</span><br><span class=\"line\">        info.setCreateUser(currentLoginUserId);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> info;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>创建里程碑对象LoadMilepostData</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LoadMilepostData</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractLoadExcelDataTemplate</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String excelName = <span class=\"string\">&quot;项目基本信息导入模板&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String dataSheetName = <span class=\"string\">&quot;项目导入模板&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> dataBeginLineNum = <span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Milepost&gt; milepostList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LoadMilepostData</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.excelName = <span class=\"keyword\">this</span>.excelName;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.dataSheetName = <span class=\"keyword\">this</span>.dataSheetName;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.dataBeginLineNum = <span class=\"keyword\">this</span>.dataBeginLineNum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">readData</span><span class=\"params\">(Row row)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        milepostList.add(readCellMilepostData(row));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">saveData</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        milepostService.saveBatch(milepostList);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.milepostList.clear();</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.milepostService = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> Milepost <span class=\"title\">readCellMilepostData</span><span class=\"params\">(Row row)</span> <span class=\"keyword\">throws</span> BusinessException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Milepost milepost = <span class=\"keyword\">new</span> Milepost();</span><br><span class=\"line\"></span><br><span class=\"line\">        String name = row.getCell(<span class=\"number\">0</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(name)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;里程碑名称未填写，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        milepost.setName(name);</span><br><span class=\"line\"></span><br><span class=\"line\">        String plannedTime = row.getCell(<span class=\"number\">1</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(plannedTime)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkDate(plannedTime)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;计划时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            milepost.setPlannedTime(LocalDateTime.parse(plannedTime));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String actualTime = row.getCell(<span class=\"number\">2</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(actualTime)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkDate(actualTime)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;实际时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            milepost.setActualTime(LocalDateTime.parse(actualTime));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        milepost.setReasonsOfDelay(row.getCell(<span class=\"number\">3</span>).getStringCellValue());</span><br><span class=\"line\">        milepost.setPromoteMeasures(row.getCell(<span class=\"number\">4</span>).getStringCellValue());</span><br><span class=\"line\"></span><br><span class=\"line\">        milepost.setDeleted(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">        milepost.setCreateTime(LocalDateTime.now());</span><br><span class=\"line\">        milepost.setCreateUser(currentLoginUserId);</span><br><span class=\"line\">        milepost.setConId(id);</span><br><span class=\"line\">        milepost.setType(milepostType);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> milepost;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>由于数据录入频率不会过于频繁，所以只需创建一个Controller即可 :</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@PostMapping(&quot;/excelInputData&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@ApiOperation(value = &quot;模板数据导入&quot;, response = Result.class)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Result <span class=\"title\">excelInputData</span><span class=\"params\">(<span class=\"meta\">@RequestParam(&quot;type&quot;)</span> <span class=\"keyword\">int</span> type, <span class=\"meta\">@RequestParam(&quot;id&quot;)</span> <span class=\"keyword\">long</span> id, <span class=\"meta\">@RequestParam(value = &quot;milepostType&quot;, required = false)</span> <span class=\"keyword\">int</span> milepostType, <span class=\"meta\">@RequestParam(&quot;file&quot;)</span> MultipartFile file)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 根据传入的Type不同过去不同的模板子对象进行解析</span></span><br><span class=\"line\">        LoadExcelDataEnum excelDataEnum = LoadExcelDataEnum.loadEnum(type);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 根据type获取所需要的模板对象</span></span><br><span class=\"line\">        AbstractLoadExcelDataTemplate template = excelDataEnum.createTemplate();</span><br><span class=\"line\"></span><br><span class=\"line\">        template.currentLoginUserId = getUserId();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 加载模板所需基础数据</span></span><br><span class=\"line\">        excelDataEnum.loadTemplateNeedBaseData(template, deptService, projectTypeService, dictionaryService, userService, userRoleService, projectService, settleTransferFinalService, researchReferenceNumService, investPlanInfoService, milepostService, id, milepostType);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 导入Excel数据</span></span><br><span class=\"line\">        template.inputData(file);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResultGenerator.genSuccessResult();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (BusinessException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResultGenerator.genFailResult(e.message);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResultGenerator.genFailResult(ErrorCode.SYS_ERROR);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上面代码中本应采用工厂模式判断type类型获取不同的模板子对象，但博主可能偏爱枚举对象，绝对枚举对象就是工厂和策略的合集，所以上方采用枚举的方式进行获取模板对象。</p>\n<p>枚举对象LoadExcelDataEnum</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> LoadExcelDataEnum &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    PROJECT(<span class=\"number\">1</span>, <span class=\"string\">&quot;项目基本信息导入模板.xlsx&quot;</span>) &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> AbstractLoadExcelDataTemplate <span class=\"title\">createTemplate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> LoadProjectBaseData();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">loadTemplateNeedBaseData</span><span class=\"params\">(AbstractLoadExcelDataTemplate template, DeptService deptService, ProjectTypeService projectTypeService, DictionaryService dictionaryService, UserService userService, UserRoleService userRoleService, ProjectService projectService, SettleTransferFinalService settleTransferFinalService, ResearchReferenceNumService researchReferenceNumService, InvestPlanInfoService investPlanInfoService, MilepostService milepostService, <span class=\"keyword\">long</span> id, <span class=\"keyword\">int</span> milepostType)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 加载基础数据，以便减少查询次数</span></span><br><span class=\"line\">            List&lt;Dept&gt; deptList = deptService.list();</span><br><span class=\"line\">            List&lt;ProjectType&gt; projectTypeList = projectTypeService.list();</span><br><span class=\"line\">            List&lt;Dictionary&gt; projectYearList = dictionaryService.list(<span class=\"keyword\">new</span> QueryWrapper&lt;Dictionary&gt;().eq(<span class=\"string\">&quot;type&quot;</span>, <span class=\"string\">&quot;ProjectYear&quot;</span>).eq(<span class=\"string\">&quot;status&quot;</span>, <span class=\"string\">&quot;1&quot;</span>).eq(<span class=\"string\">&quot;deleted&quot;</span>, <span class=\"string\">&quot;0&quot;</span>));</span><br><span class=\"line\">            List&lt;Dictionary&gt; projectCategoryList = dictionaryService.list(<span class=\"keyword\">new</span> QueryWrapper&lt;Dictionary&gt;().eq(<span class=\"string\">&quot;type&quot;</span>, <span class=\"string\">&quot;ProjectCategory&quot;</span>).eq(<span class=\"string\">&quot;status&quot;</span>, <span class=\"string\">&quot;1&quot;</span>).eq(<span class=\"string\">&quot;deleted&quot;</span>, <span class=\"string\">&quot;0&quot;</span>));</span><br><span class=\"line\">            List&lt;Dictionary&gt; projectNatureList = dictionaryService.list(<span class=\"keyword\">new</span> QueryWrapper&lt;Dictionary&gt;().eq(<span class=\"string\">&quot;type&quot;</span>, <span class=\"string\">&quot;ProjectNature&quot;</span>).eq(<span class=\"string\">&quot;status&quot;</span>, <span class=\"string\">&quot;1&quot;</span>).eq(<span class=\"string\">&quot;deleted&quot;</span>, <span class=\"string\">&quot;0&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 将基础数据放入模板</span></span><br><span class=\"line\">            template.setProjectYear(projectYearList);</span><br><span class=\"line\">            template.setProjectCategory(projectCategoryList);</span><br><span class=\"line\">            template.setProjectNature(projectNatureList);</span><br><span class=\"line\">            template.setProjectType(projectTypeList);</span><br><span class=\"line\">            template.setDept(deptList);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 注入操作对象</span></span><br><span class=\"line\">            template.userService = userService;</span><br><span class=\"line\">            template.userRoleService = userRoleService;</span><br><span class=\"line\">            template.projectService = projectService;</span><br><span class=\"line\">            template.settleTransferFinalService = settleTransferFinalService;</span><br><span class=\"line\">            template.researchReferenceNumService = researchReferenceNumService;</span><br><span class=\"line\">            template.investPlanInfoService = investPlanInfoService;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    MILEPOST(<span class=\"number\">2</span>, <span class=\"string\">&quot;里程碑导入模板.xlsx&quot;</span>) &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> AbstractLoadExcelDataTemplate <span class=\"title\">createTemplate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> LoadMilepostData();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">loadTemplateNeedBaseData</span><span class=\"params\">(AbstractLoadExcelDataTemplate template, DeptService deptService, ProjectTypeService projectTypeService, DictionaryService dictionaryService, UserService userService, UserRoleService userRoleService, ProjectService projectService, SettleTransferFinalService settleTransferFinalService, ResearchReferenceNumService researchReferenceNumService, InvestPlanInfoService investPlanInfoService, MilepostService milepostService, <span class=\"keyword\">long</span> id, <span class=\"keyword\">int</span> milepostType)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            template.id = id;</span><br><span class=\"line\">            template.milepostType = milepostType;</span><br><span class=\"line\">            template.milepostService = milepostService;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> type;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    LoadExcelDataEnum(<span class=\"keyword\">int</span> type, String name) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.type = type;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LoadExcelDataEnum <span class=\"title\">loadEnum</span><span class=\"params\">(<span class=\"keyword\">int</span> type)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (LoadExcelDataEnum excelDataEnum : values()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (excelDataEnum.type == type) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> excelDataEnum;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> AbstractLoadExcelDataTemplate <span class=\"title\">createTemplate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">loadTemplateNeedBaseData</span><span class=\"params\">(AbstractLoadExcelDataTemplate template, DeptService deptService, ProjectTypeService projectTypeService, DictionaryService dictionaryService, UserService userService, UserRoleService userRoleService, ProjectService projectService, SettleTransferFinalService settleTransferFinalService, ResearchReferenceNumService researchReferenceNumService, InvestPlanInfoService investPlanInfoService, MilepostService milepostService, <span class=\"keyword\">long</span> id, <span class=\"keyword\">int</span> milepostType)</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"模板模式在源码中的体现\"><a href=\"#模板模式在源码中的体现\" class=\"headerlink\" title=\"模板模式在源码中的体现\"></a>模板模式在源码中的体现</h3><p>先来看 JDK 中的 AbstractList，来看代码:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> java.util;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AbstractList</span>&lt;<span class=\"title\">E</span>&gt; <span class=\"keyword\">extends</span> <span class=\"title\">AbstractCollection</span>&lt;<span class=\"title\">E</span>&gt; <span class=\"keyword\">implements</span> <span class=\"title\">List</span>&lt;<span class=\"title\">E</span>&gt; </span>&#123; </span><br><span class=\"line\">  \t...</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> E <span class=\"title\">get</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span></span>; </span><br><span class=\"line\">  \t...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>我们看到 get()是一个抽象方法，那么它的逻辑就是交给子类来实现，我们大家所熟知的 ArrayList 就是 AbstractList 的子类。同理，有 AbstractList 就有 AbstractSet 和 AbstractMap，有兴趣的可以去看看这些的源码实现。还有一个每天都在用的 HttpServlet，有三个方法 service()和 doGet()、doPost()方法，都是模板方法的抽象实现。</p>\n<p>在 MyBatis 框架也有一些经典的应用，比如 BaseExecutor 类，它是一个基础的 SQL 执行类，实现了大部分的 SQL 执行逻辑，然后把几个方法交给子类定制化完成，源码如下:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BaseExecutor</span> <span class=\"keyword\">implements</span> <span class=\"title\">Executor</span> </span>&#123; </span><br><span class=\"line\">  \t...</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">int</span> <span class=\"title\">doUpdate</span><span class=\"params\">(MappedStatement var1, Object var2)</span> <span class=\"keyword\">throws</span> SQLException</span>;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> List&lt;BatchResult&gt; <span class=\"title\">doFlushStatements</span><span class=\"params\">(<span class=\"keyword\">boolean</span> var1)</span> <span class=\"keyword\">throws</span> SQLException</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> &lt;E&gt; <span class=\"function\">List&lt;E&gt; <span class=\"title\">doQuery</span><span class=\"params\">(MappedStatement var1, Object var2, RowBounds var3, ResultHandler var4, BoundSql var5)</span> <span class=\"keyword\">throws</span> SQLException</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> &lt;E&gt; <span class=\"function\">Cursor&lt;E&gt; <span class=\"title\">doQueryCursor</span><span class=\"params\">(MappedStatement var1, Object var2, RowBounds var3, BoundSql var4)</span> <span class=\"keyword\">throws</span> SQLException</span>;</span><br><span class=\"line\">\t\t... </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>如 doUpdate、doFlushStatements、doQuery、doQueryCursor 这几个方法就是交由子类来实现，下面是它的类图:</p>\n<p><img src= \"/img/loading.gif\" data-lazy-src=\"http://127.0.0.1/image/blog/image-20200328183440955.png\" alt=\"image-20200328183440955\"></p>\n<h3 id=\"模板模式的优缺点\"><a href=\"#模板模式的优缺点\" class=\"headerlink\" title=\"模板模式的优缺点\"></a>模板模式的优缺点</h3><p>优点:</p>\n<ul>\n<li>利用模板方法将相同处理逻辑的代码放到抽象父类中，可以提高代码的复用性</li>\n<li>将不同的代码放在不同的子类中，通过对子类的扩展增加新的行为，提高代码的扩展性</li>\n<li>把不变的行为写在父类上，去除子类的重复代码，提供了一个很好的代码复用平台， 符合开闭原则</li>\n</ul>\n<p>缺点:</p>\n<ul>\n<li>类数目的增加，每一个抽象类都需要一个子类来实现，这样导致类的个数增加</li>\n<li>类数量的增加，间接地增加了系统实现的复杂度</li>\n<li>继承关系自身缺点，如果父类添加新的抽象方法，所有子类都要改一遍</li>\n</ul>\n","site":{"data":{"link":[{"class_name":null,"class_desc":"朋友圈 ———— 花径不曾缘客扫，蓬门今始为君开","link_list":[{"name":"Xu’s Blog","link":"https://hasaik.com","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/xuxu_icon.jpg","descr":"简单不先于复杂，而是在复杂之后"},{"name":"Yuning’s Blog","link":"https://yuning.life","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/Yuning_avatar.jpg","descr":"懒人没有左右铭~"}]},{"class_name":null,"class_desc":"技术大拿 ———— 没有不劳而获的工作，更没有坐享其成的收获","link_list":[{"name":"小康博客","link":"https://www.antmoe.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/links/小康博客.jpg","descr":"一个收藏回忆与分享技术的地方"}]},{"class_name":null,"class_desc":"使用工具","link_list":[{"name":"TinyPNG","link":"https://tinypng.com/","avatar":"https://cdn.jsdelivr.net/gh/XuxuGood/cdn@master/blogImages/tools/tinypng.png","descr":"图片在线压缩"},{"name":"Itemo","link":"https://webgradients.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/itmeo_icon.jpg","descr":"多种多样的渐变色"},{"name":"Easyicon","link":"https://www.easyicon.net/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/easy_icon.png","descr":"图标下载库"},{"name":"WallpaperAccess","link":"https://wallpaperaccess.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/wallpaperaccess_icon.png","descr":"高清图片"},{"name":"彼岸图库","link":"http://pic.netbian.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/bian_icon.png","descr":"超清壁纸"},{"name":"搞定抠图","link":"https://www.gaoding.com/koutu","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/gaoding_icon.png","descr":"免费在线抠图"},{"name":"Iconfont","link":"https://www.iconfont.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/iconfont.png","descr":"阿里矢量图标库"},{"name":"Flaticon","link":"https://www.flaticon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/flaticon.png","descr":"超好看的图标库"},{"name":"Font Awesome","link":"https://fontawesome.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/fontawesome.png","descr":"图标字体库"},{"name":"Linux 命令搜索","link":"http://www.atoolbox.net/Tool.php?Id=826","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/linux_icon.png","descr":"Linux 命令行帮助查询"},{"name":"processon","link":"https://www.processon.com/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/process_icon.png","descr":"流程图、时序图"},{"name":"Canva","link":"https://www.canva.cn/","avatar":"https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/site/link/canva_icon.png","descr":"精品原创模板"}]}]}},"excerpt":"","more":"<h3 id=\"模板模式的定义\"><a href=\"#模板模式的定义\" class=\"headerlink\" title=\"模板模式的定义\"></a>模板模式的定义</h3><p>模板模式通常又叫模板方法模式(Template Method Pattern)是指定义一个算法的骨架，并允许子类为一个或者多个步骤提供实现。模板方法使得子类可以在不改变算法结构的情况下，重新定义算法的某些步骤，属于行为性设计模式。</p>\n<h3 id=\"模板模式的应用场景\"><a href=\"#模板模式的应用场景\" class=\"headerlink\" title=\"模板模式的应用场景\"></a>模板模式的应用场景</h3><p>​我们平时办理入职流程填写入职登记表–&gt;打印简历–&gt;复印学历–&gt;复印身份证–&gt;签订 劳动合同–&gt;建立花名册–&gt;办理工牌–&gt;安排工位等;再比如，我平时在家里炒菜:洗锅 –&gt;点火–&gt;热锅–&gt;上油–&gt;下原料–&gt;翻炒–&gt;放调料–&gt;出锅，这些都是模板模式的体现。</p>\n<h4 id=\"模板方法适用于以下应用场景\"><a href=\"#模板方法适用于以下应用场景\" class=\"headerlink\" title=\"模板方法适用于以下应用场景:\"></a>模板方法适用于以下应用场景:</h4><ul>\n<li>一次性实现一个算法的不变的部分，并将可变的行为留给子类来实现</li>\n<li>各子类中公共的行为被提取出来并集中到一个公共的父类中，从而避免代码重复</li>\n</ul>\n<h3 id=\"实际项目中Excel数据导入案例\"><a href=\"#实际项目中Excel数据导入案例\" class=\"headerlink\" title=\"实际项目中Excel数据导入案例\"></a>实际项目中Excel数据导入案例</h3><p>该部分业务场景为:</p>\n<pre><code>有多个Excel模板，客户希望在不同的业务模块下下载该模块固定的Excel模板，将数据录入模板后并将模板上传，系统自动将模板内的数据录入到系统中。</code></pre>\n<p>使用模板模式原因：录入数据的过程是一样的,只是每个模板解析数据的行列、数据校验和存储时所需的操作对象不同,所以可以使用模板模式,在模板中定义大体的执行流程,不同的解析数据的方式可以放到不同子对象中实现,录入数据的过程可以分为:</p>\n<pre><code>1. check模板文件是否正确 \n2. 加载该文件遍历解析出每一行数据 \n3. 将数据解析到集合中 \n4. 批量存储数据 \n5. 清除该过程中使用的临时对象或集合</code></pre>\n<p>创建一个模板类 AbstractLoadExcelDataTemplate:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * excel模板数据导入模板</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AbstractLoadExcelDataTemplate</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Long id; <span class=\"comment\">// 里程碑模板导入时里程碑数据关联所需的外键</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> milepostType; <span class=\"comment\">// 用于判断里程碑外键的类型属于项目的里程碑还是合同的里程碑 (暂时无合同里程碑，留待以后使用)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Long currentLoginUserId; <span class=\"comment\">// 当前登录用户</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String excelName; <span class=\"comment\">// excel模板名称</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String dataSheetName; <span class=\"comment\">// sheet页名称</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> dataBeginLineNum; <span class=\"comment\">// excel 数据起始行数</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String suffix = <span class=\"string\">&quot;xlsx&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> projectUserRoleId = <span class=\"number\">0l</span>; <span class=\"comment\">// 项目经理RoleID</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> controlUserRoleId = <span class=\"number\">1l</span>; <span class=\"comment\">// 管控经理RoleID</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, Long&gt; projectTypeOneMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;(); <span class=\"comment\">// 一级类别Map key-&gt;类别名称  value-&gt;类别ID</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, Long&gt; projectTypeTwoMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;(); <span class=\"comment\">// 二级类别Map key-&gt;类别名称  value-&gt;类别ID</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, Long&gt; projectYearMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;(); <span class=\"comment\">// 项目年度Map key-&gt;年度  value-&gt;年度ID</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, Long&gt; projectCategoryMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;(); <span class=\"comment\">// 项目类型Map key-&gt;类型名称  value-&gt;类型ID</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, Long&gt; projectNatureMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;(); <span class=\"comment\">// 项目性质Map key-&gt;性质名称  value-&gt;性质ID</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, Long&gt; deptMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;(); <span class=\"comment\">// 项目部门Map key-&gt;部门名称  value-&gt;部门ID</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> UserService userService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> UserRoleService userRoleService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ProjectService projectService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> SettleTransferFinalService settleTransferFinalService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResearchReferenceNumService researchReferenceNumService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> InvestPlanInfoService investPlanInfoService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> MilepostService milepostService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ------------------------------ 加载基础数据 Begin -------------------------------</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setDept</span><span class=\"params\">(List&lt;Dept&gt; list)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Dept dept : list) &#123;</span><br><span class=\"line\">            deptMap.put(dept.getName(), dept.getId());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setProjectType</span><span class=\"params\">(List&lt;ProjectType&gt; list)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (ProjectType projectType : list) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (projectType.getParentId() == <span class=\"number\">0l</span>) &#123;</span><br><span class=\"line\">                projectTypeOneMap.put(projectType.getName(), projectType.getId());</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                projectTypeTwoMap.put(projectType.getName(), projectType.getId());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setProjectYear</span><span class=\"params\">(List&lt;Dictionary&gt; list)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Dictionary dictionary : list) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            projectYearMap.put(dictionary.getName(), dictionary.getId());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setProjectCategory</span><span class=\"params\">(List&lt;Dictionary&gt; list)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Dictionary dictionary : list) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            projectYearMap.put(dictionary.getName(), dictionary.getId());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setProjectNature</span><span class=\"params\">(List&lt;Dictionary&gt; list)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Dictionary dictionary : list) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            projectYearMap.put(dictionary.getName(), dictionary.getId());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// ------------------------------ 加载基础数据 End -------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 模板模式核心控制流程的代码</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">inputData</span><span class=\"params\">(MultipartFile file)</span> <span class=\"keyword\">throws</span> BusinessException, IOException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        XSSFSheet sheet = <span class=\"keyword\">this</span>.checkFile(file);</span><br><span class=\"line\"></span><br><span class=\"line\">        Row row;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> rowNum = <span class=\"keyword\">this</span>.dataBeginLineNum; rowNum &lt;= sheet.getLastRowNum(); rowNum++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            row = sheet.getRow(rowNum);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.readData(row);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (BusinessException e) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;第【&quot;</span> + rowNum + <span class=\"string\">&quot;】行中&quot;</span> + e.message);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.saveData();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.clear(); <span class=\"comment\">// 释放资源</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">readData</span><span class=\"params\">(Row row)</span> <span class=\"keyword\">throws</span> BusinessException</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">saveData</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> XSSFSheet <span class=\"title\">checkFile</span><span class=\"params\">(MultipartFile file)</span> <span class=\"keyword\">throws</span> BusinessException, IOException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        XSSFSheet sheet = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (file != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            String originalFilename = file.getOriginalFilename();</span><br><span class=\"line\">            String[] arr = originalFilename.split(<span class=\"string\">&quot;\\\\.&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            checkSuffix(arr[<span class=\"number\">1</span>]);</span><br><span class=\"line\">            checkExcelName(arr[<span class=\"number\">0</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">            InputStream is = file.getInputStream();</span><br><span class=\"line\">            XSSFWorkbook workbook = <span class=\"keyword\">new</span> XSSFWorkbook(is);</span><br><span class=\"line\"></span><br><span class=\"line\">            sheet = checkDataSheetName(workbook);</span><br><span class=\"line\">            checkSheetDataIsNotNull(sheet);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> sheet;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">checkExcelName</span><span class=\"params\">(String excelName)</span> <span class=\"keyword\">throws</span> BusinessException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.excelName.equals(excelName)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;不可修改模板文件名称，请先恢复模板名称再尽心数据导入&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">checkSuffix</span><span class=\"params\">(String suffix)</span> <span class=\"keyword\">throws</span> BusinessException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.suffix.equals(suffix)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;模板文件格式错误&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> XSSFSheet <span class=\"title\">checkDataSheetName</span><span class=\"params\">(XSSFWorkbook workbook)</span> <span class=\"keyword\">throws</span> BusinessException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        XSSFSheet sheet = workbook.getSheet(<span class=\"keyword\">this</span>.dataSheetName);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sheet == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;无可录入数据的sheet页(不可修改sheet页名称)&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sheet;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">checkSheetDataIsNotNull</span><span class=\"params\">(XSSFSheet sheet)</span> <span class=\"keyword\">throws</span> BusinessException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!(sheet.getLastRowNum() &gt; <span class=\"keyword\">this</span>.dataBeginLineNum)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;请先将数据录入模板文件再进行导入&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * check时间格式为YYYY-MM-DD</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">checkDate</span><span class=\"params\">(String time)</span> </span>&#123;</span><br><span class=\"line\">        SimpleDateFormat dateFormat = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">&quot;yyyy/MM/dd&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Date t = dateFormat.parse(time);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception ex) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * check金额后面只允许有两位小数</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> money</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">checkMoney</span><span class=\"params\">(String money)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (money.contains(<span class=\"string\">&quot;\\\\.&quot;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (money.split(<span class=\"string\">&quot;\\\\.&quot;</span>)[<span class=\"number\">1</span>].length() &gt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>该业务中存在两处模板数据录入：1、项目的数据导入  2、项目里程碑的数据导入(里程碑：项目的阶段介绍如项目开始阶段，验收阶段，维护阶段等)</p>\n<p>创建项目对象LoadProjectBaseData</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LoadProjectBaseData</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractLoadExcelDataTemplate</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String excelName = <span class=\"string\">&quot;项目基本信息导入模板&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String dataSheetName = <span class=\"string\">&quot;项目导入模板&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Project&gt; projectList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;SettleTransferFinal&gt; settleTransferFinalList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;ResearchReferenceNum&gt; researchReferenceNumList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;InvestPlanInfo&gt; investPlanInfoList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> dataBeginLineNum = <span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LoadProjectBaseData</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.excelName = <span class=\"keyword\">this</span>.excelName;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.dataSheetName = <span class=\"keyword\">this</span>.dataSheetName;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.dataBeginLineNum = <span class=\"keyword\">this</span>.dataBeginLineNum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">readData</span><span class=\"params\">(Row row)</span> <span class=\"keyword\">throws</span> BusinessException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        String projectCode = row.getCell(<span class=\"number\">5</span>).getStringCellValue();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(projectCode)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目编码不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        List&lt;Project&gt; list = projectService.list(<span class=\"keyword\">new</span> QueryWrapper&lt;Project&gt;().eq(<span class=\"string\">&quot;code&quot;</span>, projectCode).eq(<span class=\"string\">&quot;deleted&quot;</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 项目编码不存在在当前系统中才进行数据的录入</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (list.size() &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            projectList.add(readCellProjectData(row));</span><br><span class=\"line\"></span><br><span class=\"line\">            settleTransferFinalList.add(readCellSettleTransferFinalData(row));</span><br><span class=\"line\"></span><br><span class=\"line\">            researchReferenceNumList.add(readCellResearchReferenceNumData(row));</span><br><span class=\"line\"></span><br><span class=\"line\">            investPlanInfoList.add(readCellInvestPlanInfoData(row));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">saveData</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        projectService.saveBatch(projectList);</span><br><span class=\"line\"></span><br><span class=\"line\">        settleTransferFinalService.saveBatch(settleTransferFinalList);</span><br><span class=\"line\"></span><br><span class=\"line\">        researchReferenceNumService.saveBatch(researchReferenceNumList);</span><br><span class=\"line\"></span><br><span class=\"line\">        investPlanInfoService.saveBatch(investPlanInfoList);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.projectList.clear();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.settleTransferFinalList.clear();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.investPlanInfoList.clear();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.researchReferenceNumList.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">super</span>.deptMap.clear();</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.projectCategoryMap.clear();</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.projectYearMap.clear();</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.projectNatureMap.clear();</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.projectTypeOneMap.clear();</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.projectTypeTwoMap.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">super</span>.userService = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.userRoleService = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.projectService = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.settleTransferFinalService = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.researchReferenceNumService = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.investPlanInfoService = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> Project <span class=\"title\">readCellProjectData</span><span class=\"params\">(Row row)</span> <span class=\"keyword\">throws</span> BusinessException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Project project = <span class=\"keyword\">new</span> Project();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(row.getCell(<span class=\"number\">1</span>).getStringCellValue())) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目类别不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Long projectTypeOneId = <span class=\"keyword\">super</span>.projectTypeOneMap.get(row.getCell(<span class=\"number\">1</span>).getStringCellValue());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (projectTypeOneId == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目类别只能选择现有的类别，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(row.getCell(<span class=\"number\">2</span>).getStringCellValue())) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目二级分类不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Long projectTypeTwoId = <span class=\"keyword\">super</span>.projectTypeTwoMap.get(row.getCell(<span class=\"number\">2</span>).getStringCellValue());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (projectTypeTwoId == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;二级分类只能选择现有的分类，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String projectYear = row.getCell(<span class=\"number\">3</span>).getStringCellValue();</span><br><span class=\"line\">        Long projectYearId = <span class=\"keyword\">super</span>.projectYearMap.get(projectYear);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (projectYearId == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目年度不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String projectName = row.getCell(<span class=\"number\">4</span>).getStringCellValue();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(projectName)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目名称不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String projectCategory = row.getCell(<span class=\"number\">7</span>).getStringCellValue();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(projectCategory) &amp;&amp; <span class=\"keyword\">super</span>.projectCategoryMap.get(projectCategory) == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目类型只能选择现有类型，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">super</span>.projectCategoryMap.get(projectCategory) != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            project.setProjectCategoryDictionaryId(<span class=\"keyword\">super</span>.projectCategoryMap.get(projectCategory));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String projectNature = row.getCell(<span class=\"number\">8</span>).getStringCellValue();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(projectNature) &amp;&amp; <span class=\"keyword\">super</span>.projectNatureMap.get(projectNature) == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目性质只能选择现有性质，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">super</span>.projectNatureMap.get(projectNature) != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            project.setNatureDictionaryId(<span class=\"keyword\">super</span>.projectCategoryMap.get(projectNature));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String isNotFive = row.getCell(<span class=\"number\">9</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(isNotFive)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"string\">&quot;是&quot;</span>.equals(isNotFive)) &#123;</span><br><span class=\"line\">                project.setIsNotFive(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"string\">&quot;否&quot;</span>.equals(isNotFive)) &#123;</span><br><span class=\"line\">                project.setIsNotFive(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;是否五率只能填写是或否，请先完善数据&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String deptName = row.getCell(<span class=\"number\">10</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(deptName)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;责任部门不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Long deptId = <span class=\"keyword\">super</span>.deptMap.get(deptName);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (deptId == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;责任部门只能选择现有的部门，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String projectUserAccountNo = row.getCell(<span class=\"number\">11</span>).getStringCellValue();</span><br><span class=\"line\">        String projectUserName = row.getCell(<span class=\"number\">12</span>).getStringCellValue();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(projectUserAccountNo)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目经理的账号不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(projectUserName)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目经理姓名不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        List&lt;User&gt; userList = userService.list(<span class=\"keyword\">new</span> QueryWrapper&lt;User&gt;().eq(<span class=\"string\">&quot;account_no&quot;</span>, projectUserAccountNo).eq(<span class=\"string\">&quot;nick_name&quot;</span>, projectUserName).eq(<span class=\"string\">&quot;deleted&quot;</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (userList == <span class=\"keyword\">null</span> || userList.size() == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目经理姓名和账号不存在在当前系统中，请排查数据&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (userList.size() &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;项目经理姓名和账号在系统中存在多个，请先精准数据&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            UserRole userRole = userRoleService.getOne(<span class=\"keyword\">new</span> QueryWrapper&lt;UserRole&gt;().eq(<span class=\"string\">&quot;uid&quot;</span>, userList.get(<span class=\"number\">0</span>).getId()));</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (userRole == <span class=\"keyword\">null</span> || userRole.getRid() != projectUserRoleId) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;该账号角色不属于项目经理，请先核实数据&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            project.setProjectUserId(userList.get(<span class=\"number\">0</span>).getId());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String controlUserAccountNo = row.getCell(<span class=\"number\">13</span>).getStringCellValue();</span><br><span class=\"line\">        String controlUserName = row.getCell(<span class=\"number\">14</span>).getStringCellValue();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(controlUserAccountNo)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;管控经理的账号不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(controlUserName)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;管控经理姓名不能为空，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        userList = userService.list(<span class=\"keyword\">new</span> QueryWrapper&lt;User&gt;().eq(<span class=\"string\">&quot;account_no&quot;</span>, controlUserAccountNo).eq(<span class=\"string\">&quot;nick_name&quot;</span>, controlUserName).eq(<span class=\"string\">&quot;deleted&quot;</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (userList == <span class=\"keyword\">null</span> || userList.size() == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;该管控经理姓名和账号不存在在当前系统中，请排查数据&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (userList.size() &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;该管控经理姓名和账号在系统中存在多个，请先精准数据&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            UserRole userRole = userRoleService.getOne(<span class=\"keyword\">new</span> QueryWrapper&lt;UserRole&gt;().eq(<span class=\"string\">&quot;uid&quot;</span>, userList.get(<span class=\"number\">0</span>).getId()));</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (userRole == <span class=\"keyword\">null</span> || userRole.getRid() != controlUserRoleId) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;该账号角色不属于管控经理，请先核实数据&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            project.setControlUserId(userList.get(<span class=\"number\">0</span>).getId());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String planBeginDateText = row.getCell(<span class=\"number\">15</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(planBeginDateText)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkDate(planBeginDateText)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;计划开工时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            project.setPlanBeginDate(LocalDateTime.parse(planBeginDateText));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String planEndDateText = row.getCell(<span class=\"number\">16</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(planEndDateText)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkDate(planEndDateText)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;计划竣工时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            project.setPlanBeginDate(LocalDateTime.parse(planEndDateText));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        project.setProjectTypeOneId(projectTypeOneId);</span><br><span class=\"line\">        project.setProjectTypeTwoId(projectTypeTwoId);</span><br><span class=\"line\">        project.setProjectYear(projectYearId);</span><br><span class=\"line\">        project.setName(projectName);</span><br><span class=\"line\">        project.setCode(row.getCell(<span class=\"number\">5</span>).getStringCellValue());</span><br><span class=\"line\">        project.setRemark(row.getCell(<span class=\"number\">6</span>).getStringCellValue());</span><br><span class=\"line\">        project.setDeptId(deptId);</span><br><span class=\"line\">        project.setDeleted(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">        project.setCreateTime(LocalDateTime.now());</span><br><span class=\"line\">        project.setCreateUser(currentLoginUserId);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> project;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> SettleTransferFinal <span class=\"title\">readCellSettleTransferFinalData</span><span class=\"params\">(Row row)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        SettleTransferFinal settleTransferFinal = <span class=\"keyword\">new</span> SettleTransferFinal();</span><br><span class=\"line\"></span><br><span class=\"line\">        String planAcceptTime = row.getCell(<span class=\"number\">17</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(planAcceptTime)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkDate(planAcceptTime)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;计划验收时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            settleTransferFinal.setPlanAcceptTime(LocalDateTime.parse(planAcceptTime));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String planSettlementTime = row.getCell(<span class=\"number\">18</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(planSettlementTime)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkDate(planSettlementTime)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;计划结算时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            settleTransferFinal.setPlanSettlementTime(LocalDateTime.parse(planSettlementTime));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String planFinalTime = row.getCell(<span class=\"number\">19</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(planFinalTime)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkDate(planFinalTime)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;计划决算时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            settleTransferFinal.setPlanFinalTime(LocalDateTime.parse(planFinalTime));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String planTransferStatusDictionaryTime = row.getCell(<span class=\"number\">20</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(planTransferStatusDictionaryTime) &amp;&amp; planTransferStatusDictionaryTime.contains(<span class=\"string\">&quot;/&quot;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkDate(planTransferStatusDictionaryTime)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;计划转资时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            settleTransferFinal.setPlanTransferStatusDictionaryTime(LocalDateTime.parse(planTransferStatusDictionaryTime));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        settleTransferFinal.setDeleted(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">        settleTransferFinal.setCreateTime(LocalDateTime.now());</span><br><span class=\"line\">        settleTransferFinal.setCreateUser(currentLoginUserId);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> settleTransferFinal;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> ResearchReferenceNum <span class=\"title\">readCellResearchReferenceNumData</span><span class=\"params\">(Row row)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        ResearchReferenceNum researchReferenceNum = <span class=\"keyword\">new</span> ResearchReferenceNum();</span><br><span class=\"line\"></span><br><span class=\"line\">        String referenceNum = row.getCell(<span class=\"number\">21</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(referenceNum)) &#123;</span><br><span class=\"line\">            researchReferenceNum.setReferenceNum(referenceNum);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String amount = row.getCell(<span class=\"number\">22</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(amount)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkMoney(amount)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;可研批复金额只允许小数后两位，请先修改该金额&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            researchReferenceNum.setAmount(<span class=\"keyword\">new</span> BigDecimal(amount));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String approveTime = row.getCell(<span class=\"number\">23</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(approveTime)) &#123;</span><br><span class=\"line\">            researchReferenceNum.setApproveTime(LocalDateTime.parse(approveTime));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        researchReferenceNum.setDeleted(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">        researchReferenceNum.setCreateTime(LocalDateTime.now());</span><br><span class=\"line\">        researchReferenceNum.setCreateUser(currentLoginUserId);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> researchReferenceNum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> InvestPlanInfo <span class=\"title\">readCellInvestPlanInfoData</span><span class=\"params\">(Row row)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        InvestPlanInfo info = <span class=\"keyword\">new</span> InvestPlanInfo();</span><br><span class=\"line\"></span><br><span class=\"line\">        String investPlanYear = row.getCell(<span class=\"number\">24</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(investPlanYear)) &#123;</span><br><span class=\"line\">            info.setInvestPlanYear(Integer.valueOf(investPlanYear));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String investPlanNum = row.getCell(<span class=\"number\">25</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(investPlanNum)) &#123;</span><br><span class=\"line\">            info.setInvestPlanNum(investPlanNum);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String planDownTime = row.getCell(<span class=\"number\">26</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(planDownTime)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkDate(planDownTime)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;投资计划下达日期格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            info.setPlanDownTime(LocalDateTime.parse(planDownTime));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String investPlanAmount = row.getCell(<span class=\"number\">27</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(investPlanAmount)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkMoney(investPlanAmount)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;投资计划总金额只允许小数后两位，请先修改该金额&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            info.setInvestPlanAmount(<span class=\"keyword\">new</span> BigDecimal(investPlanAmount));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String capitalAmount = row.getCell(<span class=\"number\">28</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(capitalAmount)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkMoney(capitalAmount)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;计划资本金只允许小数后两位，请先修改该金额&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            info.setCapitalAmount(<span class=\"keyword\">new</span> BigDecimal(capitalAmount));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String costAmount = row.getCell(<span class=\"number\">29</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(costAmount)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkMoney(costAmount)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;计划成本金只允许小数后两位，请先修改该金额&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            info.setCostAmount(<span class=\"keyword\">new</span> BigDecimal(costAmount));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        info.setDeleted(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">        info.setCreateTime(LocalDateTime.now());</span><br><span class=\"line\">        info.setCreateUser(currentLoginUserId);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> info;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>创建里程碑对象LoadMilepostData</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LoadMilepostData</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractLoadExcelDataTemplate</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String excelName = <span class=\"string\">&quot;项目基本信息导入模板&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String dataSheetName = <span class=\"string\">&quot;项目导入模板&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> dataBeginLineNum = <span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Milepost&gt; milepostList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LoadMilepostData</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.excelName = <span class=\"keyword\">this</span>.excelName;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.dataSheetName = <span class=\"keyword\">this</span>.dataSheetName;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.dataBeginLineNum = <span class=\"keyword\">this</span>.dataBeginLineNum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">readData</span><span class=\"params\">(Row row)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        milepostList.add(readCellMilepostData(row));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">saveData</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        milepostService.saveBatch(milepostList);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.milepostList.clear();</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.milepostService = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> Milepost <span class=\"title\">readCellMilepostData</span><span class=\"params\">(Row row)</span> <span class=\"keyword\">throws</span> BusinessException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Milepost milepost = <span class=\"keyword\">new</span> Milepost();</span><br><span class=\"line\"></span><br><span class=\"line\">        String name = row.getCell(<span class=\"number\">0</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtil.isNullOrEmpty(name)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;里程碑名称未填写，请先完善数据&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        milepost.setName(name);</span><br><span class=\"line\"></span><br><span class=\"line\">        String plannedTime = row.getCell(<span class=\"number\">1</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(plannedTime)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkDate(plannedTime)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;计划时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            milepost.setPlannedTime(LocalDateTime.parse(plannedTime));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String actualTime = row.getCell(<span class=\"number\">2</span>).getStringCellValue();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isNullOrEmpty(actualTime)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!checkDate(actualTime)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;实际时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            milepost.setActualTime(LocalDateTime.parse(actualTime));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        milepost.setReasonsOfDelay(row.getCell(<span class=\"number\">3</span>).getStringCellValue());</span><br><span class=\"line\">        milepost.setPromoteMeasures(row.getCell(<span class=\"number\">4</span>).getStringCellValue());</span><br><span class=\"line\"></span><br><span class=\"line\">        milepost.setDeleted(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">        milepost.setCreateTime(LocalDateTime.now());</span><br><span class=\"line\">        milepost.setCreateUser(currentLoginUserId);</span><br><span class=\"line\">        milepost.setConId(id);</span><br><span class=\"line\">        milepost.setType(milepostType);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> milepost;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>由于数据录入频率不会过于频繁，所以只需创建一个Controller即可 :</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@PostMapping(&quot;/excelInputData&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@ApiOperation(value = &quot;模板数据导入&quot;, response = Result.class)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Result <span class=\"title\">excelInputData</span><span class=\"params\">(<span class=\"meta\">@RequestParam(&quot;type&quot;)</span> <span class=\"keyword\">int</span> type, <span class=\"meta\">@RequestParam(&quot;id&quot;)</span> <span class=\"keyword\">long</span> id, <span class=\"meta\">@RequestParam(value = &quot;milepostType&quot;, required = false)</span> <span class=\"keyword\">int</span> milepostType, <span class=\"meta\">@RequestParam(&quot;file&quot;)</span> MultipartFile file)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 根据传入的Type不同过去不同的模板子对象进行解析</span></span><br><span class=\"line\">        LoadExcelDataEnum excelDataEnum = LoadExcelDataEnum.loadEnum(type);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 根据type获取所需要的模板对象</span></span><br><span class=\"line\">        AbstractLoadExcelDataTemplate template = excelDataEnum.createTemplate();</span><br><span class=\"line\"></span><br><span class=\"line\">        template.currentLoginUserId = getUserId();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 加载模板所需基础数据</span></span><br><span class=\"line\">        excelDataEnum.loadTemplateNeedBaseData(template, deptService, projectTypeService, dictionaryService, userService, userRoleService, projectService, settleTransferFinalService, researchReferenceNumService, investPlanInfoService, milepostService, id, milepostType);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 导入Excel数据</span></span><br><span class=\"line\">        template.inputData(file);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResultGenerator.genSuccessResult();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (BusinessException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResultGenerator.genFailResult(e.message);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResultGenerator.genFailResult(ErrorCode.SYS_ERROR);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上面代码中本应采用工厂模式判断type类型获取不同的模板子对象，但博主可能偏爱枚举对象，绝对枚举对象就是工厂和策略的合集，所以上方采用枚举的方式进行获取模板对象。</p>\n<p>枚举对象LoadExcelDataEnum</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> LoadExcelDataEnum &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    PROJECT(<span class=\"number\">1</span>, <span class=\"string\">&quot;项目基本信息导入模板.xlsx&quot;</span>) &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> AbstractLoadExcelDataTemplate <span class=\"title\">createTemplate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> LoadProjectBaseData();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">loadTemplateNeedBaseData</span><span class=\"params\">(AbstractLoadExcelDataTemplate template, DeptService deptService, ProjectTypeService projectTypeService, DictionaryService dictionaryService, UserService userService, UserRoleService userRoleService, ProjectService projectService, SettleTransferFinalService settleTransferFinalService, ResearchReferenceNumService researchReferenceNumService, InvestPlanInfoService investPlanInfoService, MilepostService milepostService, <span class=\"keyword\">long</span> id, <span class=\"keyword\">int</span> milepostType)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 加载基础数据，以便减少查询次数</span></span><br><span class=\"line\">            List&lt;Dept&gt; deptList = deptService.list();</span><br><span class=\"line\">            List&lt;ProjectType&gt; projectTypeList = projectTypeService.list();</span><br><span class=\"line\">            List&lt;Dictionary&gt; projectYearList = dictionaryService.list(<span class=\"keyword\">new</span> QueryWrapper&lt;Dictionary&gt;().eq(<span class=\"string\">&quot;type&quot;</span>, <span class=\"string\">&quot;ProjectYear&quot;</span>).eq(<span class=\"string\">&quot;status&quot;</span>, <span class=\"string\">&quot;1&quot;</span>).eq(<span class=\"string\">&quot;deleted&quot;</span>, <span class=\"string\">&quot;0&quot;</span>));</span><br><span class=\"line\">            List&lt;Dictionary&gt; projectCategoryList = dictionaryService.list(<span class=\"keyword\">new</span> QueryWrapper&lt;Dictionary&gt;().eq(<span class=\"string\">&quot;type&quot;</span>, <span class=\"string\">&quot;ProjectCategory&quot;</span>).eq(<span class=\"string\">&quot;status&quot;</span>, <span class=\"string\">&quot;1&quot;</span>).eq(<span class=\"string\">&quot;deleted&quot;</span>, <span class=\"string\">&quot;0&quot;</span>));</span><br><span class=\"line\">            List&lt;Dictionary&gt; projectNatureList = dictionaryService.list(<span class=\"keyword\">new</span> QueryWrapper&lt;Dictionary&gt;().eq(<span class=\"string\">&quot;type&quot;</span>, <span class=\"string\">&quot;ProjectNature&quot;</span>).eq(<span class=\"string\">&quot;status&quot;</span>, <span class=\"string\">&quot;1&quot;</span>).eq(<span class=\"string\">&quot;deleted&quot;</span>, <span class=\"string\">&quot;0&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 将基础数据放入模板</span></span><br><span class=\"line\">            template.setProjectYear(projectYearList);</span><br><span class=\"line\">            template.setProjectCategory(projectCategoryList);</span><br><span class=\"line\">            template.setProjectNature(projectNatureList);</span><br><span class=\"line\">            template.setProjectType(projectTypeList);</span><br><span class=\"line\">            template.setDept(deptList);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 注入操作对象</span></span><br><span class=\"line\">            template.userService = userService;</span><br><span class=\"line\">            template.userRoleService = userRoleService;</span><br><span class=\"line\">            template.projectService = projectService;</span><br><span class=\"line\">            template.settleTransferFinalService = settleTransferFinalService;</span><br><span class=\"line\">            template.researchReferenceNumService = researchReferenceNumService;</span><br><span class=\"line\">            template.investPlanInfoService = investPlanInfoService;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    MILEPOST(<span class=\"number\">2</span>, <span class=\"string\">&quot;里程碑导入模板.xlsx&quot;</span>) &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> AbstractLoadExcelDataTemplate <span class=\"title\">createTemplate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> LoadMilepostData();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">loadTemplateNeedBaseData</span><span class=\"params\">(AbstractLoadExcelDataTemplate template, DeptService deptService, ProjectTypeService projectTypeService, DictionaryService dictionaryService, UserService userService, UserRoleService userRoleService, ProjectService projectService, SettleTransferFinalService settleTransferFinalService, ResearchReferenceNumService researchReferenceNumService, InvestPlanInfoService investPlanInfoService, MilepostService milepostService, <span class=\"keyword\">long</span> id, <span class=\"keyword\">int</span> milepostType)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            template.id = id;</span><br><span class=\"line\">            template.milepostType = milepostType;</span><br><span class=\"line\">            template.milepostService = milepostService;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> type;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    LoadExcelDataEnum(<span class=\"keyword\">int</span> type, String name) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.type = type;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LoadExcelDataEnum <span class=\"title\">loadEnum</span><span class=\"params\">(<span class=\"keyword\">int</span> type)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (LoadExcelDataEnum excelDataEnum : values()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (excelDataEnum.type == type) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> excelDataEnum;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> AbstractLoadExcelDataTemplate <span class=\"title\">createTemplate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">loadTemplateNeedBaseData</span><span class=\"params\">(AbstractLoadExcelDataTemplate template, DeptService deptService, ProjectTypeService projectTypeService, DictionaryService dictionaryService, UserService userService, UserRoleService userRoleService, ProjectService projectService, SettleTransferFinalService settleTransferFinalService, ResearchReferenceNumService researchReferenceNumService, InvestPlanInfoService investPlanInfoService, MilepostService milepostService, <span class=\"keyword\">long</span> id, <span class=\"keyword\">int</span> milepostType)</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"模板模式在源码中的体现\"><a href=\"#模板模式在源码中的体现\" class=\"headerlink\" title=\"模板模式在源码中的体现\"></a>模板模式在源码中的体现</h3><p>先来看 JDK 中的 AbstractList，来看代码:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> java.util;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AbstractList</span>&lt;<span class=\"title\">E</span>&gt; <span class=\"keyword\">extends</span> <span class=\"title\">AbstractCollection</span>&lt;<span class=\"title\">E</span>&gt; <span class=\"keyword\">implements</span> <span class=\"title\">List</span>&lt;<span class=\"title\">E</span>&gt; </span>&#123; </span><br><span class=\"line\">  \t...</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> E <span class=\"title\">get</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span></span>; </span><br><span class=\"line\">  \t...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>我们看到 get()是一个抽象方法，那么它的逻辑就是交给子类来实现，我们大家所熟知的 ArrayList 就是 AbstractList 的子类。同理，有 AbstractList 就有 AbstractSet 和 AbstractMap，有兴趣的可以去看看这些的源码实现。还有一个每天都在用的 HttpServlet，有三个方法 service()和 doGet()、doPost()方法，都是模板方法的抽象实现。</p>\n<p>在 MyBatis 框架也有一些经典的应用，比如 BaseExecutor 类，它是一个基础的 SQL 执行类，实现了大部分的 SQL 执行逻辑，然后把几个方法交给子类定制化完成，源码如下:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BaseExecutor</span> <span class=\"keyword\">implements</span> <span class=\"title\">Executor</span> </span>&#123; </span><br><span class=\"line\">  \t...</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">int</span> <span class=\"title\">doUpdate</span><span class=\"params\">(MappedStatement var1, Object var2)</span> <span class=\"keyword\">throws</span> SQLException</span>;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> List&lt;BatchResult&gt; <span class=\"title\">doFlushStatements</span><span class=\"params\">(<span class=\"keyword\">boolean</span> var1)</span> <span class=\"keyword\">throws</span> SQLException</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> &lt;E&gt; <span class=\"function\">List&lt;E&gt; <span class=\"title\">doQuery</span><span class=\"params\">(MappedStatement var1, Object var2, RowBounds var3, ResultHandler var4, BoundSql var5)</span> <span class=\"keyword\">throws</span> SQLException</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> &lt;E&gt; <span class=\"function\">Cursor&lt;E&gt; <span class=\"title\">doQueryCursor</span><span class=\"params\">(MappedStatement var1, Object var2, RowBounds var3, BoundSql var4)</span> <span class=\"keyword\">throws</span> SQLException</span>;</span><br><span class=\"line\">\t\t... </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>如 doUpdate、doFlushStatements、doQuery、doQueryCursor 这几个方法就是交由子类来实现，下面是它的类图:</p>\n<p><img src=\"http://127.0.0.1/image/blog/image-20200328183440955.png\" alt=\"image-20200328183440955\"></p>\n<h3 id=\"模板模式的优缺点\"><a href=\"#模板模式的优缺点\" class=\"headerlink\" title=\"模板模式的优缺点\"></a>模板模式的优缺点</h3><p>优点:</p>\n<ul>\n<li>利用模板方法将相同处理逻辑的代码放到抽象父类中，可以提高代码的复用性</li>\n<li>将不同的代码放在不同的子类中，通过对子类的扩展增加新的行为，提高代码的扩展性</li>\n<li>把不变的行为写在父类上，去除子类的重复代码，提供了一个很好的代码复用平台， 符合开闭原则</li>\n</ul>\n<p>缺点:</p>\n<ul>\n<li>类数目的增加，每一个抽象类都需要一个子类来实现，这样导致类的个数增加</li>\n<li>类数量的增加，间接地增加了系统实现的复杂度</li>\n<li>继承关系自身缺点，如果父类添加新的抽象方法，所有子类都要改一遍</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckf0znjde0001p27j3tpdgmlg","category_id":"ckf0znjdn0003p27j7a7wcpqa","_id":"ckf0znjdw000ap27j69g225qv"}],"PostTag":[{"post_id":"ckf0znjde0001p27j3tpdgmlg","tag_id":"ckf0znjdo0004p27jeg7q3gn5","_id":"ckf0znjdx000bp27j5oeyh88f"},{"post_id":"ckf0znjde0001p27j3tpdgmlg","tag_id":"ckf0znjdv0008p27j3u0x7d9p","_id":"ckf0znjdy000cp27jf7xs7udb"},{"post_id":"ckf0znje1000dp27jerf691b8","tag_id":"ckf0znje2000ep27j1rp3f84m","_id":"ckf0znje2000fp27j67we063s"},{"post_id":"ckf0znjez000gp27j41hfbq5m","tag_id":"ckf0znjf0000hp27jfsw74uka","_id":"ckf0znjf1000ip27jg840560p"}],"Tag":[{"name":"Gitlab","_id":"ckf0znjdo0004p27jeg7q3gn5"},{"name":"安装手册","_id":"ckf0znjdv0008p27j3u0x7d9p"},{"name":"Mybatis","_id":"ckf0znje2000ep27j1rp3f84m"},{"name":"模板模式","_id":"ckf0znjf0000hp27jfsw74uka"}]}}