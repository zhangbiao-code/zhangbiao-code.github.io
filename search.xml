<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>模板模式</title>
      <link href="/posts/202009131022.html"/>
      <url>/posts/202009131022.html</url>
      
        <content type="html"><![CDATA[<h3 id="模板模式的定义"><a href="#模板模式的定义" class="headerlink" title="模板模式的定义"></a>模板模式的定义</h3><blockquote><p>模板模式通常又叫模板方法模式(Template Method Pattern)是指在父类中定义一个流程的骨架，允许子类为一个或者多个流程内的具体步骤提供实现。模板方法使得子类可以在不改变流程顺序的情况下，重新定义流程中的某些步骤具体的实现，属于行为性设计模式。</p></blockquote><p><strong>个人理解：</strong><br>    模板模式是在继承的基础上衍生出来的概念，注重业务执行的<code>顺序</code>，在相同的需求不同的业务中，将代码执行流程的步骤定义在父类中，多种业务场景下相同的行为放在父类中，单个步骤的业务不一致则将具体实现定义在子类中，以这样的形式来减少代码的冗余，和增加代码的拓展性，这样的形式即可认为是模板模式(这样更好理解，但描述的有些片面和过激)个人认为在相同的需求不同的业务的情况下<code>步骤的顺序</code>是模板模式的核心。</p><h3 id="模板方法适用于以下应用场景"><a href="#模板方法适用于以下应用场景" class="headerlink" title="模板方法适用于以下应用场景:"></a>模板方法适用于以下应用场景:</h3><ul><li>一次性实现一个流程的不变的部分，并将可变的行为留给子类来实现</li><li>各子类中公共的行为被提取出来并集中到一个公共的父类中，从而避免代码重复</li></ul><p>举例：</p><ol><li>办理入职流程填写入职登记表–&gt;打印简历–&gt;复印学历–&gt;复印身份证–&gt;签订 劳动合同–&gt;建立花名册–&gt;办理工牌</li><li>平时在家里炒菜:洗锅 –&gt;点火–&gt;热锅–&gt;上油–&gt;下原料–&gt;翻炒–&gt;放调料–&gt;出锅</li></ol><h3 id="模板模式的优缺点"><a href="#模板模式的优缺点" class="headerlink" title="模板模式的优缺点"></a>模板模式的优缺点</h3><p>优点:</p><ul><li>利用模板方法将相同处理逻辑的代码放到抽象父类中，可以提高代码的复用性</li><li>将不同的代码放在不同的子类中，通过对子类的扩展增加新的行为，提高代码的扩展性</li><li>把不变的行为写在父类上，去除子类的重复代码，提供了一个很好的代码复用平台， 符合开闭原则</li></ul><p>缺点:</p><ul><li>类数目的增加，每一个抽象类都需要一个子类来实现，这样导致类的个数增加</li><li>类数量的增加，间接地增加了系统实现的复杂度</li><li>继承关系自身缺点，如果父类添加新的抽象方法，所有子类都要改一遍</li></ul><h3 id="实际项目中Excel数据导入案例"><a href="#实际项目中Excel数据导入案例" class="headerlink" title="实际项目中Excel数据导入案例"></a>实际项目中Excel数据导入案例</h3><p>该部分业务场景为:</p><pre><code>有多个Excel模板，客户希望在不同的业务模块下下载该模块固定的Excel模板，将数据录入模板后并将模板上传，系统自动将模板内的数据录入到系统中。</code></pre><p>使用模板模式原因：录入数据的过程是一样的,只是每个模板解析数据的行列、数据校验和存储时所需的操作对象不同,所以可以使用模板模式,在模板中定义执行流程,不同的解析数据的方式可以放到不同子对象中实现,录入数据的过程可以分为:</p><pre><code>1. check模板文件是否正确 2. 加载该文件遍历解析出每一行数据 3. 将数据解析到集合中 4. 批量存储数据 5. 清除该过程中使用的临时对象或集合</code></pre><p>创建一个模板类 AbstractLoadExcelDataTemplate:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * excel模板数据导入模板</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractLoadExcelDataTemplate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Long id; <span class="comment">// 里程碑模板导入时里程碑数据关联所需的外键</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> milepostType; <span class="comment">// 用于判断里程碑外键的类型属于项目的里程碑还是合同的里程碑 (暂时无合同里程碑，留待以后使用)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Long currentLoginUserId; <span class="comment">// 当前登录用户</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String excelName; <span class="comment">// excel模板名称</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String dataSheetName; <span class="comment">// sheet页名称</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> dataBeginLineNum; <span class="comment">// excel 数据起始行数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> String suffix = <span class="string">&quot;xlsx&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> projectUserRoleId = <span class="number">0l</span>; <span class="comment">// 项目经理RoleID</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> controlUserRoleId = <span class="number">1l</span>; <span class="comment">// 管控经理RoleID</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Long&gt; projectTypeOneMap = <span class="keyword">new</span> HashMap&lt;&gt;(); <span class="comment">// 一级类别Map key-&gt;类别名称  value-&gt;类别ID</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Long&gt; projectTypeTwoMap = <span class="keyword">new</span> HashMap&lt;&gt;(); <span class="comment">// 二级类别Map key-&gt;类别名称  value-&gt;类别ID</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Long&gt; projectYearMap = <span class="keyword">new</span> HashMap&lt;&gt;(); <span class="comment">// 项目年度Map key-&gt;年度  value-&gt;年度ID</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Long&gt; projectCategoryMap = <span class="keyword">new</span> HashMap&lt;&gt;(); <span class="comment">// 项目类型Map key-&gt;类型名称  value-&gt;类型ID</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Long&gt; projectNatureMap = <span class="keyword">new</span> HashMap&lt;&gt;(); <span class="comment">// 项目性质Map key-&gt;性质名称  value-&gt;性质ID</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Long&gt; deptMap = <span class="keyword">new</span> HashMap&lt;&gt;(); <span class="comment">// 项目部门Map key-&gt;部门名称  value-&gt;部门ID</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> UserRoleService userRoleService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ProjectService projectService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> SettleTransferFinalService settleTransferFinalService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ResearchReferenceNumService researchReferenceNumService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> InvestPlanInfoService investPlanInfoService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> MilepostService milepostService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ------------------------------ 加载基础数据 Begin -------------------------------</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDept</span><span class="params">(List&lt;Dept&gt; list)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Dept dept : list) &#123;</span><br><span class="line">            deptMap.put(dept.getName(), dept.getId());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProjectType</span><span class="params">(List&lt;ProjectType&gt; list)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (ProjectType projectType : list) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (projectType.getParentId() == <span class="number">0l</span>) &#123;</span><br><span class="line">                projectTypeOneMap.put(projectType.getName(), projectType.getId());</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                projectTypeTwoMap.put(projectType.getName(), projectType.getId());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProjectYear</span><span class="params">(List&lt;Dictionary&gt; list)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Dictionary dictionary : list) &#123;</span><br><span class="line"></span><br><span class="line">            projectYearMap.put(dictionary.getName(), dictionary.getId());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProjectCategory</span><span class="params">(List&lt;Dictionary&gt; list)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Dictionary dictionary : list) &#123;</span><br><span class="line"></span><br><span class="line">            projectYearMap.put(dictionary.getName(), dictionary.getId());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProjectNature</span><span class="params">(List&lt;Dictionary&gt; list)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Dictionary dictionary : list) &#123;</span><br><span class="line"></span><br><span class="line">            projectYearMap.put(dictionary.getName(), dictionary.getId());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ------------------------------ 加载基础数据 End -------------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 模板模式核心控制流程的代码</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inputData</span><span class="params">(MultipartFile file)</span> <span class="keyword">throws</span> BusinessException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        XSSFSheet sheet = <span class="keyword">this</span>.checkFile(file);</span><br><span class="line"></span><br><span class="line">        Row row;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> rowNum = <span class="keyword">this</span>.dataBeginLineNum; rowNum &lt;= sheet.getLastRowNum(); rowNum++) &#123;</span><br><span class="line"></span><br><span class="line">            row = sheet.getRow(rowNum);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.readData(row);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (BusinessException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;第【&quot;</span> + rowNum + <span class="string">&quot;】行中&quot;</span> + e.message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.saveData();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.clear(); <span class="comment">// 释放资源</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">readData</span><span class="params">(Row row)</span> <span class="keyword">throws</span> BusinessException</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">saveData</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> XSSFSheet <span class="title">checkFile</span><span class="params">(MultipartFile file)</span> <span class="keyword">throws</span> BusinessException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        XSSFSheet sheet = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (file != <span class="keyword">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">            String originalFilename = file.getOriginalFilename();</span><br><span class="line">            String[] arr = originalFilename.split(<span class="string">&quot;\\.&quot;</span>);</span><br><span class="line"></span><br><span class="line">            checkSuffix(arr[<span class="number">1</span>]);</span><br><span class="line">            checkExcelName(arr[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">            InputStream is = file.getInputStream();</span><br><span class="line">            XSSFWorkbook workbook = <span class="keyword">new</span> XSSFWorkbook(is);</span><br><span class="line"></span><br><span class="line">            sheet = checkDataSheetName(workbook);</span><br><span class="line">            checkSheetDataIsNotNull(sheet);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkExcelName</span><span class="params">(String excelName)</span> <span class="keyword">throws</span> BusinessException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">this</span>.excelName.equals(excelName)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;不可修改模板文件名称，请先恢复模板名称再尽心数据导入&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkSuffix</span><span class="params">(String suffix)</span> <span class="keyword">throws</span> BusinessException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">this</span>.suffix.equals(suffix)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;模板文件格式错误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> XSSFSheet <span class="title">checkDataSheetName</span><span class="params">(XSSFWorkbook workbook)</span> <span class="keyword">throws</span> BusinessException </span>&#123;</span><br><span class="line"></span><br><span class="line">        XSSFSheet sheet = workbook.getSheet(<span class="keyword">this</span>.dataSheetName);</span><br><span class="line">        <span class="keyword">if</span> (sheet == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;无可录入数据的sheet页(不可修改sheet页名称)&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sheet;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkSheetDataIsNotNull</span><span class="params">(XSSFSheet sheet)</span> <span class="keyword">throws</span> BusinessException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!(sheet.getLastRowNum() &gt; <span class="keyword">this</span>.dataBeginLineNum)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;请先将数据录入模板文件再进行导入&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * check时间格式为YYYY-MM-DD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">checkDate</span><span class="params">(String time)</span> </span>&#123;</span><br><span class="line">        SimpleDateFormat dateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy/MM/dd&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Date t = dateFormat.parse(time);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * check金额后面只允许有两位小数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> money</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">checkMoney</span><span class="params">(String money)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (money.contains(<span class="string">&quot;\\.&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (money.split(<span class="string">&quot;\\.&quot;</span>)[<span class="number">1</span>].length() &gt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该业务中存在两处模板数据录入：1、项目的数据导入  2、项目里程碑的数据导入(里程碑：项目的阶段介绍如项目开始阶段，验收阶段，维护阶段等)</p><p>创建项目对象LoadProjectBaseData</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoadProjectBaseData</span> <span class="keyword">extends</span> <span class="title">AbstractLoadExcelDataTemplate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String excelName = <span class="string">&quot;项目基本信息导入模板&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String dataSheetName = <span class="string">&quot;项目导入模板&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Project&gt; projectList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;SettleTransferFinal&gt; settleTransferFinalList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;ResearchReferenceNum&gt; researchReferenceNumList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;InvestPlanInfo&gt; investPlanInfoList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> dataBeginLineNum = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LoadProjectBaseData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.excelName = <span class="keyword">this</span>.excelName;</span><br><span class="line">        <span class="keyword">super</span>.dataSheetName = <span class="keyword">this</span>.dataSheetName;</span><br><span class="line">        <span class="keyword">super</span>.dataBeginLineNum = <span class="keyword">this</span>.dataBeginLineNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">readData</span><span class="params">(Row row)</span> <span class="keyword">throws</span> BusinessException </span>&#123;</span><br><span class="line"></span><br><span class="line">        String projectCode = row.getCell(<span class="number">5</span>).getStringCellValue();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isNullOrEmpty(projectCode)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;项目编码不能为空，请先完善数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        List&lt;Project&gt; list = projectService.list(<span class="keyword">new</span> QueryWrapper&lt;Project&gt;().eq(<span class="string">&quot;code&quot;</span>, projectCode).eq(<span class="string">&quot;deleted&quot;</span>, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 项目编码不存在在当前系统中才进行数据的录入</span></span><br><span class="line">        <span class="keyword">if</span> (list.size() &lt;= <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">            projectList.add(readCellProjectData(row));</span><br><span class="line"></span><br><span class="line">            settleTransferFinalList.add(readCellSettleTransferFinalData(row));</span><br><span class="line"></span><br><span class="line">            researchReferenceNumList.add(readCellResearchReferenceNumData(row));</span><br><span class="line"></span><br><span class="line">            investPlanInfoList.add(readCellInvestPlanInfoData(row));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveData</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        projectService.saveBatch(projectList);</span><br><span class="line"></span><br><span class="line">        settleTransferFinalService.saveBatch(settleTransferFinalList);</span><br><span class="line"></span><br><span class="line">        researchReferenceNumService.saveBatch(researchReferenceNumList);</span><br><span class="line"></span><br><span class="line">        investPlanInfoService.saveBatch(investPlanInfoList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.projectList.clear();</span><br><span class="line">        <span class="keyword">this</span>.settleTransferFinalList.clear();</span><br><span class="line">        <span class="keyword">this</span>.investPlanInfoList.clear();</span><br><span class="line">        <span class="keyword">this</span>.researchReferenceNumList.clear();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">super</span>.deptMap.clear();</span><br><span class="line">        <span class="keyword">super</span>.projectCategoryMap.clear();</span><br><span class="line">        <span class="keyword">super</span>.projectYearMap.clear();</span><br><span class="line">        <span class="keyword">super</span>.projectNatureMap.clear();</span><br><span class="line">        <span class="keyword">super</span>.projectTypeOneMap.clear();</span><br><span class="line">        <span class="keyword">super</span>.projectTypeTwoMap.clear();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">super</span>.userService = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">super</span>.userRoleService = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">super</span>.projectService = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">super</span>.settleTransferFinalService = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">super</span>.researchReferenceNumService = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">super</span>.investPlanInfoService = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Project <span class="title">readCellProjectData</span><span class="params">(Row row)</span> <span class="keyword">throws</span> BusinessException </span>&#123;</span><br><span class="line"></span><br><span class="line">        Project project = <span class="keyword">new</span> Project();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isNullOrEmpty(row.getCell(<span class="number">1</span>).getStringCellValue())) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;项目类别不能为空，请先完善数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Long projectTypeOneId = <span class="keyword">super</span>.projectTypeOneMap.get(row.getCell(<span class="number">1</span>).getStringCellValue());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (projectTypeOneId == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;项目类别只能选择现有的类别，请先完善数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isNullOrEmpty(row.getCell(<span class="number">2</span>).getStringCellValue())) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;项目二级分类不能为空，请先完善数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Long projectTypeTwoId = <span class="keyword">super</span>.projectTypeTwoMap.get(row.getCell(<span class="number">2</span>).getStringCellValue());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (projectTypeTwoId == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;二级分类只能选择现有的分类，请先完善数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String projectYear = row.getCell(<span class="number">3</span>).getStringCellValue();</span><br><span class="line">        Long projectYearId = <span class="keyword">super</span>.projectYearMap.get(projectYear);</span><br><span class="line">        <span class="keyword">if</span> (projectYearId == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;项目年度不能为空，请先完善数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String projectName = row.getCell(<span class="number">4</span>).getStringCellValue();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isNullOrEmpty(projectName)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;项目名称不能为空，请先完善数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String projectCategory = row.getCell(<span class="number">7</span>).getStringCellValue();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(projectCategory) &amp;&amp; <span class="keyword">super</span>.projectCategoryMap.get(projectCategory) == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;项目类型只能选择现有类型，请先完善数据&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">super</span>.projectCategoryMap.get(projectCategory) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            project.setProjectCategoryDictionaryId(<span class="keyword">super</span>.projectCategoryMap.get(projectCategory));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String projectNature = row.getCell(<span class="number">8</span>).getStringCellValue();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(projectNature) &amp;&amp; <span class="keyword">super</span>.projectNatureMap.get(projectNature) == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;项目性质只能选择现有性质，请先完善数据&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">super</span>.projectNatureMap.get(projectNature) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            project.setNatureDictionaryId(<span class="keyword">super</span>.projectCategoryMap.get(projectNature));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String isNotFive = row.getCell(<span class="number">9</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(isNotFive)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;是&quot;</span>.equals(isNotFive)) &#123;</span><br><span class="line">                project.setIsNotFive(<span class="keyword">true</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;否&quot;</span>.equals(isNotFive)) &#123;</span><br><span class="line">                project.setIsNotFive(<span class="keyword">false</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;是否五率只能填写是或否，请先完善数据&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String deptName = row.getCell(<span class="number">10</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isNullOrEmpty(deptName)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;责任部门不能为空，请先完善数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Long deptId = <span class="keyword">super</span>.deptMap.get(deptName);</span><br><span class="line">        <span class="keyword">if</span> (deptId == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;责任部门只能选择现有的部门，请先完善数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String projectUserAccountNo = row.getCell(<span class="number">11</span>).getStringCellValue();</span><br><span class="line">        String projectUserName = row.getCell(<span class="number">12</span>).getStringCellValue();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isNullOrEmpty(projectUserAccountNo)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;项目经理的账号不能为空，请先完善数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isNullOrEmpty(projectUserName)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;项目经理姓名不能为空，请先完善数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        List&lt;User&gt; userList = userService.list(<span class="keyword">new</span> QueryWrapper&lt;User&gt;().eq(<span class="string">&quot;account_no&quot;</span>, projectUserAccountNo).eq(<span class="string">&quot;nick_name&quot;</span>, projectUserName).eq(<span class="string">&quot;deleted&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        <span class="keyword">if</span> (userList == <span class="keyword">null</span> || userList.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;项目经理姓名和账号不存在在当前系统中，请排查数据&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (userList.size() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;项目经理姓名和账号在系统中存在多个，请先精准数据&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            UserRole userRole = userRoleService.getOne(<span class="keyword">new</span> QueryWrapper&lt;UserRole&gt;().eq(<span class="string">&quot;uid&quot;</span>, userList.get(<span class="number">0</span>).getId()));</span><br><span class="line">            <span class="keyword">if</span> (userRole == <span class="keyword">null</span> || userRole.getRid() != projectUserRoleId) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;该账号角色不属于项目经理，请先核实数据&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            project.setProjectUserId(userList.get(<span class="number">0</span>).getId());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String controlUserAccountNo = row.getCell(<span class="number">13</span>).getStringCellValue();</span><br><span class="line">        String controlUserName = row.getCell(<span class="number">14</span>).getStringCellValue();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isNullOrEmpty(controlUserAccountNo)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;管控经理的账号不能为空，请先完善数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isNullOrEmpty(controlUserName)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;管控经理姓名不能为空，请先完善数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        userList = userService.list(<span class="keyword">new</span> QueryWrapper&lt;User&gt;().eq(<span class="string">&quot;account_no&quot;</span>, controlUserAccountNo).eq(<span class="string">&quot;nick_name&quot;</span>, controlUserName).eq(<span class="string">&quot;deleted&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        <span class="keyword">if</span> (userList == <span class="keyword">null</span> || userList.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;该管控经理姓名和账号不存在在当前系统中，请排查数据&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (userList.size() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;该管控经理姓名和账号在系统中存在多个，请先精准数据&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            UserRole userRole = userRoleService.getOne(<span class="keyword">new</span> QueryWrapper&lt;UserRole&gt;().eq(<span class="string">&quot;uid&quot;</span>, userList.get(<span class="number">0</span>).getId()));</span><br><span class="line">            <span class="keyword">if</span> (userRole == <span class="keyword">null</span> || userRole.getRid() != controlUserRoleId) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;该账号角色不属于管控经理，请先核实数据&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            project.setControlUserId(userList.get(<span class="number">0</span>).getId());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String planBeginDateText = row.getCell(<span class="number">15</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(planBeginDateText)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!checkDate(planBeginDateText)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;计划开工时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            project.setPlanBeginDate(LocalDateTime.parse(planBeginDateText));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String planEndDateText = row.getCell(<span class="number">16</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(planEndDateText)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!checkDate(planEndDateText)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;计划竣工时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            project.setPlanBeginDate(LocalDateTime.parse(planEndDateText));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        project.setProjectTypeOneId(projectTypeOneId);</span><br><span class="line">        project.setProjectTypeTwoId(projectTypeTwoId);</span><br><span class="line">        project.setProjectYear(projectYearId);</span><br><span class="line">        project.setName(projectName);</span><br><span class="line">        project.setCode(row.getCell(<span class="number">5</span>).getStringCellValue());</span><br><span class="line">        project.setRemark(row.getCell(<span class="number">6</span>).getStringCellValue());</span><br><span class="line">        project.setDeptId(deptId);</span><br><span class="line">        project.setDeleted(<span class="keyword">false</span>);</span><br><span class="line">        project.setCreateTime(LocalDateTime.now());</span><br><span class="line">        project.setCreateUser(currentLoginUserId);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> project;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SettleTransferFinal <span class="title">readCellSettleTransferFinalData</span><span class="params">(Row row)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        SettleTransferFinal settleTransferFinal = <span class="keyword">new</span> SettleTransferFinal();</span><br><span class="line"></span><br><span class="line">        String planAcceptTime = row.getCell(<span class="number">17</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(planAcceptTime)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!checkDate(planAcceptTime)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;计划验收时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            settleTransferFinal.setPlanAcceptTime(LocalDateTime.parse(planAcceptTime));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String planSettlementTime = row.getCell(<span class="number">18</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(planSettlementTime)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!checkDate(planSettlementTime)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;计划结算时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            settleTransferFinal.setPlanSettlementTime(LocalDateTime.parse(planSettlementTime));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String planFinalTime = row.getCell(<span class="number">19</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(planFinalTime)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!checkDate(planFinalTime)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;计划决算时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            settleTransferFinal.setPlanFinalTime(LocalDateTime.parse(planFinalTime));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String planTransferStatusDictionaryTime = row.getCell(<span class="number">20</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(planTransferStatusDictionaryTime) &amp;&amp; planTransferStatusDictionaryTime.contains(<span class="string">&quot;/&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!checkDate(planTransferStatusDictionaryTime)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;计划转资时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            settleTransferFinal.setPlanTransferStatusDictionaryTime(LocalDateTime.parse(planTransferStatusDictionaryTime));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        settleTransferFinal.setDeleted(<span class="keyword">false</span>);</span><br><span class="line">        settleTransferFinal.setCreateTime(LocalDateTime.now());</span><br><span class="line">        settleTransferFinal.setCreateUser(currentLoginUserId);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> settleTransferFinal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ResearchReferenceNum <span class="title">readCellResearchReferenceNumData</span><span class="params">(Row row)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        ResearchReferenceNum researchReferenceNum = <span class="keyword">new</span> ResearchReferenceNum();</span><br><span class="line"></span><br><span class="line">        String referenceNum = row.getCell(<span class="number">21</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(referenceNum)) &#123;</span><br><span class="line">            researchReferenceNum.setReferenceNum(referenceNum);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String amount = row.getCell(<span class="number">22</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(amount)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!checkMoney(amount)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;可研批复金额只允许小数后两位，请先修改该金额&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            researchReferenceNum.setAmount(<span class="keyword">new</span> BigDecimal(amount));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String approveTime = row.getCell(<span class="number">23</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(approveTime)) &#123;</span><br><span class="line">            researchReferenceNum.setApproveTime(LocalDateTime.parse(approveTime));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        researchReferenceNum.setDeleted(<span class="keyword">false</span>);</span><br><span class="line">        researchReferenceNum.setCreateTime(LocalDateTime.now());</span><br><span class="line">        researchReferenceNum.setCreateUser(currentLoginUserId);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> researchReferenceNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> InvestPlanInfo <span class="title">readCellInvestPlanInfoData</span><span class="params">(Row row)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        InvestPlanInfo info = <span class="keyword">new</span> InvestPlanInfo();</span><br><span class="line"></span><br><span class="line">        String investPlanYear = row.getCell(<span class="number">24</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(investPlanYear)) &#123;</span><br><span class="line">            info.setInvestPlanYear(Integer.valueOf(investPlanYear));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String investPlanNum = row.getCell(<span class="number">25</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(investPlanNum)) &#123;</span><br><span class="line">            info.setInvestPlanNum(investPlanNum);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String planDownTime = row.getCell(<span class="number">26</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(planDownTime)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!checkDate(planDownTime)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;投资计划下达日期格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            info.setPlanDownTime(LocalDateTime.parse(planDownTime));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String investPlanAmount = row.getCell(<span class="number">27</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(investPlanAmount)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!checkMoney(investPlanAmount)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;投资计划总金额只允许小数后两位，请先修改该金额&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            info.setInvestPlanAmount(<span class="keyword">new</span> BigDecimal(investPlanAmount));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String capitalAmount = row.getCell(<span class="number">28</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(capitalAmount)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!checkMoney(capitalAmount)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;计划资本金只允许小数后两位，请先修改该金额&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            info.setCapitalAmount(<span class="keyword">new</span> BigDecimal(capitalAmount));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String costAmount = row.getCell(<span class="number">29</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(costAmount)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!checkMoney(costAmount)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;计划成本金只允许小数后两位，请先修改该金额&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            info.setCostAmount(<span class="keyword">new</span> BigDecimal(costAmount));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        info.setDeleted(<span class="keyword">false</span>);</span><br><span class="line">        info.setCreateTime(LocalDateTime.now());</span><br><span class="line">        info.setCreateUser(currentLoginUserId);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建里程碑对象LoadMilepostData</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoadMilepostData</span> <span class="keyword">extends</span> <span class="title">AbstractLoadExcelDataTemplate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String excelName = <span class="string">&quot;项目基本信息导入模板&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String dataSheetName = <span class="string">&quot;项目导入模板&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> dataBeginLineNum = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Milepost&gt; milepostList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LoadMilepostData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.excelName = <span class="keyword">this</span>.excelName;</span><br><span class="line">        <span class="keyword">super</span>.dataSheetName = <span class="keyword">this</span>.dataSheetName;</span><br><span class="line">        <span class="keyword">super</span>.dataBeginLineNum = <span class="keyword">this</span>.dataBeginLineNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">readData</span><span class="params">(Row row)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        milepostList.add(readCellMilepostData(row));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveData</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        milepostService.saveBatch(milepostList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.milepostList.clear();</span><br><span class="line">        <span class="keyword">super</span>.milepostService = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Milepost <span class="title">readCellMilepostData</span><span class="params">(Row row)</span> <span class="keyword">throws</span> BusinessException </span>&#123;</span><br><span class="line"></span><br><span class="line">        Milepost milepost = <span class="keyword">new</span> Milepost();</span><br><span class="line"></span><br><span class="line">        String name = row.getCell(<span class="number">0</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isNullOrEmpty(name)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;里程碑名称未填写，请先完善数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        milepost.setName(name);</span><br><span class="line"></span><br><span class="line">        String plannedTime = row.getCell(<span class="number">1</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(plannedTime)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!checkDate(plannedTime)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;计划时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            milepost.setPlannedTime(LocalDateTime.parse(plannedTime));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String actualTime = row.getCell(<span class="number">2</span>).getStringCellValue();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtil.isNullOrEmpty(actualTime)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!checkDate(actualTime)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">&quot;实际时间格式为YYYY-MM-DD,请先调整时间格式&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            milepost.setActualTime(LocalDateTime.parse(actualTime));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        milepost.setReasonsOfDelay(row.getCell(<span class="number">3</span>).getStringCellValue());</span><br><span class="line">        milepost.setPromoteMeasures(row.getCell(<span class="number">4</span>).getStringCellValue());</span><br><span class="line"></span><br><span class="line">        milepost.setDeleted(<span class="keyword">false</span>);</span><br><span class="line">        milepost.setCreateTime(LocalDateTime.now());</span><br><span class="line">        milepost.setCreateUser(currentLoginUserId);</span><br><span class="line">        milepost.setConId(id);</span><br><span class="line">        milepost.setType(milepostType);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> milepost;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>由于数据录入频率不会过于频繁，所以只需创建一个Controller即可 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/excelInputData&quot;)</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;模板数据导入&quot;, response = Result.class)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">excelInputData</span><span class="params">(<span class="meta">@RequestParam(&quot;type&quot;)</span> <span class="keyword">int</span> type, <span class="meta">@RequestParam(&quot;id&quot;)</span> <span class="keyword">long</span> id, <span class="meta">@RequestParam(value = &quot;milepostType&quot;, required = false)</span> <span class="keyword">int</span> milepostType, <span class="meta">@RequestParam(&quot;file&quot;)</span> MultipartFile file)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 根据传入的Type不同过去不同的模板子对象进行解析</span></span><br><span class="line">        LoadExcelDataEnum excelDataEnum = LoadExcelDataEnum.loadEnum(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据type获取所需要的模板对象</span></span><br><span class="line">        AbstractLoadExcelDataTemplate template = excelDataEnum.createTemplate();</span><br><span class="line"></span><br><span class="line">        template.currentLoginUserId = getUserId();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 加载模板所需基础数据</span></span><br><span class="line">        excelDataEnum.loadTemplateNeedBaseData(template, deptService, projectTypeService, dictionaryService, userService, userRoleService, projectService, settleTransferFinalService, researchReferenceNumService, investPlanInfoService, milepostService, id, milepostType);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 导入Excel数据</span></span><br><span class="line">        template.inputData(file);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ResultGenerator.genSuccessResult();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (BusinessException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> ResultGenerator.genFailResult(e.message);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> ResultGenerator.genFailResult(ErrorCode.SYS_ERROR);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码中本应采用工厂模式判断type类型获取不同的模板子对象，但博主可能偏爱枚举对象，认为枚举对象就是工厂和策略的合集，所以上方采用枚举的方式进行获取模板对象。</p><p>枚举对象LoadExcelDataEnum</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> LoadExcelDataEnum &#123;</span><br><span class="line"></span><br><span class="line">    PROJECT(<span class="number">1</span>, <span class="string">&quot;项目基本信息导入模板.xlsx&quot;</span>) &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> AbstractLoadExcelDataTemplate <span class="title">createTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> LoadProjectBaseData();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadTemplateNeedBaseData</span><span class="params">(AbstractLoadExcelDataTemplate template, DeptService deptService, ProjectTypeService projectTypeService, DictionaryService dictionaryService, UserService userService, UserRoleService userRoleService, ProjectService projectService, SettleTransferFinalService settleTransferFinalService, ResearchReferenceNumService researchReferenceNumService, InvestPlanInfoService investPlanInfoService, MilepostService milepostService, <span class="keyword">long</span> id, <span class="keyword">int</span> milepostType)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// 加载基础数据，以便减少查询次数</span></span><br><span class="line">            List&lt;Dept&gt; deptList = deptService.list();</span><br><span class="line">            List&lt;ProjectType&gt; projectTypeList = projectTypeService.list();</span><br><span class="line">            List&lt;Dictionary&gt; projectYearList = dictionaryService.list(<span class="keyword">new</span> QueryWrapper&lt;Dictionary&gt;().eq(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;ProjectYear&quot;</span>).eq(<span class="string">&quot;status&quot;</span>, <span class="string">&quot;1&quot;</span>).eq(<span class="string">&quot;deleted&quot;</span>, <span class="string">&quot;0&quot;</span>));</span><br><span class="line">            List&lt;Dictionary&gt; projectCategoryList = dictionaryService.list(<span class="keyword">new</span> QueryWrapper&lt;Dictionary&gt;().eq(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;ProjectCategory&quot;</span>).eq(<span class="string">&quot;status&quot;</span>, <span class="string">&quot;1&quot;</span>).eq(<span class="string">&quot;deleted&quot;</span>, <span class="string">&quot;0&quot;</span>));</span><br><span class="line">            List&lt;Dictionary&gt; projectNatureList = dictionaryService.list(<span class="keyword">new</span> QueryWrapper&lt;Dictionary&gt;().eq(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;ProjectNature&quot;</span>).eq(<span class="string">&quot;status&quot;</span>, <span class="string">&quot;1&quot;</span>).eq(<span class="string">&quot;deleted&quot;</span>, <span class="string">&quot;0&quot;</span>));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 将基础数据放入模板</span></span><br><span class="line">            template.setProjectYear(projectYearList);</span><br><span class="line">            template.setProjectCategory(projectCategoryList);</span><br><span class="line">            template.setProjectNature(projectNatureList);</span><br><span class="line">            template.setProjectType(projectTypeList);</span><br><span class="line">            template.setDept(deptList);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 注入操作对象</span></span><br><span class="line">            template.userService = userService;</span><br><span class="line">            template.userRoleService = userRoleService;</span><br><span class="line">            template.projectService = projectService;</span><br><span class="line">            template.settleTransferFinalService = settleTransferFinalService;</span><br><span class="line">            template.researchReferenceNumService = researchReferenceNumService;</span><br><span class="line">            template.investPlanInfoService = investPlanInfoService;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    MILEPOST(<span class="number">2</span>, <span class="string">&quot;里程碑导入模板.xlsx&quot;</span>) &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> AbstractLoadExcelDataTemplate <span class="title">createTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> LoadMilepostData();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadTemplateNeedBaseData</span><span class="params">(AbstractLoadExcelDataTemplate template, DeptService deptService, ProjectTypeService projectTypeService, DictionaryService dictionaryService, UserService userService, UserRoleService userRoleService, ProjectService projectService, SettleTransferFinalService settleTransferFinalService, ResearchReferenceNumService researchReferenceNumService, InvestPlanInfoService investPlanInfoService, MilepostService milepostService, <span class="keyword">long</span> id, <span class="keyword">int</span> milepostType)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            template.id = id;</span><br><span class="line">            template.milepostType = milepostType;</span><br><span class="line">            template.milepostService = milepostService;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> type;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line"></span><br><span class="line">    LoadExcelDataEnum(<span class="keyword">int</span> type, String name) &#123;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LoadExcelDataEnum <span class="title">loadEnum</span><span class="params">(<span class="keyword">int</span> type)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (LoadExcelDataEnum excelDataEnum : values()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (excelDataEnum.type == type) &#123;</span><br><span class="line">                <span class="keyword">return</span> excelDataEnum;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AbstractLoadExcelDataTemplate <span class="title">createTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadTemplateNeedBaseData</span><span class="params">(AbstractLoadExcelDataTemplate template, DeptService deptService, ProjectTypeService projectTypeService, DictionaryService dictionaryService, UserService userService, UserRoleService userRoleService, ProjectService projectService, SettleTransferFinalService settleTransferFinalService, ResearchReferenceNumService researchReferenceNumService, InvestPlanInfoService investPlanInfoService, MilepostService milepostService, <span class="keyword">long</span> id, <span class="keyword">int</span> milepostType)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="模板模式在源码中的体现"><a href="#模板模式在源码中的体现" class="headerlink" title="模板模式在源码中的体现"></a>模板模式在源码中的体现</h3><p>先来看 JDK 中的 AbstractList，来看代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> java.util;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractList</span>&lt;<span class="title">E</span>&gt; <span class="keyword">extends</span> <span class="title">AbstractCollection</span>&lt;<span class="title">E</span>&gt; <span class="keyword">implements</span> <span class="title">List</span>&lt;<span class="title">E</span>&gt; </span>&#123; </span><br><span class="line">  ...</span><br><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">public</span> E <span class="title">get</span><span class="params">(<span class="keyword">int</span> index)</span></span>; </span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们看到 get()是一个抽象方法，那么它的逻辑就是交给子类来实现，我们大家所熟知的 ArrayList 就是 AbstractList 的子类。同理，有 AbstractList 就有 AbstractSet 和 AbstractMap，有兴趣的可以去看看这些的源码实现。还有一个每天都在用的 HttpServlet，有三个方法 service()和 doGet()、doPost()方法，都是模板方法的抽象实现。</p><p>在 MyBatis 框架也有一些经典的应用，比如 BaseExecutor 类，它是一个基础的 SQL 执行类，实现了大部分的 SQL 执行逻辑，然后把几个方法交给子类定制化完成，源码如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseExecutor</span> <span class="keyword">implements</span> <span class="title">Executor</span> </span>&#123; </span><br><span class="line">  ...</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">int</span> <span class="title">doUpdate</span><span class="params">(MappedStatement var1, Object var2)</span> <span class="keyword">throws</span> SQLException</span>;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> List&lt;BatchResult&gt; <span class="title">doFlushStatements</span><span class="params">(<span class="keyword">boolean</span> var1)</span> <span class="keyword">throws</span> SQLException</span>;</span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">abstract</span> &lt;E&gt; <span class="function">List&lt;E&gt; <span class="title">doQuery</span><span class="params">(MappedStatement var1, Object var2, RowBounds var3, ResultHandler var4, BoundSql var5)</span> <span class="keyword">throws</span> SQLException</span>;</span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">abstract</span> &lt;E&gt; <span class="function">Cursor&lt;E&gt; <span class="title">doQueryCursor</span><span class="params">(MappedStatement var1, Object var2, RowBounds var3, BoundSql var4)</span> <span class="keyword">throws</span> SQLException</span>;</span><br><span class="line">... </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如 doUpdate、doFlushStatements、doQuery、doQueryCursor 这几个方法就是交由子类来实现，下面是它的类图:</p><p><img src= "/img/loading.gif" data-lazy-src="http://127.0.0.1/image/blog/image-20200328183440955.png" alt="image-20200328183440955"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 模板模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis学习总结</title>
      <link href="/posts/202006030942.html"/>
      <url>/posts/202006030942.html</url>
      
        <content type="html"><![CDATA[<h1 id="Mybatis的介绍"><a href="#Mybatis的介绍" class="headerlink" title="Mybatis的介绍"></a>Mybatis的介绍</h1><hr><h2 id="Mybatis的特性"><a href="#Mybatis的特性" class="headerlink" title="Mybatis的特性"></a>Mybatis的特性</h2><ul><li>使用连接池对连接进行管理</li><li>SQL和代码分离,集中管理</li><li>参数可以映射并且可以写动态SQL</li><li>结果集映射</li><li>缓存管理</li><li>重复SQL可以提取重复使用</li><li>提供插件机制</li></ul><h2 id="Mybatis的核心对象和其生命周期"><a href="#Mybatis的核心对象和其生命周期" class="headerlink" title="Mybatis的核心对象和其生命周期"></a>Mybatis的核心对象和其生命周期</h2><table><thead><tr><th>对象</th><th>生命周期</th></tr></thead><tbody><tr><td>SqlSeesionFactoryBuiler</td><td>方法局部 (method)</td></tr><tr><td>SqlSessionFactory (单例)</td><td>应用级别 (application)</td></tr><tr><td>SqlSession</td><td>请求和操作 (request/method)</td></tr><tr><td>Mapper</td><td>方法 (method)</td></tr></tbody></table><h2 id="Mybatis的配置文件加载"><a href="#Mybatis的配置文件加载" class="headerlink" title="Mybatis的配置文件加载"></a>Mybatis的配置文件加载</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String resource = <span class="string">&quot;/mybatis-config.xml&quot;</span>;</span><br><span class="line">InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br></pre></td></tr></table></figure><p>Mybatis会将配置文件加载到Configurition这个配置对象中(在SqlSessionFactoryBuilder中会对xml配置文件进行解析,并且通过XMLConfigBuilder对象将标签配置解析到Configuration对象中).</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">XMLConfigBuilder</span><span class="params">(XPathParser parser, String environment, Properties props)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(<span class="keyword">new</span> Configuration());</span><br><span class="line">    <span class="keyword">this</span>.localReflectorFactory = <span class="keyword">new</span> DefaultReflectorFactory();</span><br><span class="line">    ErrorContext.instance().resource(<span class="string">&quot;SQL Mapper Configuration&quot;</span>);</span><br><span class="line">    <span class="keyword">this</span>.configuration.setVariables(props);</span><br><span class="line">    <span class="keyword">this</span>.parsed = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">this</span>.environment = environment;</span><br><span class="line">    <span class="keyword">this</span>.parser = parser;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Mybatis的一些配置"><a href="#Mybatis的一些配置" class="headerlink" title="Mybatis的一些配置"></a>Mybatis的一些配置</h2><blockquote><p>TypeHandlers</p></blockquote><p>Mybatis之所以可以将java类型与数据库类型进行转换是因为mybatis提供了大量的类型处理器(typeHandler),mybatis使用TypeHandlerRegistry对象去处理数据类型的对应,代码如下 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">TypeHandlerRegistry</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;JdbcType, TypeHandler&lt;?&gt;&gt; JDBC_TYPE_HANDLER_MAP = <span class="keyword">new</span> EnumMap(JdbcType.class);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;Type, Map&lt;JdbcType, TypeHandler&lt;?&gt;&gt;&gt; TYPE_HANDLER_MAP = <span class="keyword">new</span> ConcurrentHashMap();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> TypeHandler&lt;Object&gt; UNKNOWN_TYPE_HANDLER = <span class="keyword">new</span> UnknownTypeHandler(<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;Class&lt;?&gt;, TypeHandler&lt;?&gt;&gt; ALL_TYPE_HANDLERS_MAP = <span class="keyword">new</span> HashMap();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;JdbcType, TypeHandler&lt;?&gt;&gt; NULL_TYPE_HANDLER_MAP = <span class="keyword">new</span> HashMap();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TypeHandlerRegistry</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Boolean.class, (TypeHandler)(<span class="keyword">new</span> BooleanTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Boolean.TYPE, (TypeHandler)(<span class="keyword">new</span> BooleanTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.BOOLEAN, (TypeHandler)(<span class="keyword">new</span> BooleanTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.BIT, (TypeHandler)(<span class="keyword">new</span> BooleanTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Byte.class, (TypeHandler)(<span class="keyword">new</span> ByteTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Byte.TYPE, (TypeHandler)(<span class="keyword">new</span> ByteTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.TINYINT, (TypeHandler)(<span class="keyword">new</span> ByteTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Short.class, (TypeHandler)(<span class="keyword">new</span> ShortTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Short.TYPE, (TypeHandler)(<span class="keyword">new</span> ShortTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.SMALLINT, (TypeHandler)(<span class="keyword">new</span> ShortTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Integer.class, (TypeHandler)(<span class="keyword">new</span> IntegerTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Integer.TYPE, (TypeHandler)(<span class="keyword">new</span> IntegerTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.INTEGER, (TypeHandler)(<span class="keyword">new</span> IntegerTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Long.class, (TypeHandler)(<span class="keyword">new</span> LongTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Long.TYPE, (TypeHandler)(<span class="keyword">new</span> LongTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Float.class, (TypeHandler)(<span class="keyword">new</span> FloatTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Float.TYPE, (TypeHandler)(<span class="keyword">new</span> FloatTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.FLOAT, (TypeHandler)(<span class="keyword">new</span> FloatTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Double.class, (TypeHandler)(<span class="keyword">new</span> DoubleTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Double.TYPE, (TypeHandler)(<span class="keyword">new</span> DoubleTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.DOUBLE, (TypeHandler)(<span class="keyword">new</span> DoubleTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Reader.class, (TypeHandler)(<span class="keyword">new</span> ClobReaderTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)String.class, (TypeHandler)(<span class="keyword">new</span> StringTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)String.class, JdbcType.CHAR, (TypeHandler)(<span class="keyword">new</span> StringTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)String.class, JdbcType.CLOB, (TypeHandler)(<span class="keyword">new</span> ClobTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)String.class, JdbcType.VARCHAR, (TypeHandler)(<span class="keyword">new</span> StringTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)String.class, JdbcType.LONGVARCHAR, (TypeHandler)(<span class="keyword">new</span> ClobTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)String.class, JdbcType.NVARCHAR, (TypeHandler)(<span class="keyword">new</span> NStringTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)String.class, JdbcType.NCHAR, (TypeHandler)(<span class="keyword">new</span> NStringTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)String.class, JdbcType.NCLOB, (TypeHandler)(<span class="keyword">new</span> NClobTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.CHAR, (TypeHandler)(<span class="keyword">new</span> StringTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.VARCHAR, (TypeHandler)(<span class="keyword">new</span> StringTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.CLOB, (TypeHandler)(<span class="keyword">new</span> ClobTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.LONGVARCHAR, (TypeHandler)(<span class="keyword">new</span> ClobTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.NVARCHAR, (TypeHandler)(<span class="keyword">new</span> NStringTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.NCHAR, (TypeHandler)(<span class="keyword">new</span> NStringTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.NCLOB, (TypeHandler)(<span class="keyword">new</span> NClobTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Object.class, JdbcType.ARRAY, (TypeHandler)(<span class="keyword">new</span> ArrayTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.ARRAY, (TypeHandler)(<span class="keyword">new</span> ArrayTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)BigInteger.class, (TypeHandler)(<span class="keyword">new</span> BigIntegerTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.BIGINT, (TypeHandler)(<span class="keyword">new</span> LongTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)BigDecimal.class, (TypeHandler)(<span class="keyword">new</span> BigDecimalTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.REAL, (TypeHandler)(<span class="keyword">new</span> BigDecimalTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.DECIMAL, (TypeHandler)(<span class="keyword">new</span> BigDecimalTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.NUMERIC, (TypeHandler)(<span class="keyword">new</span> BigDecimalTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)InputStream.class, (TypeHandler)(<span class="keyword">new</span> BlobInputStreamTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Byte[].class, (TypeHandler)(<span class="keyword">new</span> ByteObjectArrayTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Byte[].class, JdbcType.BLOB, (TypeHandler)(<span class="keyword">new</span> BlobByteObjectArrayTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Byte[].class, JdbcType.LONGVARBINARY, (TypeHandler)(<span class="keyword">new</span> BlobByteObjectArrayTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)<span class="keyword">byte</span>[].class, (TypeHandler)(<span class="keyword">new</span> ByteArrayTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)<span class="keyword">byte</span>[].class, JdbcType.BLOB, (TypeHandler)(<span class="keyword">new</span> BlobTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)<span class="keyword">byte</span>[].class, JdbcType.LONGVARBINARY, (TypeHandler)(<span class="keyword">new</span> BlobTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.LONGVARBINARY, (TypeHandler)(<span class="keyword">new</span> BlobTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.BLOB, (TypeHandler)(<span class="keyword">new</span> BlobTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register(Object.class, <span class="keyword">this</span>.UNKNOWN_TYPE_HANDLER);</span><br><span class="line">        <span class="keyword">this</span>.register(Object.class, JdbcType.OTHER, <span class="keyword">this</span>.UNKNOWN_TYPE_HANDLER);</span><br><span class="line">        <span class="keyword">this</span>.register(JdbcType.OTHER, <span class="keyword">this</span>.UNKNOWN_TYPE_HANDLER);</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Date.class, (TypeHandler)(<span class="keyword">new</span> DateTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Date.class, JdbcType.DATE, (TypeHandler)(<span class="keyword">new</span> DateOnlyTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Date.class, JdbcType.TIME, (TypeHandler)(<span class="keyword">new</span> TimeOnlyTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.TIMESTAMP, (TypeHandler)(<span class="keyword">new</span> DateTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.DATE, (TypeHandler)(<span class="keyword">new</span> DateOnlyTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((JdbcType)JdbcType.TIME, (TypeHandler)(<span class="keyword">new</span> TimeOnlyTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)java.sql.Date.class, (TypeHandler)(<span class="keyword">new</span> SqlDateTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Time.class, (TypeHandler)(<span class="keyword">new</span> SqlTimeTypeHandler()));</span><br><span class="line">        <span class="keyword">this</span>.register((Class)Timestamp.class, (TypeHandler)(<span class="keyword">new</span> SqlTimestampTypeHandler()));</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果业务需要对某个字段类型进行特殊处理,我们可以自定义TypeHandler进行使用,如下 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自定义类型转换器进行业务处理</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExampleTypeHandler</span> <span class="keyword">extends</span> <span class="title">BaseTypeHandler</span>&lt;<span class="title">String</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNonNullParameter</span><span class="params">(PreparedStatement ps, <span class="keyword">int</span> i, String parameter, JdbcType jdbcType)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">    ps.setString(i, parameter);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getNullableResult</span><span class="params">(ResultSet rs, String columnName)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> rs.getString(columnName);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getNullableResult</span><span class="params">(ResultSet rs, <span class="keyword">int</span> columnIndex)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> rs.getString(columnIndex);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getNullableResult</span><span class="params">(CallableStatement cs, <span class="keyword">int</span> columnIndex)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> cs.getString(columnIndex);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注册该自定义的Handler 配置mybatis-config.xml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeHandlers</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">typeHandler</span> <span class="attr">handler</span>=<span class="string">&quot;com.mybatis.test.ExampleTypeHandler&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeHandlers</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用方式一 jdbc类型转java类型 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;BaseResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;cn.az.model.ActivityApply&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;ACTIVITY_APPLY_ID&quot;</span> <span class="attr">property</span>=<span class="string">&quot;activityApplyId&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">typeHandler</span>=<span class="string">&quot;com.mybatis.test.ExampleTypeHandler&quot;</span> <span class="attr">column</span>=<span class="string">&quot;EMP_K_ACCOUNT&quot;</span> <span class="attr">property</span>=<span class="string">&quot;empKAccount&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用方式二 java类型转jdbc类型--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getBrandList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;cn.az.vo.DictionariesVo&quot;</span>&gt;</span></span><br><span class="line">select emp.BRAND_CODE as code,brand.BRAND_NAME as name</span><br><span class="line">from T_MARKET_EMPLOYEE_BRAND emp</span><br><span class="line">left join T_BRAND_INFO brand</span><br><span class="line">on brand.BRAND_CODE = emp.BRAND_CODE</span><br><span class="line">and brand.TA_CODE = #&#123;taCode, typeHandler=com.mybatis.test.ExampleTypeHandler&#125;</span><br><span class="line">where MARKET_EMPLOYEE_ID = #&#123;marketEmployeeId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>更多配置以及标签的使用可参考文档<a href="https://mybatis.org/mybatis-3/zh/">Mybatis中文学习官网</a></p><h1 id="Mybatis的缓存"><a href="#Mybatis的缓存" class="headerlink" title="Mybatis的缓存"></a>Mybatis的缓存</h1><hr><h2 id="一级缓存"><a href="#一级缓存" class="headerlink" title="一级缓存"></a>一级缓存</h2><p>一级缓存是存放在BaseExecutor执行器中的,是会话级别的缓存,无法跨会话访问,当用户访问数据库时,会先创建一个执行器,执行器访问缓存,如果已有数据则直接返回如果没有再调用数据库并且将查询结果返回用户后将数据存入缓存中。<br>一级缓存默认就是开启的,namespace级别(同namespace中共享)<br><code>mybatis的增删改操作默认是会清空缓存的,查询操作默认是不会清空缓存的,也就是在mapper.xml文件中的&lt;insert&gt;/&lt;update&gt;等标签上有flushCache属性,会有默认值,为true执行该语句后会清空缓存,为false执行该语句后不会清空缓存</code><br><a href="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309421.png"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309421.png" alt="img"></a><br><code>一级缓存如果跨会话使用的话会有脏数据,如一个会话先做一个查询然后对数据进行更新,更新后使用另一个会话去查询,此时查询的是另一个缓存中的数据而不是更新后的数据.</code><br>如果解决脏数据问题,那么就要使用二级缓存了.</p><h2 id="二级缓存"><a href="#二级缓存" class="headerlink" title="二级缓存"></a>二级缓存</h2><p>二级缓存使用的是装饰着模式,当我们开启二级缓存后mybatis会对BaseExecutor进行一个包装,该包装对象为CachingExecutor.二级缓存的管理是使用TransactionalCacheManager进行管理的.<br>如何开启二级缓存 :</p><ol><li>在mybatis-config.xml配置文件中开启二级缓存<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;cacheEnable&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li>需要在写SQL的mapper.xml文件中加上标签<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--上下两者相等,下面的属性配置为默认配置--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;cache type=&quot;org.apache.ibatis.cache.impl.PerpetualCache&quot;</span></span><br><span class="line"><span class="comment">   size=&quot;1024&quot;</span></span><br><span class="line"><span class="comment">   eviction=&quot;LRU&quot;</span></span><br><span class="line"><span class="comment">   flushInterval=&quot;120000&quot;</span></span><br><span class="line"><span class="comment">   readOnly=&quot;false&quot;/&gt; --&gt;</span></span><br></pre></td></tr></table></figure>如果开启二级缓存后,想要对某一个<code>&lt;select&gt;</code>标签进行二级缓存的使用关闭,可以使用属性<code>useCache=false</code><br><a href="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309422.png"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309422.png" alt="img"></a></li></ol><h1 id="Mybatis的批量操作方式"><a href="#Mybatis的批量操作方式" class="headerlink" title="Mybatis的批量操作方式"></a>Mybatis的批量操作方式</h1><hr><blockquote><p>通过JAVA代码</p></blockquote><p>通过java代码的方式进行for循环然后在循环内部进行新增和编辑操作(不建议使用)该方式虽然写起来简单,但是会非常消耗性能,会多次建立连接和释放连接</p><blockquote><p>mybatis支持批量操作的语句</p></blockquote><p>   SQL批量插入的语句 :<br>   <code>insert into User (id,name ....) values (1, aaa ....) , (2, bbb ....) , (3, ccc ...) ....</code><br>   mybatis 使用动态标签<code>&lt;foreach&gt;</code> 拼接成该方式去批量插入,这样会减少数据库的连接与释放的次数以减少性能的消耗,但是数据库在接受sql时会有大小的限制,默认是<code>4m</code>大小,如果SQL语句拼接的过长的话会报错.</p><blockquote><p>mybatis支持自定义批量操作执行器</p></blockquote><ol><li>自定义一个批量操作的执行器 Batch Executor</li><li>mybatis 支持三中执行器,执行器是封装在DefaultSqlSession 中的,真正执行SQL的就是该执行器,而SessionFactory所创建的Session只是提供了一些API供我们调用,执行器的三中模式 :<br>a. SIMPLE 最普通的执行器,使用的是Statement处理语句<br>b. REUSE 会重用预处理语句,使用PreparedStatement处理语句,意思是我们所执行过的语句会把它缓存起来,下次再执行的时候会从缓存里面去拿到该语句然后进行执行<br>c. BATCH 批处理执行器,JDBC链接操作数据库时提供了PreparedStatement.addBatch()方法去添加多个SQL语句,然后成批次的放入PreparedStatement的批处理执行器(executeBatch)中执行,无论是mybatis还是spirngjdbc都封装了该批处理方式</li></ol><h1 id="Mybatis的体系架构与执行流程"><a href="#Mybatis的体系架构与执行流程" class="headerlink" title="Mybatis的体系架构与执行流程"></a>Mybatis的体系架构与执行流程</h1><hr><h2 id="体系架构"><a href="#体系架构" class="headerlink" title="体系架构"></a>体系架构</h2><ol><li>提供给应用直接使用 : 接口层</li><li>处理数据库操作 : 核心层</li><li>支持工作(代码的抽取提供复用) : 基础层</li></ol><p><a href="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309423.jpg"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309423.jpg" alt="img"></a></p><h2 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h2><ol><li>解析配置文件初始化Configuration对象</li><li>使用Build创建工厂类</li><li>使用工厂类创建会话</li><li>会话操作数据库</li></ol><blockquote><p>流程图如下<br><a href="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309424.png"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309424.png" alt="img"></a></p></blockquote><blockquote><p>具体流程细节时序图</p></blockquote><ol><li><p>配置文件解析流程与SqlSessionFactory的创建过程<br><a href="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309425.png"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309425.png" alt="img"></a></p></li><li><p>会话工厂创建会话的过程<br><a href="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309426.png"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309426.png" alt="img"></a></p></li><li><p>会话工厂通过getMapper(xxx.class)获取代理对象的过程<br><a href="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309427.png"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309427.png" alt="img"></a></p></li><li><p>代理对象执行SQL的过程<br><a href="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309428.png"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202006030942/2020060309428.png" alt="img"></a></p></li></ol><p>以上大多是以流程图以及时序图展示的过程，如果想具体了解可以查看下方代码，该代码通过上方的过程摘取出Mybatis重要的构建过程，分为V1,V2两个版本,V1为简易版，V2为详细版</p><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/zhangbiao-code/mebatis"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=zhangbiao-code&repo=mebatis&theme=solarized-light&show_owner=true"/></a>]]></content>
      
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7中搭建Gitlab</title>
      <link href="/posts/202005250941.html"/>
      <url>/posts/202005250941.html</url>
      
        <content type="html"><![CDATA[<h1 id="CentOS搭建Gitlab的详细教程"><a href="#CentOS搭建Gitlab的详细教程" class="headerlink" title="CentOS搭建Gitlab的详细教程"></a>CentOS搭建Gitlab的详细教程</h1><p>记录一次CentOS搭建gitlab服务器的经历。</p><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><ol><li>服务器：CentOS7</li><li>安装文件：<a href="https://packages.gitlab.com/gitlab/gitlab-ce/packages/el/7/gitlab-ce-12.6.3-ce.0.el7.x86_64.rpm">gitlab-ce-12.6.3-ce.0.el7.x86_64.rpm</a></li></ol><h2 id="安装gitlab"><a href="#安装gitlab" class="headerlink" title="安装gitlab"></a>安装gitlab</h2><p>介绍一下两种安装方式 yum安装、rmp安装。</p><h3 id="yum安装"><a href="#yum安装" class="headerlink" title="yum安装"></a>yum安装</h3><p>这里直接参考<a href="https://about.gitlab.com/install/#centos-7">官网</a>安装教程</p><p><a href="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941-0/2020052509411.png"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509411.png" alt="gitlab安装教程"></a></p><p>打开linux系统终端，首先安装gitlab必须的ssh，以及在系统防火墙中打开HTTP、HTTPS和SSH访问。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y curl policycoreutils-python openssh-server</span><br><span class="line">sudo systemctl enable sshd</span><br><span class="line">sudo systemctl start sshd</span><br><span class="line">sudo firewall-cmd --permanent --add-service&#x3D;http</span><br><span class="line">sudo firewall-cmd --permanent --add-service&#x3D;https</span><br><span class="line">sudo systemctl reload firewalld</span><br></pre></td></tr></table></figure><p>然后是安装发送邮件功能的postfix</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install postfix</span><br><span class="line">sudo systemctl enable postfix</span><br><span class="line">sudo systemctl start postfix</span><br></pre></td></tr></table></figure><p>添加gitlab的包仓库（ee改成ce）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https:&#x2F;&#x2F;packages.gitlab.com&#x2F;install&#x2F;repositories&#x2F;gitlab&#x2F;gitlab-ce&#x2F;script.rpm.sh | sudo bash</span><br></pre></td></tr></table></figure><p>安装gitlab（EXTERNAL_URL指的是你的gitlab访问地址，这里改为http://+你的linux系统ip）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo EXTERNAL_URL&#x3D;&quot;http:&#x2F;&#x2F;当前系统的ip或域名&quot; yum install -y gitlab-ce</span><br></pre></td></tr></table></figure><h3 id="rpm安装"><a href="#rpm安装" class="headerlink" title="rpm安装"></a>rpm安装</h3><p>使用官网的安装方式下载很慢，这里可以直接下载rmp安装包手动安装。</p><p>首先去<a href="https://packages.gitlab.com/gitlab/gitlab-ce/">官网安装包仓库</a>下载我们所需的安装包版本</p><p><a href="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941-0/2020052509412.png"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509412.png" alt="官网安装包仓库"></a></p><p>下载完成之后将文件拷贝至你的linux服务器，同样需要配置ssh、防火墙、postfix，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;安装gitlab必须的ssh，以及在系统防火墙中打开HTTP、HTTPS和SSH访问。</span><br><span class="line">sudo yum install -y curl policycoreutils-python openssh-server</span><br><span class="line">sudo systemctl enable sshd</span><br><span class="line">sudo systemctl start sshd</span><br><span class="line">sudo firewall-cmd --permanent --add-service&#x3D;http</span><br><span class="line">sudo firewall-cmd --permanent --add-service&#x3D;https</span><br><span class="line">sudo systemctl reload firewalld</span><br><span class="line">&#x2F;&#x2F;安装发送邮件功能的postfix</span><br><span class="line">sudo yum install postfix</span><br><span class="line">sudo systemctl enable postfix</span><br><span class="line">sudo systemctl start postfix</span><br></pre></td></tr></table></figure><p>然后cd进入你的安装包路径进行安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;安装 example.rpm 包并在安装过程中显示正在安装的文件信息及安装进度</span><br><span class="line">rpm -ivh example.rpm</span><br></pre></td></tr></table></figure><p>出现下图即为安装成功</p><p><a href="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509413.png"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509413.png" alt="安装成功图"></a></p><p>这种方式需要我们手动进入配置文件中修改访问地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;修改文件中external_url &#39;http:&#x2F;&#x2F;你linux的ip或域名&#39;</span><br></pre></td></tr></table></figure><p>并且我们还需要修改默认的gitlab clone地址，要不每次都得自己修改</p><p><a href="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509414.png"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509414.png" alt="img"></a></p><p>修改文件配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;opt&#x2F;gitlab&#x2F;embedded&#x2F;service&#x2F;gitlab-rails&#x2F;config&#x2F;gitlab.yml</span><br></pre></td></tr></table></figure><p>将图片上标红处的Host替换成你的域名或ip</p><p><a href="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509415.png"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509415.png" alt="img"></a></p><h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p>重置并启动GitLab，执行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl reconfigure</span><br><span class="line"></span><br><span class="line">gitlab-ctl restart</span><br></pre></td></tr></table></figure><p>提示 “ok: run:”表示启动成功</p><p><a href="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509416.png"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509416.png" alt="img"></a></p><p>然后浏览器上输入你的访问地址（第一次访问会让你输入新密码，用户名默认为root）</p><p><a href="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509417.png"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/zhangbiao-code/blog_cdn@master/image/essay/202005250941/2020052509417.png" alt="img"></a></p><h2 id="修改访问端口"><a href="#修改访问端口" class="headerlink" title="修改访问端口"></a>修改访问端口</h2><p>由于unicorn默认使用的是 <code>8080</code> 端口，打开 <code>/etc/gitlab/gitlab.rb</code> ，打开 <code># unicorn[&#39;port&#39;] = 8080</code> 的注释，将 <code>8080</code> 修改为 <code>9999</code> ，保存后运行 <code>sudo gitlab-ctl reconfigure</code> 即可(该端口不可与上方修改的端口一致)。</p><h2 id="安装过程中遇到的问题"><a href="#安装过程中遇到的问题" class="headerlink" title="安装过程中遇到的问题"></a>安装过程中遇到的问题</h2><ol><li>在浏览器中访问GitLab出现502错误：<br>原因：内存不足。<br>解决办法：检查系统的虚拟内存是否随机启动了，如果系统无虚拟内存，则增加虚拟内存，再重新启动系统。</li></ol><script>$(function() {  $(".post-copyright__notice .post-copyright-info").html("本文内容源自朋友&nbsp;<a href=\"https://hasaik.com/posts/a460b91e.html\" target=\"_blank\">Xu's Blog</a>，转载请注明来自&nbsp;<a href=\"https://hasaik.com/\" target=\"_blank\">Xu's Blog</a>")})</script>]]></content>
      
      
      <categories>
          
          <category> Gitlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gitlab </tag>
            
            <tag> 安装手册 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
